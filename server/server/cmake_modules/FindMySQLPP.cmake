# - Find mysqlclient
# Find the native MySQL includes and library
#
#  MYSQL_INCLUDE_DIR - where to find mysql.h, etc.
#  MYSQL_LIBRARIES   - List of libraries when using MySQL.
#  MYSQL_FOUND       - True if MySQL found.
#  From http://www.vtk.org/Wiki/CMakeUserFindMySQL
CMAKE_MINIMUM_REQUIRED(VERSION 2.8)
IF (MYSQLPP_INCLUDE_DIR)
  # Already in cache, be silent
  SET(MYSQLPP_FIND_QUIETLY TRUE)
ENDIF (MYSQLPP_INCLUDE_DIR)

FIND_PATH(MYSQLPP_INCLUDE_DIR mysql++.h
  /usr/local/include/mysql++
  /usr/include/mysql++
  /usr/local/mysql++/include
)

SET(MYSQLPP_NAMES mysqlpp)
FIND_LIBRARY(MYSQLPP_LIBRARY
  NAMES ${MYSQLPP_NAMES}
  PATHS /usr/lib /usr/lib/mysql++ /usr/local/lib /usr/local/mysql++/lib /usr/local/lib/mysql++
)

IF (MYSQLPP_INCLUDE_DIR AND MYSQLPP_LIBRARY)
  SET(MYSQLPP_FOUND TRUE)
  SET( MYSQLPP_LIBRARIES ${MYSQLPP_LIBRARIES} )
ELSE (MYSQLPP_INCLUDE_DIR AND MYSQLPP_LIBRARY)
  SET(MYSQLPP_FOUND FALSE)
  SET( MYSQLPP_LIBRARIES )
ENDIF (MYSQLPP_INCLUDE_DIR AND MYSQLPP_LIBRARY)

IF (MYSQLPP_FOUND)
  IF (NOT MYSQLPP_FIND_QUIETLY)
    MESSAGE(STATUS "Found MySQLPP: ${MYSQLPP_LIBRARY}")
  ENDIF (NOT MYSQLPP_FIND_QUIETLY)
ELSE (MYSQLPP_FOUND)
  IF (MYSQLPP_FIND_REQUIRED)
    MESSAGE(STATUS "Looked for MySQLPP libraries named ${MYSQLPP_NAMES}.")
    MESSAGE(FATAL_ERROR "Could NOT find MySQLPP library")
  ENDIF (MYSQLPP_FIND_REQUIRED)
ENDIF (MYSQLPP_FOUND)

MARK_AS_ADVANCED(
  MYSQLPP_LIBRARY
  MYSQLPP_INCLUDE_DIR
  )

