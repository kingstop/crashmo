// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gs2client.proto

#ifndef PROTOBUF_gs2client_2eproto__INCLUDED
#define PROTOBUF_gs2client_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "common.pb.h"
// @@protoc_insertion_point(includes)

namespace message {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_gs2client_2eproto();
void protobuf_AssignDesc_gs2client_2eproto();
void protobuf_ShutdownFile_gs2client_2eproto();

class NoneCharacter2Client;
class NotifyClientInit;
class UpdateInstanceStatusReq;
class UpdateInstanceStatusACK;
class AddToyReq;
class AddToyACK;
class InstancePassReq;
class InstancePassACK;

// ===================================================================

class NoneCharacter2Client : public ::google::protobuf::Message {
 public:
  NoneCharacter2Client();
  virtual ~NoneCharacter2Client();

  NoneCharacter2Client(const NoneCharacter2Client& from);

  inline NoneCharacter2Client& operator=(const NoneCharacter2Client& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NoneCharacter2Client& default_instance();

  void Swap(NoneCharacter2Client* other);

  // implements Message ----------------------------------------------

  inline NoneCharacter2Client* New() const { return New(NULL); }

  NoneCharacter2Client* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NoneCharacter2Client& from);
  void MergeFrom(const NoneCharacter2Client& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(NoneCharacter2Client* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes instances_status = 1;
  bool has_instances_status() const;
  void clear_instances_status();
  static const int kInstancesStatusFieldNumber = 1;
  const ::std::string& instances_status() const;
  void set_instances_status(const ::std::string& value);
  void set_instances_status(const char* value);
  void set_instances_status(const void* value, size_t size);
  ::std::string* mutable_instances_status();
  ::std::string* release_instances_status();
  void set_allocated_instances_status(::std::string* instances_status);

  // repeated .message.ToyStateProperty toys = 2;
  int toys_size() const;
  void clear_toys();
  static const int kToysFieldNumber = 2;
  const ::message::ToyStateProperty& toys(int index) const;
  ::message::ToyStateProperty* mutable_toys(int index);
  ::message::ToyStateProperty* add_toys();
  const ::google::protobuf::RepeatedPtrField< ::message::ToyStateProperty >&
      toys() const;
  ::google::protobuf::RepeatedPtrField< ::message::ToyStateProperty >*
      mutable_toys();

  // repeated int32 pass_instances = 3;
  int pass_instances_size() const;
  void clear_pass_instances();
  static const int kPassInstancesFieldNumber = 3;
  ::google::protobuf::int32 pass_instances(int index) const;
  void set_pass_instances(int index, ::google::protobuf::int32 value);
  void add_pass_instances(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      pass_instances() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_pass_instances();

  // @@protoc_insertion_point(class_scope:message.NoneCharacter2Client)
 private:
  inline void set_has_instances_status();
  inline void clear_has_instances_status();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr instances_status_;
  ::google::protobuf::RepeatedPtrField< ::message::ToyStateProperty > toys_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > pass_instances_;
  friend void  protobuf_AddDesc_gs2client_2eproto();
  friend void protobuf_AssignDesc_gs2client_2eproto();
  friend void protobuf_ShutdownFile_gs2client_2eproto();

  void InitAsDefaultInstance();
  static NoneCharacter2Client* default_instance_;
};
// -------------------------------------------------------------------

class NotifyClientInit : public ::google::protobuf::Message {
 public:
  NotifyClientInit();
  virtual ~NotifyClientInit();

  NotifyClientInit(const NotifyClientInit& from);

  inline NotifyClientInit& operator=(const NotifyClientInit& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyClientInit& default_instance();

  void Swap(NotifyClientInit* other);

  // implements Message ----------------------------------------------

  inline NotifyClientInit* New() const { return New(NULL); }

  NotifyClientInit* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyClientInit& from);
  void MergeFrom(const NotifyClientInit& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(NotifyClientInit* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .message.NoneCharacter2Client data = 1;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 1;
  const ::message::NoneCharacter2Client& data() const;
  ::message::NoneCharacter2Client* mutable_data();
  ::message::NoneCharacter2Client* release_data();
  void set_allocated_data(::message::NoneCharacter2Client* data);

  // @@protoc_insertion_point(class_scope:message.NotifyClientInit)
 private:
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::message::NoneCharacter2Client* data_;
  friend void  protobuf_AddDesc_gs2client_2eproto();
  friend void protobuf_AssignDesc_gs2client_2eproto();
  friend void protobuf_ShutdownFile_gs2client_2eproto();

  void InitAsDefaultInstance();
  static NotifyClientInit* default_instance_;
};
// -------------------------------------------------------------------

class UpdateInstanceStatusReq : public ::google::protobuf::Message {
 public:
  UpdateInstanceStatusReq();
  virtual ~UpdateInstanceStatusReq();

  UpdateInstanceStatusReq(const UpdateInstanceStatusReq& from);

  inline UpdateInstanceStatusReq& operator=(const UpdateInstanceStatusReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateInstanceStatusReq& default_instance();

  void Swap(UpdateInstanceStatusReq* other);

  // implements Message ----------------------------------------------

  inline UpdateInstanceStatusReq* New() const { return New(NULL); }

  UpdateInstanceStatusReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateInstanceStatusReq& from);
  void MergeFrom(const UpdateInstanceStatusReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UpdateInstanceStatusReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes instance_status = 1;
  bool has_instance_status() const;
  void clear_instance_status();
  static const int kInstanceStatusFieldNumber = 1;
  const ::std::string& instance_status() const;
  void set_instance_status(const ::std::string& value);
  void set_instance_status(const char* value);
  void set_instance_status(const void* value, size_t size);
  ::std::string* mutable_instance_status();
  ::std::string* release_instance_status();
  void set_allocated_instance_status(::std::string* instance_status);

  // @@protoc_insertion_point(class_scope:message.UpdateInstanceStatusReq)
 private:
  inline void set_has_instance_status();
  inline void clear_has_instance_status();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr instance_status_;
  friend void  protobuf_AddDesc_gs2client_2eproto();
  friend void protobuf_AssignDesc_gs2client_2eproto();
  friend void protobuf_ShutdownFile_gs2client_2eproto();

  void InitAsDefaultInstance();
  static UpdateInstanceStatusReq* default_instance_;
};
// -------------------------------------------------------------------

class UpdateInstanceStatusACK : public ::google::protobuf::Message {
 public:
  UpdateInstanceStatusACK();
  virtual ~UpdateInstanceStatusACK();

  UpdateInstanceStatusACK(const UpdateInstanceStatusACK& from);

  inline UpdateInstanceStatusACK& operator=(const UpdateInstanceStatusACK& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateInstanceStatusACK& default_instance();

  void Swap(UpdateInstanceStatusACK* other);

  // implements Message ----------------------------------------------

  inline UpdateInstanceStatusACK* New() const { return New(NULL); }

  UpdateInstanceStatusACK* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateInstanceStatusACK& from);
  void MergeFrom(const UpdateInstanceStatusACK& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UpdateInstanceStatusACK* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:message.UpdateInstanceStatusACK)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gs2client_2eproto();
  friend void protobuf_AssignDesc_gs2client_2eproto();
  friend void protobuf_ShutdownFile_gs2client_2eproto();

  void InitAsDefaultInstance();
  static UpdateInstanceStatusACK* default_instance_;
};
// -------------------------------------------------------------------

class AddToyReq : public ::google::protobuf::Message {
 public:
  AddToyReq();
  virtual ~AddToyReq();

  AddToyReq(const AddToyReq& from);

  inline AddToyReq& operator=(const AddToyReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddToyReq& default_instance();

  void Swap(AddToyReq* other);

  // implements Message ----------------------------------------------

  inline AddToyReq* New() const { return New(NULL); }

  AddToyReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AddToyReq& from);
  void MergeFrom(const AddToyReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AddToyReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 toy_id = 1;
  bool has_toy_id() const;
  void clear_toy_id();
  static const int kToyIdFieldNumber = 1;
  ::google::protobuf::int32 toy_id() const;
  void set_toy_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:message.AddToyReq)
 private:
  inline void set_has_toy_id();
  inline void clear_has_toy_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 toy_id_;
  friend void  protobuf_AddDesc_gs2client_2eproto();
  friend void protobuf_AssignDesc_gs2client_2eproto();
  friend void protobuf_ShutdownFile_gs2client_2eproto();

  void InitAsDefaultInstance();
  static AddToyReq* default_instance_;
};
// -------------------------------------------------------------------

class AddToyACK : public ::google::protobuf::Message {
 public:
  AddToyACK();
  virtual ~AddToyACK();

  AddToyACK(const AddToyACK& from);

  inline AddToyACK& operator=(const AddToyACK& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddToyACK& default_instance();

  void Swap(AddToyACK* other);

  // implements Message ----------------------------------------------

  inline AddToyACK* New() const { return New(NULL); }

  AddToyACK* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AddToyACK& from);
  void MergeFrom(const AddToyACK& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AddToyACK* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 toy_id = 1;
  bool has_toy_id() const;
  void clear_toy_id();
  static const int kToyIdFieldNumber = 1;
  ::google::protobuf::int32 toy_id() const;
  void set_toy_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:message.AddToyACK)
 private:
  inline void set_has_toy_id();
  inline void clear_has_toy_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 toy_id_;
  friend void  protobuf_AddDesc_gs2client_2eproto();
  friend void protobuf_AssignDesc_gs2client_2eproto();
  friend void protobuf_ShutdownFile_gs2client_2eproto();

  void InitAsDefaultInstance();
  static AddToyACK* default_instance_;
};
// -------------------------------------------------------------------

class InstancePassReq : public ::google::protobuf::Message {
 public:
  InstancePassReq();
  virtual ~InstancePassReq();

  InstancePassReq(const InstancePassReq& from);

  inline InstancePassReq& operator=(const InstancePassReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InstancePassReq& default_instance();

  void Swap(InstancePassReq* other);

  // implements Message ----------------------------------------------

  inline InstancePassReq* New() const { return New(NULL); }

  InstancePassReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const InstancePassReq& from);
  void MergeFrom(const InstancePassReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(InstancePassReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 instance_id = 1;
  bool has_instance_id() const;
  void clear_instance_id();
  static const int kInstanceIdFieldNumber = 1;
  ::google::protobuf::int32 instance_id() const;
  void set_instance_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:message.InstancePassReq)
 private:
  inline void set_has_instance_id();
  inline void clear_has_instance_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 instance_id_;
  friend void  protobuf_AddDesc_gs2client_2eproto();
  friend void protobuf_AssignDesc_gs2client_2eproto();
  friend void protobuf_ShutdownFile_gs2client_2eproto();

  void InitAsDefaultInstance();
  static InstancePassReq* default_instance_;
};
// -------------------------------------------------------------------

class InstancePassACK : public ::google::protobuf::Message {
 public:
  InstancePassACK();
  virtual ~InstancePassACK();

  InstancePassACK(const InstancePassACK& from);

  inline InstancePassACK& operator=(const InstancePassACK& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InstancePassACK& default_instance();

  void Swap(InstancePassACK* other);

  // implements Message ----------------------------------------------

  inline InstancePassACK* New() const { return New(NULL); }

  InstancePassACK* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const InstancePassACK& from);
  void MergeFrom(const InstancePassACK& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(InstancePassACK* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 instance_id = 1;
  bool has_instance_id() const;
  void clear_instance_id();
  static const int kInstanceIdFieldNumber = 1;
  ::google::protobuf::int32 instance_id() const;
  void set_instance_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:message.InstancePassACK)
 private:
  inline void set_has_instance_id();
  inline void clear_has_instance_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 instance_id_;
  friend void  protobuf_AddDesc_gs2client_2eproto();
  friend void protobuf_AssignDesc_gs2client_2eproto();
  friend void protobuf_ShutdownFile_gs2client_2eproto();

  void InitAsDefaultInstance();
  static InstancePassACK* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// NoneCharacter2Client

// required bytes instances_status = 1;
inline bool NoneCharacter2Client::has_instances_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NoneCharacter2Client::set_has_instances_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NoneCharacter2Client::clear_has_instances_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NoneCharacter2Client::clear_instances_status() {
  instances_status_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_instances_status();
}
inline const ::std::string& NoneCharacter2Client::instances_status() const {
  // @@protoc_insertion_point(field_get:message.NoneCharacter2Client.instances_status)
  return instances_status_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NoneCharacter2Client::set_instances_status(const ::std::string& value) {
  set_has_instances_status();
  instances_status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message.NoneCharacter2Client.instances_status)
}
inline void NoneCharacter2Client::set_instances_status(const char* value) {
  set_has_instances_status();
  instances_status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.NoneCharacter2Client.instances_status)
}
inline void NoneCharacter2Client::set_instances_status(const void* value, size_t size) {
  set_has_instances_status();
  instances_status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.NoneCharacter2Client.instances_status)
}
inline ::std::string* NoneCharacter2Client::mutable_instances_status() {
  set_has_instances_status();
  // @@protoc_insertion_point(field_mutable:message.NoneCharacter2Client.instances_status)
  return instances_status_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NoneCharacter2Client::release_instances_status() {
  clear_has_instances_status();
  return instances_status_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NoneCharacter2Client::set_allocated_instances_status(::std::string* instances_status) {
  if (instances_status != NULL) {
    set_has_instances_status();
  } else {
    clear_has_instances_status();
  }
  instances_status_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), instances_status);
  // @@protoc_insertion_point(field_set_allocated:message.NoneCharacter2Client.instances_status)
}

// repeated .message.ToyStateProperty toys = 2;
inline int NoneCharacter2Client::toys_size() const {
  return toys_.size();
}
inline void NoneCharacter2Client::clear_toys() {
  toys_.Clear();
}
inline const ::message::ToyStateProperty& NoneCharacter2Client::toys(int index) const {
  // @@protoc_insertion_point(field_get:message.NoneCharacter2Client.toys)
  return toys_.Get(index);
}
inline ::message::ToyStateProperty* NoneCharacter2Client::mutable_toys(int index) {
  // @@protoc_insertion_point(field_mutable:message.NoneCharacter2Client.toys)
  return toys_.Mutable(index);
}
inline ::message::ToyStateProperty* NoneCharacter2Client::add_toys() {
  // @@protoc_insertion_point(field_add:message.NoneCharacter2Client.toys)
  return toys_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::message::ToyStateProperty >&
NoneCharacter2Client::toys() const {
  // @@protoc_insertion_point(field_list:message.NoneCharacter2Client.toys)
  return toys_;
}
inline ::google::protobuf::RepeatedPtrField< ::message::ToyStateProperty >*
NoneCharacter2Client::mutable_toys() {
  // @@protoc_insertion_point(field_mutable_list:message.NoneCharacter2Client.toys)
  return &toys_;
}

// repeated int32 pass_instances = 3;
inline int NoneCharacter2Client::pass_instances_size() const {
  return pass_instances_.size();
}
inline void NoneCharacter2Client::clear_pass_instances() {
  pass_instances_.Clear();
}
inline ::google::protobuf::int32 NoneCharacter2Client::pass_instances(int index) const {
  // @@protoc_insertion_point(field_get:message.NoneCharacter2Client.pass_instances)
  return pass_instances_.Get(index);
}
inline void NoneCharacter2Client::set_pass_instances(int index, ::google::protobuf::int32 value) {
  pass_instances_.Set(index, value);
  // @@protoc_insertion_point(field_set:message.NoneCharacter2Client.pass_instances)
}
inline void NoneCharacter2Client::add_pass_instances(::google::protobuf::int32 value) {
  pass_instances_.Add(value);
  // @@protoc_insertion_point(field_add:message.NoneCharacter2Client.pass_instances)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
NoneCharacter2Client::pass_instances() const {
  // @@protoc_insertion_point(field_list:message.NoneCharacter2Client.pass_instances)
  return pass_instances_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
NoneCharacter2Client::mutable_pass_instances() {
  // @@protoc_insertion_point(field_mutable_list:message.NoneCharacter2Client.pass_instances)
  return &pass_instances_;
}

// -------------------------------------------------------------------

// NotifyClientInit

// required .message.NoneCharacter2Client data = 1;
inline bool NotifyClientInit::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyClientInit::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyClientInit::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyClientInit::clear_data() {
  if (data_ != NULL) data_->::message::NoneCharacter2Client::Clear();
  clear_has_data();
}
inline const ::message::NoneCharacter2Client& NotifyClientInit::data() const {
  // @@protoc_insertion_point(field_get:message.NotifyClientInit.data)
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
inline ::message::NoneCharacter2Client* NotifyClientInit::mutable_data() {
  set_has_data();
  if (data_ == NULL) {
    data_ = new ::message::NoneCharacter2Client;
  }
  // @@protoc_insertion_point(field_mutable:message.NotifyClientInit.data)
  return data_;
}
inline ::message::NoneCharacter2Client* NotifyClientInit::release_data() {
  clear_has_data();
  ::message::NoneCharacter2Client* temp = data_;
  data_ = NULL;
  return temp;
}
inline void NotifyClientInit::set_allocated_data(::message::NoneCharacter2Client* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
  // @@protoc_insertion_point(field_set_allocated:message.NotifyClientInit.data)
}

// -------------------------------------------------------------------

// UpdateInstanceStatusReq

// required bytes instance_status = 1;
inline bool UpdateInstanceStatusReq::has_instance_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpdateInstanceStatusReq::set_has_instance_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpdateInstanceStatusReq::clear_has_instance_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpdateInstanceStatusReq::clear_instance_status() {
  instance_status_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_instance_status();
}
inline const ::std::string& UpdateInstanceStatusReq::instance_status() const {
  // @@protoc_insertion_point(field_get:message.UpdateInstanceStatusReq.instance_status)
  return instance_status_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UpdateInstanceStatusReq::set_instance_status(const ::std::string& value) {
  set_has_instance_status();
  instance_status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message.UpdateInstanceStatusReq.instance_status)
}
inline void UpdateInstanceStatusReq::set_instance_status(const char* value) {
  set_has_instance_status();
  instance_status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.UpdateInstanceStatusReq.instance_status)
}
inline void UpdateInstanceStatusReq::set_instance_status(const void* value, size_t size) {
  set_has_instance_status();
  instance_status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.UpdateInstanceStatusReq.instance_status)
}
inline ::std::string* UpdateInstanceStatusReq::mutable_instance_status() {
  set_has_instance_status();
  // @@protoc_insertion_point(field_mutable:message.UpdateInstanceStatusReq.instance_status)
  return instance_status_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UpdateInstanceStatusReq::release_instance_status() {
  clear_has_instance_status();
  return instance_status_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UpdateInstanceStatusReq::set_allocated_instance_status(::std::string* instance_status) {
  if (instance_status != NULL) {
    set_has_instance_status();
  } else {
    clear_has_instance_status();
  }
  instance_status_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), instance_status);
  // @@protoc_insertion_point(field_set_allocated:message.UpdateInstanceStatusReq.instance_status)
}

// -------------------------------------------------------------------

// UpdateInstanceStatusACK

// -------------------------------------------------------------------

// AddToyReq

// required int32 toy_id = 1;
inline bool AddToyReq::has_toy_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AddToyReq::set_has_toy_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AddToyReq::clear_has_toy_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AddToyReq::clear_toy_id() {
  toy_id_ = 0;
  clear_has_toy_id();
}
inline ::google::protobuf::int32 AddToyReq::toy_id() const {
  // @@protoc_insertion_point(field_get:message.AddToyReq.toy_id)
  return toy_id_;
}
inline void AddToyReq::set_toy_id(::google::protobuf::int32 value) {
  set_has_toy_id();
  toy_id_ = value;
  // @@protoc_insertion_point(field_set:message.AddToyReq.toy_id)
}

// -------------------------------------------------------------------

// AddToyACK

// required int32 toy_id = 1;
inline bool AddToyACK::has_toy_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AddToyACK::set_has_toy_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AddToyACK::clear_has_toy_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AddToyACK::clear_toy_id() {
  toy_id_ = 0;
  clear_has_toy_id();
}
inline ::google::protobuf::int32 AddToyACK::toy_id() const {
  // @@protoc_insertion_point(field_get:message.AddToyACK.toy_id)
  return toy_id_;
}
inline void AddToyACK::set_toy_id(::google::protobuf::int32 value) {
  set_has_toy_id();
  toy_id_ = value;
  // @@protoc_insertion_point(field_set:message.AddToyACK.toy_id)
}

// -------------------------------------------------------------------

// InstancePassReq

// required int32 instance_id = 1;
inline bool InstancePassReq::has_instance_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InstancePassReq::set_has_instance_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void InstancePassReq::clear_has_instance_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void InstancePassReq::clear_instance_id() {
  instance_id_ = 0;
  clear_has_instance_id();
}
inline ::google::protobuf::int32 InstancePassReq::instance_id() const {
  // @@protoc_insertion_point(field_get:message.InstancePassReq.instance_id)
  return instance_id_;
}
inline void InstancePassReq::set_instance_id(::google::protobuf::int32 value) {
  set_has_instance_id();
  instance_id_ = value;
  // @@protoc_insertion_point(field_set:message.InstancePassReq.instance_id)
}

// -------------------------------------------------------------------

// InstancePassACK

// required int32 instance_id = 1;
inline bool InstancePassACK::has_instance_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InstancePassACK::set_has_instance_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void InstancePassACK::clear_has_instance_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void InstancePassACK::clear_instance_id() {
  instance_id_ = 0;
  clear_has_instance_id();
}
inline ::google::protobuf::int32 InstancePassACK::instance_id() const {
  // @@protoc_insertion_point(field_get:message.InstancePassACK.instance_id)
  return instance_id_;
}
inline void InstancePassACK::set_instance_id(::google::protobuf::int32 value) {
  set_has_instance_id();
  instance_id_ = value;
  // @@protoc_insertion_point(field_set:message.InstancePassACK.instance_id)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace message

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_gs2client_2eproto__INCLUDED
