// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common.proto

#ifndef PROTOBUF_common_2eproto__INCLUDED
#define PROTOBUF_common_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace message {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_common_2eproto();
void protobuf_AssignDesc_common_2eproto();
void protobuf_ShutdownFile_common_2eproto();

class int32array;
class CrashmoMapBaseData;
class CrashMapData;
class RankMapBlogEntry;
class CrashPlayerPublishMap;
class intPair;
class CrashPlayerInfo;
class TaskConditionTypeConfig;
class TaskRewardConfig;
class TaskInfoConfig;

enum ConditionType {
  ConditionType_NULL = 0,
  ConditionType_PassOfficilGame = 1,
  ConditionType_LimitedTime = 2,
  ConditionType_LimitedStep = 3,
  ConditionType_PassUserGame = 4,
  ConditionType_Max = 5
};
bool ConditionType_IsValid(int value);
const ConditionType ConditionType_MIN = ConditionType_NULL;
const ConditionType ConditionType_MAX = ConditionType_Max;
const int ConditionType_ARRAYSIZE = ConditionType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ConditionType_descriptor();
inline const ::std::string& ConditionType_Name(ConditionType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ConditionType_descriptor(), value);
}
inline bool ConditionType_Parse(
    const ::std::string& name, ConditionType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ConditionType>(
    ConditionType_descriptor(), name, value);
}
enum ResourceType {
  ResourceType_NULL = 0,
  ResourceType_0 = 1,
  ResourceType_1 = 2,
  ResourceType_2 = 3,
  ResourceType_3 = 4,
  ResourceType_4 = 5,
  ResourceType_5 = 6,
  ResourceType_6 = 7,
  ResourceType_7 = 8,
  ResourceType_gold = 9,
  ResourceType_jewel = 10,
  ResourceType_Max = 11
};
bool ResourceType_IsValid(int value);
const ResourceType ResourceType_MIN = ResourceType_NULL;
const ResourceType ResourceType_MAX = ResourceType_Max;
const int ResourceType_ARRAYSIZE = ResourceType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ResourceType_descriptor();
inline const ::std::string& ResourceType_Name(ResourceType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ResourceType_descriptor(), value);
}
inline bool ResourceType_Parse(
    const ::std::string& name, ResourceType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ResourceType>(
    ResourceType_descriptor(), name, value);
}
// ===================================================================

class int32array : public ::google::protobuf::Message {
 public:
  int32array();
  virtual ~int32array();

  int32array(const int32array& from);

  inline int32array& operator=(const int32array& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const int32array& default_instance();

  void Swap(int32array* other);

  // implements Message ----------------------------------------------

  inline int32array* New() const { return New(NULL); }

  int32array* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const int32array& from);
  void MergeFrom(const int32array& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(int32array* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 data = 1;
  int data_size() const;
  void clear_data();
  static const int kDataFieldNumber = 1;
  ::google::protobuf::int32 data(int index) const;
  void set_data(int index, ::google::protobuf::int32 value);
  void add_data(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      data() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_data();

  // @@protoc_insertion_point(class_scope:message.int32array)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > data_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static int32array* default_instance_;
};
// -------------------------------------------------------------------

class CrashmoMapBaseData : public ::google::protobuf::Message {
 public:
  CrashmoMapBaseData();
  virtual ~CrashmoMapBaseData();

  CrashmoMapBaseData(const CrashmoMapBaseData& from);

  inline CrashmoMapBaseData& operator=(const CrashmoMapBaseData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CrashmoMapBaseData& default_instance();

  void Swap(CrashmoMapBaseData* other);

  // implements Message ----------------------------------------------

  inline CrashmoMapBaseData* New() const { return New(NULL); }

  CrashmoMapBaseData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CrashmoMapBaseData& from);
  void MergeFrom(const CrashmoMapBaseData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CrashmoMapBaseData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 width = 1;
  bool has_width() const;
  void clear_width();
  static const int kWidthFieldNumber = 1;
  ::google::protobuf::int32 width() const;
  void set_width(::google::protobuf::int32 value);

  // required int32 height = 2;
  bool has_height() const;
  void clear_height();
  static const int kHeightFieldNumber = 2;
  ::google::protobuf::int32 height() const;
  void set_height(::google::protobuf::int32 value);

  // repeated .message.int32array map_data = 3;
  int map_data_size() const;
  void clear_map_data();
  static const int kMapDataFieldNumber = 3;
  const ::message::int32array& map_data(int index) const;
  ::message::int32array* mutable_map_data(int index);
  ::message::int32array* add_map_data();
  const ::google::protobuf::RepeatedPtrField< ::message::int32array >&
      map_data() const;
  ::google::protobuf::RepeatedPtrField< ::message::int32array >*
      mutable_map_data();

  // required uint64 map_index = 5;
  bool has_map_index() const;
  void clear_map_index();
  static const int kMapIndexFieldNumber = 5;
  ::google::protobuf::uint64 map_index() const;
  void set_map_index(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:message.CrashmoMapBaseData)
 private:
  inline void set_has_width();
  inline void clear_has_width();
  inline void set_has_height();
  inline void clear_has_height();
  inline void set_has_map_index();
  inline void clear_has_map_index();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 width_;
  ::google::protobuf::int32 height_;
  ::google::protobuf::RepeatedPtrField< ::message::int32array > map_data_;
  ::google::protobuf::uint64 map_index_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static CrashmoMapBaseData* default_instance_;
};
// -------------------------------------------------------------------

class CrashMapData : public ::google::protobuf::Message {
 public:
  CrashMapData();
  virtual ~CrashMapData();

  CrashMapData(const CrashMapData& from);

  inline CrashMapData& operator=(const CrashMapData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CrashMapData& default_instance();

  void Swap(CrashMapData* other);

  // implements Message ----------------------------------------------

  inline CrashMapData* New() const { return New(NULL); }

  CrashMapData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CrashMapData& from);
  void MergeFrom(const CrashMapData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CrashMapData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .message.CrashmoMapBaseData Data = 1;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 1;
  const ::message::CrashmoMapBaseData& data() const;
  ::message::CrashmoMapBaseData* mutable_data();
  ::message::CrashmoMapBaseData* release_data();
  void set_allocated_data(::message::CrashmoMapBaseData* data);

  // required string MapName = 2;
  bool has_mapname() const;
  void clear_mapname();
  static const int kMapNameFieldNumber = 2;
  const ::std::string& mapname() const;
  void set_mapname(const ::std::string& value);
  void set_mapname(const char* value);
  void set_mapname(const char* value, size_t size);
  ::std::string* mutable_mapname();
  ::std::string* release_mapname();
  void set_allocated_mapname(::std::string* mapname);

  // required string CreaterName = 3;
  bool has_creatername() const;
  void clear_creatername();
  static const int kCreaterNameFieldNumber = 3;
  const ::std::string& creatername() const;
  void set_creatername(const ::std::string& value);
  void set_creatername(const char* value);
  void set_creatername(const char* value, size_t size);
  ::std::string* mutable_creatername();
  ::std::string* release_creatername();
  void set_allocated_creatername(::std::string* creatername);

  // required int32 Section = 4;
  bool has_section() const;
  void clear_section();
  static const int kSectionFieldNumber = 4;
  ::google::protobuf::int32 section() const;
  void set_section(::google::protobuf::int32 value);

  // required int32 Chapter = 5;
  bool has_chapter() const;
  void clear_chapter();
  static const int kChapterFieldNumber = 5;
  ::google::protobuf::int32 chapter() const;
  void set_chapter(::google::protobuf::int32 value);

  // required uint64 create_time = 6;
  bool has_create_time() const;
  void clear_create_time();
  static const int kCreateTimeFieldNumber = 6;
  ::google::protobuf::uint64 create_time() const;
  void set_create_time(::google::protobuf::uint64 value);

  // required int32 gold = 7;
  bool has_gold() const;
  void clear_gold();
  static const int kGoldFieldNumber = 7;
  ::google::protobuf::int32 gold() const;
  void set_gold(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:message.CrashMapData)
 private:
  inline void set_has_data();
  inline void clear_has_data();
  inline void set_has_mapname();
  inline void clear_has_mapname();
  inline void set_has_creatername();
  inline void clear_has_creatername();
  inline void set_has_section();
  inline void clear_has_section();
  inline void set_has_chapter();
  inline void clear_has_chapter();
  inline void set_has_create_time();
  inline void clear_has_create_time();
  inline void set_has_gold();
  inline void clear_has_gold();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::message::CrashmoMapBaseData* data_;
  ::google::protobuf::internal::ArenaStringPtr mapname_;
  ::google::protobuf::internal::ArenaStringPtr creatername_;
  ::google::protobuf::int32 section_;
  ::google::protobuf::int32 chapter_;
  ::google::protobuf::uint64 create_time_;
  ::google::protobuf::int32 gold_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static CrashMapData* default_instance_;
};
// -------------------------------------------------------------------

class RankMapBlogEntry : public ::google::protobuf::Message {
 public:
  RankMapBlogEntry();
  virtual ~RankMapBlogEntry();

  RankMapBlogEntry(const RankMapBlogEntry& from);

  inline RankMapBlogEntry& operator=(const RankMapBlogEntry& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RankMapBlogEntry& default_instance();

  void Swap(RankMapBlogEntry* other);

  // implements Message ----------------------------------------------

  inline RankMapBlogEntry* New() const { return New(NULL); }

  RankMapBlogEntry* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RankMapBlogEntry& from);
  void MergeFrom(const RankMapBlogEntry& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RankMapBlogEntry* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 acc = 1;
  bool has_acc() const;
  void clear_acc();
  static const int kAccFieldNumber = 1;
  ::google::protobuf::uint64 acc() const;
  void set_acc(::google::protobuf::uint64 value);

  // required string name = 2;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // required string sugges_ = 3;
  bool has_sugges_() const;
  void clear_sugges_();
  static const int kSuggesFieldNumber = 3;
  const ::std::string& sugges_() const;
  void set_sugges_(const ::std::string& value);
  void set_sugges_(const char* value);
  void set_sugges_(const char* value, size_t size);
  ::std::string* mutable_sugges_();
  ::std::string* release_sugges_();
  void set_allocated_sugges_(::std::string* sugges_);

  // required int32 time = 4;
  bool has_time() const;
  void clear_time();
  static const int kTimeFieldNumber = 4;
  ::google::protobuf::int32 time() const;
  void set_time(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:message.RankMapBlogEntry)
 private:
  inline void set_has_acc();
  inline void clear_has_acc();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_sugges_();
  inline void clear_has_sugges_();
  inline void set_has_time();
  inline void clear_has_time();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 acc_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr sugges__;
  ::google::protobuf::int32 time_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static RankMapBlogEntry* default_instance_;
};
// -------------------------------------------------------------------

class CrashPlayerPublishMap : public ::google::protobuf::Message {
 public:
  CrashPlayerPublishMap();
  virtual ~CrashPlayerPublishMap();

  CrashPlayerPublishMap(const CrashPlayerPublishMap& from);

  inline CrashPlayerPublishMap& operator=(const CrashPlayerPublishMap& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CrashPlayerPublishMap& default_instance();

  void Swap(CrashPlayerPublishMap* other);

  // implements Message ----------------------------------------------

  inline CrashPlayerPublishMap* New() const { return New(NULL); }

  CrashPlayerPublishMap* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CrashPlayerPublishMap& from);
  void MergeFrom(const CrashPlayerPublishMap& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CrashPlayerPublishMap* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .message.CrashMapData crashmap = 1;
  bool has_crashmap() const;
  void clear_crashmap();
  static const int kCrashmapFieldNumber = 1;
  const ::message::CrashMapData& crashmap() const;
  ::message::CrashMapData* mutable_crashmap();
  ::message::CrashMapData* release_crashmap();
  void set_allocated_crashmap(::message::CrashMapData* crashmap);

  // required uint64 publish_time = 2;
  bool has_publish_time() const;
  void clear_publish_time();
  static const int kPublishTimeFieldNumber = 2;
  ::google::protobuf::uint64 publish_time() const;
  void set_publish_time(::google::protobuf::uint64 value);

  // required int32 challenge_times = 3;
  bool has_challenge_times() const;
  void clear_challenge_times();
  static const int kChallengeTimesFieldNumber = 3;
  ::google::protobuf::int32 challenge_times() const;
  void set_challenge_times(::google::protobuf::int32 value);

  // required int32 failed_of_challenge_times = 4;
  bool has_failed_of_challenge_times() const;
  void clear_failed_of_challenge_times();
  static const int kFailedOfChallengeTimesFieldNumber = 4;
  ::google::protobuf::int32 failed_of_challenge_times() const;
  void set_failed_of_challenge_times(::google::protobuf::int32 value);

  // required int32 map_rank = 5;
  bool has_map_rank() const;
  void clear_map_rank();
  static const int kMapRankFieldNumber = 5;
  ::google::protobuf::int32 map_rank() const;
  void set_map_rank(::google::protobuf::int32 value);

  // repeated .message.RankMapBlogEntry map_blog = 6;
  int map_blog_size() const;
  void clear_map_blog();
  static const int kMapBlogFieldNumber = 6;
  const ::message::RankMapBlogEntry& map_blog(int index) const;
  ::message::RankMapBlogEntry* mutable_map_blog(int index);
  ::message::RankMapBlogEntry* add_map_blog();
  const ::google::protobuf::RepeatedPtrField< ::message::RankMapBlogEntry >&
      map_blog() const;
  ::google::protobuf::RepeatedPtrField< ::message::RankMapBlogEntry >*
      mutable_map_blog();

  // @@protoc_insertion_point(class_scope:message.CrashPlayerPublishMap)
 private:
  inline void set_has_crashmap();
  inline void clear_has_crashmap();
  inline void set_has_publish_time();
  inline void clear_has_publish_time();
  inline void set_has_challenge_times();
  inline void clear_has_challenge_times();
  inline void set_has_failed_of_challenge_times();
  inline void clear_has_failed_of_challenge_times();
  inline void set_has_map_rank();
  inline void clear_has_map_rank();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::message::CrashMapData* crashmap_;
  ::google::protobuf::uint64 publish_time_;
  ::google::protobuf::int32 challenge_times_;
  ::google::protobuf::int32 failed_of_challenge_times_;
  ::google::protobuf::RepeatedPtrField< ::message::RankMapBlogEntry > map_blog_;
  ::google::protobuf::int32 map_rank_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static CrashPlayerPublishMap* default_instance_;
};
// -------------------------------------------------------------------

class intPair : public ::google::protobuf::Message {
 public:
  intPair();
  virtual ~intPair();

  intPair(const intPair& from);

  inline intPair& operator=(const intPair& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const intPair& default_instance();

  void Swap(intPair* other);

  // implements Message ----------------------------------------------

  inline intPair* New() const { return New(NULL); }

  intPair* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const intPair& from);
  void MergeFrom(const intPair& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(intPair* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 number_1 = 1;
  bool has_number_1() const;
  void clear_number_1();
  static const int kNumber1FieldNumber = 1;
  ::google::protobuf::int32 number_1() const;
  void set_number_1(::google::protobuf::int32 value);

  // required int32 number_2 = 2;
  bool has_number_2() const;
  void clear_number_2();
  static const int kNumber2FieldNumber = 2;
  ::google::protobuf::int32 number_2() const;
  void set_number_2(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:message.intPair)
 private:
  inline void set_has_number_1();
  inline void clear_has_number_1();
  inline void set_has_number_2();
  inline void clear_has_number_2();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 number_1_;
  ::google::protobuf::int32 number_2_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static intPair* default_instance_;
};
// -------------------------------------------------------------------

class CrashPlayerInfo : public ::google::protobuf::Message {
 public:
  CrashPlayerInfo();
  virtual ~CrashPlayerInfo();

  CrashPlayerInfo(const CrashPlayerInfo& from);

  inline CrashPlayerInfo& operator=(const CrashPlayerInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CrashPlayerInfo& default_instance();

  void Swap(CrashPlayerInfo* other);

  // implements Message ----------------------------------------------

  inline CrashPlayerInfo* New() const { return New(NULL); }

  CrashPlayerInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CrashPlayerInfo& from);
  void MergeFrom(const CrashPlayerInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CrashPlayerInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 account = 1;
  bool has_account() const;
  void clear_account();
  static const int kAccountFieldNumber = 1;
  ::google::protobuf::uint64 account() const;
  void set_account(::google::protobuf::uint64 value);

  // required int32 pass_chapter = 2;
  bool has_pass_chapter() const;
  void clear_pass_chapter();
  static const int kPassChapterFieldNumber = 2;
  ::google::protobuf::int32 pass_chapter() const;
  void set_pass_chapter(::google::protobuf::int32 value);

  // required int32 pass_section = 4;
  bool has_pass_section() const;
  void clear_pass_section();
  static const int kPassSectionFieldNumber = 4;
  ::google::protobuf::int32 pass_section() const;
  void set_pass_section(::google::protobuf::int32 value);

  // required string name = 5;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 5;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // repeated .message.CrashMapData IncompleteMap = 6;
  int incompletemap_size() const;
  void clear_incompletemap();
  static const int kIncompleteMapFieldNumber = 6;
  const ::message::CrashMapData& incompletemap(int index) const;
  ::message::CrashMapData* mutable_incompletemap(int index);
  ::message::CrashMapData* add_incompletemap();
  const ::google::protobuf::RepeatedPtrField< ::message::CrashMapData >&
      incompletemap() const;
  ::google::protobuf::RepeatedPtrField< ::message::CrashMapData >*
      mutable_incompletemap();

  // repeated .message.CrashMapData CompleteMap = 7;
  int completemap_size() const;
  void clear_completemap();
  static const int kCompleteMapFieldNumber = 7;
  const ::message::CrashMapData& completemap(int index) const;
  ::message::CrashMapData* mutable_completemap(int index);
  ::message::CrashMapData* add_completemap();
  const ::google::protobuf::RepeatedPtrField< ::message::CrashMapData >&
      completemap() const;
  ::google::protobuf::RepeatedPtrField< ::message::CrashMapData >*
      mutable_completemap();

  // required bool isadmin = 8;
  bool has_isadmin() const;
  void clear_isadmin();
  static const int kIsadminFieldNumber = 8;
  bool isadmin() const;
  void set_isadmin(bool value);

  // repeated .message.intPair resources = 9;
  int resources_size() const;
  void clear_resources();
  static const int kResourcesFieldNumber = 9;
  const ::message::intPair& resources(int index) const;
  ::message::intPair* mutable_resources(int index);
  ::message::intPair* add_resources();
  const ::google::protobuf::RepeatedPtrField< ::message::intPair >&
      resources() const;
  ::google::protobuf::RepeatedPtrField< ::message::intPair >*
      mutable_resources();

  // required int32 map_width = 10;
  bool has_map_width() const;
  void clear_map_width();
  static const int kMapWidthFieldNumber = 10;
  ::google::protobuf::int32 map_width() const;
  void set_map_width(::google::protobuf::int32 value);

  // required int32 map_height = 11;
  bool has_map_height() const;
  void clear_map_height();
  static const int kMapHeightFieldNumber = 11;
  ::google::protobuf::int32 map_height() const;
  void set_map_height(::google::protobuf::int32 value);

  // required int32 map_count = 12;
  bool has_map_count() const;
  void clear_map_count();
  static const int kMapCountFieldNumber = 12;
  ::google::protobuf::int32 map_count() const;
  void set_map_count(::google::protobuf::int32 value);

  // required int32 gold = 13;
  bool has_gold() const;
  void clear_gold();
  static const int kGoldFieldNumber = 13;
  ::google::protobuf::int32 gold() const;
  void set_gold(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:message.CrashPlayerInfo)
 private:
  inline void set_has_account();
  inline void clear_has_account();
  inline void set_has_pass_chapter();
  inline void clear_has_pass_chapter();
  inline void set_has_pass_section();
  inline void clear_has_pass_section();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_isadmin();
  inline void clear_has_isadmin();
  inline void set_has_map_width();
  inline void clear_has_map_width();
  inline void set_has_map_height();
  inline void clear_has_map_height();
  inline void set_has_map_count();
  inline void clear_has_map_count();
  inline void set_has_gold();
  inline void clear_has_gold();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 account_;
  ::google::protobuf::int32 pass_chapter_;
  ::google::protobuf::int32 pass_section_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::RepeatedPtrField< ::message::CrashMapData > incompletemap_;
  ::google::protobuf::RepeatedPtrField< ::message::CrashMapData > completemap_;
  ::google::protobuf::RepeatedPtrField< ::message::intPair > resources_;
  bool isadmin_;
  ::google::protobuf::int32 map_width_;
  ::google::protobuf::int32 map_height_;
  ::google::protobuf::int32 map_count_;
  ::google::protobuf::int32 gold_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static CrashPlayerInfo* default_instance_;
};
// -------------------------------------------------------------------

class TaskConditionTypeConfig : public ::google::protobuf::Message {
 public:
  TaskConditionTypeConfig();
  virtual ~TaskConditionTypeConfig();

  TaskConditionTypeConfig(const TaskConditionTypeConfig& from);

  inline TaskConditionTypeConfig& operator=(const TaskConditionTypeConfig& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TaskConditionTypeConfig& default_instance();

  void Swap(TaskConditionTypeConfig* other);

  // implements Message ----------------------------------------------

  inline TaskConditionTypeConfig* New() const { return New(NULL); }

  TaskConditionTypeConfig* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TaskConditionTypeConfig& from);
  void MergeFrom(const TaskConditionTypeConfig& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TaskConditionTypeConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .message.ConditionType condition = 1 [default = ConditionType_NULL];
  bool has_condition() const;
  void clear_condition();
  static const int kConditionFieldNumber = 1;
  ::message::ConditionType condition() const;
  void set_condition(::message::ConditionType value);

  // required int32 argu_1 = 2;
  bool has_argu_1() const;
  void clear_argu_1();
  static const int kArgu1FieldNumber = 2;
  ::google::protobuf::int32 argu_1() const;
  void set_argu_1(::google::protobuf::int32 value);

  // required int32 argu_2 = 3;
  bool has_argu_2() const;
  void clear_argu_2();
  static const int kArgu2FieldNumber = 3;
  ::google::protobuf::int32 argu_2() const;
  void set_argu_2(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:message.TaskConditionTypeConfig)
 private:
  inline void set_has_condition();
  inline void clear_has_condition();
  inline void set_has_argu_1();
  inline void clear_has_argu_1();
  inline void set_has_argu_2();
  inline void clear_has_argu_2();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int condition_;
  ::google::protobuf::int32 argu_1_;
  ::google::protobuf::int32 argu_2_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static TaskConditionTypeConfig* default_instance_;
};
// -------------------------------------------------------------------

class TaskRewardConfig : public ::google::protobuf::Message {
 public:
  TaskRewardConfig();
  virtual ~TaskRewardConfig();

  TaskRewardConfig(const TaskRewardConfig& from);

  inline TaskRewardConfig& operator=(const TaskRewardConfig& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TaskRewardConfig& default_instance();

  void Swap(TaskRewardConfig* other);

  // implements Message ----------------------------------------------

  inline TaskRewardConfig* New() const { return New(NULL); }

  TaskRewardConfig* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TaskRewardConfig& from);
  void MergeFrom(const TaskRewardConfig& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TaskRewardConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .message.ResourceType resource_type = 1 [default = ResourceType_NULL];
  bool has_resource_type() const;
  void clear_resource_type();
  static const int kResourceTypeFieldNumber = 1;
  ::message::ResourceType resource_type() const;
  void set_resource_type(::message::ResourceType value);

  // required int32 count = 2;
  bool has_count() const;
  void clear_count();
  static const int kCountFieldNumber = 2;
  ::google::protobuf::int32 count() const;
  void set_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:message.TaskRewardConfig)
 private:
  inline void set_has_resource_type();
  inline void clear_has_resource_type();
  inline void set_has_count();
  inline void clear_has_count();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int resource_type_;
  ::google::protobuf::int32 count_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static TaskRewardConfig* default_instance_;
};
// -------------------------------------------------------------------

class TaskInfoConfig : public ::google::protobuf::Message {
 public:
  TaskInfoConfig();
  virtual ~TaskInfoConfig();

  TaskInfoConfig(const TaskInfoConfig& from);

  inline TaskInfoConfig& operator=(const TaskInfoConfig& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TaskInfoConfig& default_instance();

  void Swap(TaskInfoConfig* other);

  // implements Message ----------------------------------------------

  inline TaskInfoConfig* New() const { return New(NULL); }

  TaskInfoConfig* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TaskInfoConfig& from);
  void MergeFrom(const TaskInfoConfig& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TaskInfoConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 task_id = 1;
  bool has_task_id() const;
  void clear_task_id();
  static const int kTaskIdFieldNumber = 1;
  ::google::protobuf::int32 task_id() const;
  void set_task_id(::google::protobuf::int32 value);

  // required string name = 2;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // required string describe = 3;
  bool has_describe() const;
  void clear_describe();
  static const int kDescribeFieldNumber = 3;
  const ::std::string& describe() const;
  void set_describe(const ::std::string& value);
  void set_describe(const char* value);
  void set_describe(const char* value, size_t size);
  ::std::string* mutable_describe();
  ::std::string* release_describe();
  void set_allocated_describe(::std::string* describe);

  // repeated .message.TaskConditionTypeConfig conditions = 4;
  int conditions_size() const;
  void clear_conditions();
  static const int kConditionsFieldNumber = 4;
  const ::message::TaskConditionTypeConfig& conditions(int index) const;
  ::message::TaskConditionTypeConfig* mutable_conditions(int index);
  ::message::TaskConditionTypeConfig* add_conditions();
  const ::google::protobuf::RepeatedPtrField< ::message::TaskConditionTypeConfig >&
      conditions() const;
  ::google::protobuf::RepeatedPtrField< ::message::TaskConditionTypeConfig >*
      mutable_conditions();

  // repeated .message.TaskRewardConfig rewards = 5;
  int rewards_size() const;
  void clear_rewards();
  static const int kRewardsFieldNumber = 5;
  const ::message::TaskRewardConfig& rewards(int index) const;
  ::message::TaskRewardConfig* mutable_rewards(int index);
  ::message::TaskRewardConfig* add_rewards();
  const ::google::protobuf::RepeatedPtrField< ::message::TaskRewardConfig >&
      rewards() const;
  ::google::protobuf::RepeatedPtrField< ::message::TaskRewardConfig >*
      mutable_rewards();

  // required int32 required_pass_chapter_id = 6;
  bool has_required_pass_chapter_id() const;
  void clear_required_pass_chapter_id();
  static const int kRequiredPassChapterIdFieldNumber = 6;
  ::google::protobuf::int32 required_pass_chapter_id() const;
  void set_required_pass_chapter_id(::google::protobuf::int32 value);

  // required int32 required_pass_section_id = 7;
  bool has_required_pass_section_id() const;
  void clear_required_pass_section_id();
  static const int kRequiredPassSectionIdFieldNumber = 7;
  ::google::protobuf::int32 required_pass_section_id() const;
  void set_required_pass_section_id(::google::protobuf::int32 value);

  // required int32 required_complete_task_count = 8;
  bool has_required_complete_task_count() const;
  void clear_required_complete_task_count();
  static const int kRequiredCompleteTaskCountFieldNumber = 8;
  ::google::protobuf::int32 required_complete_task_count() const;
  void set_required_complete_task_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:message.TaskInfoConfig)
 private:
  inline void set_has_task_id();
  inline void clear_has_task_id();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_describe();
  inline void clear_has_describe();
  inline void set_has_required_pass_chapter_id();
  inline void clear_has_required_pass_chapter_id();
  inline void set_has_required_pass_section_id();
  inline void clear_has_required_pass_section_id();
  inline void set_has_required_complete_task_count();
  inline void clear_has_required_complete_task_count();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr describe_;
  ::google::protobuf::int32 task_id_;
  ::google::protobuf::int32 required_pass_chapter_id_;
  ::google::protobuf::RepeatedPtrField< ::message::TaskConditionTypeConfig > conditions_;
  ::google::protobuf::RepeatedPtrField< ::message::TaskRewardConfig > rewards_;
  ::google::protobuf::int32 required_pass_section_id_;
  ::google::protobuf::int32 required_complete_task_count_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static TaskInfoConfig* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// int32array

// repeated int32 data = 1;
inline int int32array::data_size() const {
  return data_.size();
}
inline void int32array::clear_data() {
  data_.Clear();
}
inline ::google::protobuf::int32 int32array::data(int index) const {
  // @@protoc_insertion_point(field_get:message.int32array.data)
  return data_.Get(index);
}
inline void int32array::set_data(int index, ::google::protobuf::int32 value) {
  data_.Set(index, value);
  // @@protoc_insertion_point(field_set:message.int32array.data)
}
inline void int32array::add_data(::google::protobuf::int32 value) {
  data_.Add(value);
  // @@protoc_insertion_point(field_add:message.int32array.data)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
int32array::data() const {
  // @@protoc_insertion_point(field_list:message.int32array.data)
  return data_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
int32array::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:message.int32array.data)
  return &data_;
}

// -------------------------------------------------------------------

// CrashmoMapBaseData

// required int32 width = 1;
inline bool CrashmoMapBaseData::has_width() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CrashmoMapBaseData::set_has_width() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CrashmoMapBaseData::clear_has_width() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CrashmoMapBaseData::clear_width() {
  width_ = 0;
  clear_has_width();
}
inline ::google::protobuf::int32 CrashmoMapBaseData::width() const {
  // @@protoc_insertion_point(field_get:message.CrashmoMapBaseData.width)
  return width_;
}
inline void CrashmoMapBaseData::set_width(::google::protobuf::int32 value) {
  set_has_width();
  width_ = value;
  // @@protoc_insertion_point(field_set:message.CrashmoMapBaseData.width)
}

// required int32 height = 2;
inline bool CrashmoMapBaseData::has_height() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CrashmoMapBaseData::set_has_height() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CrashmoMapBaseData::clear_has_height() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CrashmoMapBaseData::clear_height() {
  height_ = 0;
  clear_has_height();
}
inline ::google::protobuf::int32 CrashmoMapBaseData::height() const {
  // @@protoc_insertion_point(field_get:message.CrashmoMapBaseData.height)
  return height_;
}
inline void CrashmoMapBaseData::set_height(::google::protobuf::int32 value) {
  set_has_height();
  height_ = value;
  // @@protoc_insertion_point(field_set:message.CrashmoMapBaseData.height)
}

// repeated .message.int32array map_data = 3;
inline int CrashmoMapBaseData::map_data_size() const {
  return map_data_.size();
}
inline void CrashmoMapBaseData::clear_map_data() {
  map_data_.Clear();
}
inline const ::message::int32array& CrashmoMapBaseData::map_data(int index) const {
  // @@protoc_insertion_point(field_get:message.CrashmoMapBaseData.map_data)
  return map_data_.Get(index);
}
inline ::message::int32array* CrashmoMapBaseData::mutable_map_data(int index) {
  // @@protoc_insertion_point(field_mutable:message.CrashmoMapBaseData.map_data)
  return map_data_.Mutable(index);
}
inline ::message::int32array* CrashmoMapBaseData::add_map_data() {
  // @@protoc_insertion_point(field_add:message.CrashmoMapBaseData.map_data)
  return map_data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::message::int32array >&
CrashmoMapBaseData::map_data() const {
  // @@protoc_insertion_point(field_list:message.CrashmoMapBaseData.map_data)
  return map_data_;
}
inline ::google::protobuf::RepeatedPtrField< ::message::int32array >*
CrashmoMapBaseData::mutable_map_data() {
  // @@protoc_insertion_point(field_mutable_list:message.CrashmoMapBaseData.map_data)
  return &map_data_;
}

// required uint64 map_index = 5;
inline bool CrashmoMapBaseData::has_map_index() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CrashmoMapBaseData::set_has_map_index() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CrashmoMapBaseData::clear_has_map_index() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CrashmoMapBaseData::clear_map_index() {
  map_index_ = GOOGLE_ULONGLONG(0);
  clear_has_map_index();
}
inline ::google::protobuf::uint64 CrashmoMapBaseData::map_index() const {
  // @@protoc_insertion_point(field_get:message.CrashmoMapBaseData.map_index)
  return map_index_;
}
inline void CrashmoMapBaseData::set_map_index(::google::protobuf::uint64 value) {
  set_has_map_index();
  map_index_ = value;
  // @@protoc_insertion_point(field_set:message.CrashmoMapBaseData.map_index)
}

// -------------------------------------------------------------------

// CrashMapData

// required .message.CrashmoMapBaseData Data = 1;
inline bool CrashMapData::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CrashMapData::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CrashMapData::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CrashMapData::clear_data() {
  if (data_ != NULL) data_->::message::CrashmoMapBaseData::Clear();
  clear_has_data();
}
inline const ::message::CrashmoMapBaseData& CrashMapData::data() const {
  // @@protoc_insertion_point(field_get:message.CrashMapData.Data)
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
inline ::message::CrashmoMapBaseData* CrashMapData::mutable_data() {
  set_has_data();
  if (data_ == NULL) {
    data_ = new ::message::CrashmoMapBaseData;
  }
  // @@protoc_insertion_point(field_mutable:message.CrashMapData.Data)
  return data_;
}
inline ::message::CrashmoMapBaseData* CrashMapData::release_data() {
  clear_has_data();
  ::message::CrashmoMapBaseData* temp = data_;
  data_ = NULL;
  return temp;
}
inline void CrashMapData::set_allocated_data(::message::CrashmoMapBaseData* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
  // @@protoc_insertion_point(field_set_allocated:message.CrashMapData.Data)
}

// required string MapName = 2;
inline bool CrashMapData::has_mapname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CrashMapData::set_has_mapname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CrashMapData::clear_has_mapname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CrashMapData::clear_mapname() {
  mapname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_mapname();
}
inline const ::std::string& CrashMapData::mapname() const {
  // @@protoc_insertion_point(field_get:message.CrashMapData.MapName)
  return mapname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CrashMapData::set_mapname(const ::std::string& value) {
  set_has_mapname();
  mapname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message.CrashMapData.MapName)
}
inline void CrashMapData::set_mapname(const char* value) {
  set_has_mapname();
  mapname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.CrashMapData.MapName)
}
inline void CrashMapData::set_mapname(const char* value, size_t size) {
  set_has_mapname();
  mapname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.CrashMapData.MapName)
}
inline ::std::string* CrashMapData::mutable_mapname() {
  set_has_mapname();
  // @@protoc_insertion_point(field_mutable:message.CrashMapData.MapName)
  return mapname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CrashMapData::release_mapname() {
  clear_has_mapname();
  return mapname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CrashMapData::set_allocated_mapname(::std::string* mapname) {
  if (mapname != NULL) {
    set_has_mapname();
  } else {
    clear_has_mapname();
  }
  mapname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mapname);
  // @@protoc_insertion_point(field_set_allocated:message.CrashMapData.MapName)
}

// required string CreaterName = 3;
inline bool CrashMapData::has_creatername() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CrashMapData::set_has_creatername() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CrashMapData::clear_has_creatername() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CrashMapData::clear_creatername() {
  creatername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_creatername();
}
inline const ::std::string& CrashMapData::creatername() const {
  // @@protoc_insertion_point(field_get:message.CrashMapData.CreaterName)
  return creatername_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CrashMapData::set_creatername(const ::std::string& value) {
  set_has_creatername();
  creatername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message.CrashMapData.CreaterName)
}
inline void CrashMapData::set_creatername(const char* value) {
  set_has_creatername();
  creatername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.CrashMapData.CreaterName)
}
inline void CrashMapData::set_creatername(const char* value, size_t size) {
  set_has_creatername();
  creatername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.CrashMapData.CreaterName)
}
inline ::std::string* CrashMapData::mutable_creatername() {
  set_has_creatername();
  // @@protoc_insertion_point(field_mutable:message.CrashMapData.CreaterName)
  return creatername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CrashMapData::release_creatername() {
  clear_has_creatername();
  return creatername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CrashMapData::set_allocated_creatername(::std::string* creatername) {
  if (creatername != NULL) {
    set_has_creatername();
  } else {
    clear_has_creatername();
  }
  creatername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), creatername);
  // @@protoc_insertion_point(field_set_allocated:message.CrashMapData.CreaterName)
}

// required int32 Section = 4;
inline bool CrashMapData::has_section() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CrashMapData::set_has_section() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CrashMapData::clear_has_section() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CrashMapData::clear_section() {
  section_ = 0;
  clear_has_section();
}
inline ::google::protobuf::int32 CrashMapData::section() const {
  // @@protoc_insertion_point(field_get:message.CrashMapData.Section)
  return section_;
}
inline void CrashMapData::set_section(::google::protobuf::int32 value) {
  set_has_section();
  section_ = value;
  // @@protoc_insertion_point(field_set:message.CrashMapData.Section)
}

// required int32 Chapter = 5;
inline bool CrashMapData::has_chapter() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CrashMapData::set_has_chapter() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CrashMapData::clear_has_chapter() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CrashMapData::clear_chapter() {
  chapter_ = 0;
  clear_has_chapter();
}
inline ::google::protobuf::int32 CrashMapData::chapter() const {
  // @@protoc_insertion_point(field_get:message.CrashMapData.Chapter)
  return chapter_;
}
inline void CrashMapData::set_chapter(::google::protobuf::int32 value) {
  set_has_chapter();
  chapter_ = value;
  // @@protoc_insertion_point(field_set:message.CrashMapData.Chapter)
}

// required uint64 create_time = 6;
inline bool CrashMapData::has_create_time() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CrashMapData::set_has_create_time() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CrashMapData::clear_has_create_time() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CrashMapData::clear_create_time() {
  create_time_ = GOOGLE_ULONGLONG(0);
  clear_has_create_time();
}
inline ::google::protobuf::uint64 CrashMapData::create_time() const {
  // @@protoc_insertion_point(field_get:message.CrashMapData.create_time)
  return create_time_;
}
inline void CrashMapData::set_create_time(::google::protobuf::uint64 value) {
  set_has_create_time();
  create_time_ = value;
  // @@protoc_insertion_point(field_set:message.CrashMapData.create_time)
}

// required int32 gold = 7;
inline bool CrashMapData::has_gold() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CrashMapData::set_has_gold() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CrashMapData::clear_has_gold() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CrashMapData::clear_gold() {
  gold_ = 0;
  clear_has_gold();
}
inline ::google::protobuf::int32 CrashMapData::gold() const {
  // @@protoc_insertion_point(field_get:message.CrashMapData.gold)
  return gold_;
}
inline void CrashMapData::set_gold(::google::protobuf::int32 value) {
  set_has_gold();
  gold_ = value;
  // @@protoc_insertion_point(field_set:message.CrashMapData.gold)
}

// -------------------------------------------------------------------

// RankMapBlogEntry

// required uint64 acc = 1;
inline bool RankMapBlogEntry::has_acc() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RankMapBlogEntry::set_has_acc() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RankMapBlogEntry::clear_has_acc() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RankMapBlogEntry::clear_acc() {
  acc_ = GOOGLE_ULONGLONG(0);
  clear_has_acc();
}
inline ::google::protobuf::uint64 RankMapBlogEntry::acc() const {
  // @@protoc_insertion_point(field_get:message.RankMapBlogEntry.acc)
  return acc_;
}
inline void RankMapBlogEntry::set_acc(::google::protobuf::uint64 value) {
  set_has_acc();
  acc_ = value;
  // @@protoc_insertion_point(field_set:message.RankMapBlogEntry.acc)
}

// required string name = 2;
inline bool RankMapBlogEntry::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RankMapBlogEntry::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RankMapBlogEntry::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RankMapBlogEntry::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& RankMapBlogEntry::name() const {
  // @@protoc_insertion_point(field_get:message.RankMapBlogEntry.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RankMapBlogEntry::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message.RankMapBlogEntry.name)
}
inline void RankMapBlogEntry::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.RankMapBlogEntry.name)
}
inline void RankMapBlogEntry::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.RankMapBlogEntry.name)
}
inline ::std::string* RankMapBlogEntry::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:message.RankMapBlogEntry.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RankMapBlogEntry::release_name() {
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RankMapBlogEntry::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:message.RankMapBlogEntry.name)
}

// required string sugges_ = 3;
inline bool RankMapBlogEntry::has_sugges_() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RankMapBlogEntry::set_has_sugges_() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RankMapBlogEntry::clear_has_sugges_() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RankMapBlogEntry::clear_sugges_() {
  sugges__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sugges_();
}
inline const ::std::string& RankMapBlogEntry::sugges_() const {
  // @@protoc_insertion_point(field_get:message.RankMapBlogEntry.sugges_)
  return sugges__.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RankMapBlogEntry::set_sugges_(const ::std::string& value) {
  set_has_sugges_();
  sugges__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message.RankMapBlogEntry.sugges_)
}
inline void RankMapBlogEntry::set_sugges_(const char* value) {
  set_has_sugges_();
  sugges__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.RankMapBlogEntry.sugges_)
}
inline void RankMapBlogEntry::set_sugges_(const char* value, size_t size) {
  set_has_sugges_();
  sugges__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.RankMapBlogEntry.sugges_)
}
inline ::std::string* RankMapBlogEntry::mutable_sugges_() {
  set_has_sugges_();
  // @@protoc_insertion_point(field_mutable:message.RankMapBlogEntry.sugges_)
  return sugges__.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RankMapBlogEntry::release_sugges_() {
  clear_has_sugges_();
  return sugges__.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RankMapBlogEntry::set_allocated_sugges_(::std::string* sugges_) {
  if (sugges_ != NULL) {
    set_has_sugges_();
  } else {
    clear_has_sugges_();
  }
  sugges__.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sugges_);
  // @@protoc_insertion_point(field_set_allocated:message.RankMapBlogEntry.sugges_)
}

// required int32 time = 4;
inline bool RankMapBlogEntry::has_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RankMapBlogEntry::set_has_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RankMapBlogEntry::clear_has_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RankMapBlogEntry::clear_time() {
  time_ = 0;
  clear_has_time();
}
inline ::google::protobuf::int32 RankMapBlogEntry::time() const {
  // @@protoc_insertion_point(field_get:message.RankMapBlogEntry.time)
  return time_;
}
inline void RankMapBlogEntry::set_time(::google::protobuf::int32 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:message.RankMapBlogEntry.time)
}

// -------------------------------------------------------------------

// CrashPlayerPublishMap

// required .message.CrashMapData crashmap = 1;
inline bool CrashPlayerPublishMap::has_crashmap() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CrashPlayerPublishMap::set_has_crashmap() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CrashPlayerPublishMap::clear_has_crashmap() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CrashPlayerPublishMap::clear_crashmap() {
  if (crashmap_ != NULL) crashmap_->::message::CrashMapData::Clear();
  clear_has_crashmap();
}
inline const ::message::CrashMapData& CrashPlayerPublishMap::crashmap() const {
  // @@protoc_insertion_point(field_get:message.CrashPlayerPublishMap.crashmap)
  return crashmap_ != NULL ? *crashmap_ : *default_instance_->crashmap_;
}
inline ::message::CrashMapData* CrashPlayerPublishMap::mutable_crashmap() {
  set_has_crashmap();
  if (crashmap_ == NULL) {
    crashmap_ = new ::message::CrashMapData;
  }
  // @@protoc_insertion_point(field_mutable:message.CrashPlayerPublishMap.crashmap)
  return crashmap_;
}
inline ::message::CrashMapData* CrashPlayerPublishMap::release_crashmap() {
  clear_has_crashmap();
  ::message::CrashMapData* temp = crashmap_;
  crashmap_ = NULL;
  return temp;
}
inline void CrashPlayerPublishMap::set_allocated_crashmap(::message::CrashMapData* crashmap) {
  delete crashmap_;
  crashmap_ = crashmap;
  if (crashmap) {
    set_has_crashmap();
  } else {
    clear_has_crashmap();
  }
  // @@protoc_insertion_point(field_set_allocated:message.CrashPlayerPublishMap.crashmap)
}

// required uint64 publish_time = 2;
inline bool CrashPlayerPublishMap::has_publish_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CrashPlayerPublishMap::set_has_publish_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CrashPlayerPublishMap::clear_has_publish_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CrashPlayerPublishMap::clear_publish_time() {
  publish_time_ = GOOGLE_ULONGLONG(0);
  clear_has_publish_time();
}
inline ::google::protobuf::uint64 CrashPlayerPublishMap::publish_time() const {
  // @@protoc_insertion_point(field_get:message.CrashPlayerPublishMap.publish_time)
  return publish_time_;
}
inline void CrashPlayerPublishMap::set_publish_time(::google::protobuf::uint64 value) {
  set_has_publish_time();
  publish_time_ = value;
  // @@protoc_insertion_point(field_set:message.CrashPlayerPublishMap.publish_time)
}

// required int32 challenge_times = 3;
inline bool CrashPlayerPublishMap::has_challenge_times() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CrashPlayerPublishMap::set_has_challenge_times() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CrashPlayerPublishMap::clear_has_challenge_times() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CrashPlayerPublishMap::clear_challenge_times() {
  challenge_times_ = 0;
  clear_has_challenge_times();
}
inline ::google::protobuf::int32 CrashPlayerPublishMap::challenge_times() const {
  // @@protoc_insertion_point(field_get:message.CrashPlayerPublishMap.challenge_times)
  return challenge_times_;
}
inline void CrashPlayerPublishMap::set_challenge_times(::google::protobuf::int32 value) {
  set_has_challenge_times();
  challenge_times_ = value;
  // @@protoc_insertion_point(field_set:message.CrashPlayerPublishMap.challenge_times)
}

// required int32 failed_of_challenge_times = 4;
inline bool CrashPlayerPublishMap::has_failed_of_challenge_times() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CrashPlayerPublishMap::set_has_failed_of_challenge_times() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CrashPlayerPublishMap::clear_has_failed_of_challenge_times() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CrashPlayerPublishMap::clear_failed_of_challenge_times() {
  failed_of_challenge_times_ = 0;
  clear_has_failed_of_challenge_times();
}
inline ::google::protobuf::int32 CrashPlayerPublishMap::failed_of_challenge_times() const {
  // @@protoc_insertion_point(field_get:message.CrashPlayerPublishMap.failed_of_challenge_times)
  return failed_of_challenge_times_;
}
inline void CrashPlayerPublishMap::set_failed_of_challenge_times(::google::protobuf::int32 value) {
  set_has_failed_of_challenge_times();
  failed_of_challenge_times_ = value;
  // @@protoc_insertion_point(field_set:message.CrashPlayerPublishMap.failed_of_challenge_times)
}

// required int32 map_rank = 5;
inline bool CrashPlayerPublishMap::has_map_rank() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CrashPlayerPublishMap::set_has_map_rank() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CrashPlayerPublishMap::clear_has_map_rank() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CrashPlayerPublishMap::clear_map_rank() {
  map_rank_ = 0;
  clear_has_map_rank();
}
inline ::google::protobuf::int32 CrashPlayerPublishMap::map_rank() const {
  // @@protoc_insertion_point(field_get:message.CrashPlayerPublishMap.map_rank)
  return map_rank_;
}
inline void CrashPlayerPublishMap::set_map_rank(::google::protobuf::int32 value) {
  set_has_map_rank();
  map_rank_ = value;
  // @@protoc_insertion_point(field_set:message.CrashPlayerPublishMap.map_rank)
}

// repeated .message.RankMapBlogEntry map_blog = 6;
inline int CrashPlayerPublishMap::map_blog_size() const {
  return map_blog_.size();
}
inline void CrashPlayerPublishMap::clear_map_blog() {
  map_blog_.Clear();
}
inline const ::message::RankMapBlogEntry& CrashPlayerPublishMap::map_blog(int index) const {
  // @@protoc_insertion_point(field_get:message.CrashPlayerPublishMap.map_blog)
  return map_blog_.Get(index);
}
inline ::message::RankMapBlogEntry* CrashPlayerPublishMap::mutable_map_blog(int index) {
  // @@protoc_insertion_point(field_mutable:message.CrashPlayerPublishMap.map_blog)
  return map_blog_.Mutable(index);
}
inline ::message::RankMapBlogEntry* CrashPlayerPublishMap::add_map_blog() {
  // @@protoc_insertion_point(field_add:message.CrashPlayerPublishMap.map_blog)
  return map_blog_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::message::RankMapBlogEntry >&
CrashPlayerPublishMap::map_blog() const {
  // @@protoc_insertion_point(field_list:message.CrashPlayerPublishMap.map_blog)
  return map_blog_;
}
inline ::google::protobuf::RepeatedPtrField< ::message::RankMapBlogEntry >*
CrashPlayerPublishMap::mutable_map_blog() {
  // @@protoc_insertion_point(field_mutable_list:message.CrashPlayerPublishMap.map_blog)
  return &map_blog_;
}

// -------------------------------------------------------------------

// intPair

// required int32 number_1 = 1;
inline bool intPair::has_number_1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void intPair::set_has_number_1() {
  _has_bits_[0] |= 0x00000001u;
}
inline void intPair::clear_has_number_1() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void intPair::clear_number_1() {
  number_1_ = 0;
  clear_has_number_1();
}
inline ::google::protobuf::int32 intPair::number_1() const {
  // @@protoc_insertion_point(field_get:message.intPair.number_1)
  return number_1_;
}
inline void intPair::set_number_1(::google::protobuf::int32 value) {
  set_has_number_1();
  number_1_ = value;
  // @@protoc_insertion_point(field_set:message.intPair.number_1)
}

// required int32 number_2 = 2;
inline bool intPair::has_number_2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void intPair::set_has_number_2() {
  _has_bits_[0] |= 0x00000002u;
}
inline void intPair::clear_has_number_2() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void intPair::clear_number_2() {
  number_2_ = 0;
  clear_has_number_2();
}
inline ::google::protobuf::int32 intPair::number_2() const {
  // @@protoc_insertion_point(field_get:message.intPair.number_2)
  return number_2_;
}
inline void intPair::set_number_2(::google::protobuf::int32 value) {
  set_has_number_2();
  number_2_ = value;
  // @@protoc_insertion_point(field_set:message.intPair.number_2)
}

// -------------------------------------------------------------------

// CrashPlayerInfo

// required uint64 account = 1;
inline bool CrashPlayerInfo::has_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CrashPlayerInfo::set_has_account() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CrashPlayerInfo::clear_has_account() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CrashPlayerInfo::clear_account() {
  account_ = GOOGLE_ULONGLONG(0);
  clear_has_account();
}
inline ::google::protobuf::uint64 CrashPlayerInfo::account() const {
  // @@protoc_insertion_point(field_get:message.CrashPlayerInfo.account)
  return account_;
}
inline void CrashPlayerInfo::set_account(::google::protobuf::uint64 value) {
  set_has_account();
  account_ = value;
  // @@protoc_insertion_point(field_set:message.CrashPlayerInfo.account)
}

// required int32 pass_chapter = 2;
inline bool CrashPlayerInfo::has_pass_chapter() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CrashPlayerInfo::set_has_pass_chapter() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CrashPlayerInfo::clear_has_pass_chapter() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CrashPlayerInfo::clear_pass_chapter() {
  pass_chapter_ = 0;
  clear_has_pass_chapter();
}
inline ::google::protobuf::int32 CrashPlayerInfo::pass_chapter() const {
  // @@protoc_insertion_point(field_get:message.CrashPlayerInfo.pass_chapter)
  return pass_chapter_;
}
inline void CrashPlayerInfo::set_pass_chapter(::google::protobuf::int32 value) {
  set_has_pass_chapter();
  pass_chapter_ = value;
  // @@protoc_insertion_point(field_set:message.CrashPlayerInfo.pass_chapter)
}

// required int32 pass_section = 4;
inline bool CrashPlayerInfo::has_pass_section() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CrashPlayerInfo::set_has_pass_section() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CrashPlayerInfo::clear_has_pass_section() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CrashPlayerInfo::clear_pass_section() {
  pass_section_ = 0;
  clear_has_pass_section();
}
inline ::google::protobuf::int32 CrashPlayerInfo::pass_section() const {
  // @@protoc_insertion_point(field_get:message.CrashPlayerInfo.pass_section)
  return pass_section_;
}
inline void CrashPlayerInfo::set_pass_section(::google::protobuf::int32 value) {
  set_has_pass_section();
  pass_section_ = value;
  // @@protoc_insertion_point(field_set:message.CrashPlayerInfo.pass_section)
}

// required string name = 5;
inline bool CrashPlayerInfo::has_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CrashPlayerInfo::set_has_name() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CrashPlayerInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CrashPlayerInfo::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& CrashPlayerInfo::name() const {
  // @@protoc_insertion_point(field_get:message.CrashPlayerInfo.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CrashPlayerInfo::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message.CrashPlayerInfo.name)
}
inline void CrashPlayerInfo::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.CrashPlayerInfo.name)
}
inline void CrashPlayerInfo::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.CrashPlayerInfo.name)
}
inline ::std::string* CrashPlayerInfo::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:message.CrashPlayerInfo.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CrashPlayerInfo::release_name() {
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CrashPlayerInfo::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:message.CrashPlayerInfo.name)
}

// repeated .message.CrashMapData IncompleteMap = 6;
inline int CrashPlayerInfo::incompletemap_size() const {
  return incompletemap_.size();
}
inline void CrashPlayerInfo::clear_incompletemap() {
  incompletemap_.Clear();
}
inline const ::message::CrashMapData& CrashPlayerInfo::incompletemap(int index) const {
  // @@protoc_insertion_point(field_get:message.CrashPlayerInfo.IncompleteMap)
  return incompletemap_.Get(index);
}
inline ::message::CrashMapData* CrashPlayerInfo::mutable_incompletemap(int index) {
  // @@protoc_insertion_point(field_mutable:message.CrashPlayerInfo.IncompleteMap)
  return incompletemap_.Mutable(index);
}
inline ::message::CrashMapData* CrashPlayerInfo::add_incompletemap() {
  // @@protoc_insertion_point(field_add:message.CrashPlayerInfo.IncompleteMap)
  return incompletemap_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::message::CrashMapData >&
CrashPlayerInfo::incompletemap() const {
  // @@protoc_insertion_point(field_list:message.CrashPlayerInfo.IncompleteMap)
  return incompletemap_;
}
inline ::google::protobuf::RepeatedPtrField< ::message::CrashMapData >*
CrashPlayerInfo::mutable_incompletemap() {
  // @@protoc_insertion_point(field_mutable_list:message.CrashPlayerInfo.IncompleteMap)
  return &incompletemap_;
}

// repeated .message.CrashMapData CompleteMap = 7;
inline int CrashPlayerInfo::completemap_size() const {
  return completemap_.size();
}
inline void CrashPlayerInfo::clear_completemap() {
  completemap_.Clear();
}
inline const ::message::CrashMapData& CrashPlayerInfo::completemap(int index) const {
  // @@protoc_insertion_point(field_get:message.CrashPlayerInfo.CompleteMap)
  return completemap_.Get(index);
}
inline ::message::CrashMapData* CrashPlayerInfo::mutable_completemap(int index) {
  // @@protoc_insertion_point(field_mutable:message.CrashPlayerInfo.CompleteMap)
  return completemap_.Mutable(index);
}
inline ::message::CrashMapData* CrashPlayerInfo::add_completemap() {
  // @@protoc_insertion_point(field_add:message.CrashPlayerInfo.CompleteMap)
  return completemap_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::message::CrashMapData >&
CrashPlayerInfo::completemap() const {
  // @@protoc_insertion_point(field_list:message.CrashPlayerInfo.CompleteMap)
  return completemap_;
}
inline ::google::protobuf::RepeatedPtrField< ::message::CrashMapData >*
CrashPlayerInfo::mutable_completemap() {
  // @@protoc_insertion_point(field_mutable_list:message.CrashPlayerInfo.CompleteMap)
  return &completemap_;
}

// required bool isadmin = 8;
inline bool CrashPlayerInfo::has_isadmin() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CrashPlayerInfo::set_has_isadmin() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CrashPlayerInfo::clear_has_isadmin() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CrashPlayerInfo::clear_isadmin() {
  isadmin_ = false;
  clear_has_isadmin();
}
inline bool CrashPlayerInfo::isadmin() const {
  // @@protoc_insertion_point(field_get:message.CrashPlayerInfo.isadmin)
  return isadmin_;
}
inline void CrashPlayerInfo::set_isadmin(bool value) {
  set_has_isadmin();
  isadmin_ = value;
  // @@protoc_insertion_point(field_set:message.CrashPlayerInfo.isadmin)
}

// repeated .message.intPair resources = 9;
inline int CrashPlayerInfo::resources_size() const {
  return resources_.size();
}
inline void CrashPlayerInfo::clear_resources() {
  resources_.Clear();
}
inline const ::message::intPair& CrashPlayerInfo::resources(int index) const {
  // @@protoc_insertion_point(field_get:message.CrashPlayerInfo.resources)
  return resources_.Get(index);
}
inline ::message::intPair* CrashPlayerInfo::mutable_resources(int index) {
  // @@protoc_insertion_point(field_mutable:message.CrashPlayerInfo.resources)
  return resources_.Mutable(index);
}
inline ::message::intPair* CrashPlayerInfo::add_resources() {
  // @@protoc_insertion_point(field_add:message.CrashPlayerInfo.resources)
  return resources_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::message::intPair >&
CrashPlayerInfo::resources() const {
  // @@protoc_insertion_point(field_list:message.CrashPlayerInfo.resources)
  return resources_;
}
inline ::google::protobuf::RepeatedPtrField< ::message::intPair >*
CrashPlayerInfo::mutable_resources() {
  // @@protoc_insertion_point(field_mutable_list:message.CrashPlayerInfo.resources)
  return &resources_;
}

// required int32 map_width = 10;
inline bool CrashPlayerInfo::has_map_width() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CrashPlayerInfo::set_has_map_width() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CrashPlayerInfo::clear_has_map_width() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CrashPlayerInfo::clear_map_width() {
  map_width_ = 0;
  clear_has_map_width();
}
inline ::google::protobuf::int32 CrashPlayerInfo::map_width() const {
  // @@protoc_insertion_point(field_get:message.CrashPlayerInfo.map_width)
  return map_width_;
}
inline void CrashPlayerInfo::set_map_width(::google::protobuf::int32 value) {
  set_has_map_width();
  map_width_ = value;
  // @@protoc_insertion_point(field_set:message.CrashPlayerInfo.map_width)
}

// required int32 map_height = 11;
inline bool CrashPlayerInfo::has_map_height() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CrashPlayerInfo::set_has_map_height() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CrashPlayerInfo::clear_has_map_height() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CrashPlayerInfo::clear_map_height() {
  map_height_ = 0;
  clear_has_map_height();
}
inline ::google::protobuf::int32 CrashPlayerInfo::map_height() const {
  // @@protoc_insertion_point(field_get:message.CrashPlayerInfo.map_height)
  return map_height_;
}
inline void CrashPlayerInfo::set_map_height(::google::protobuf::int32 value) {
  set_has_map_height();
  map_height_ = value;
  // @@protoc_insertion_point(field_set:message.CrashPlayerInfo.map_height)
}

// required int32 map_count = 12;
inline bool CrashPlayerInfo::has_map_count() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CrashPlayerInfo::set_has_map_count() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CrashPlayerInfo::clear_has_map_count() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CrashPlayerInfo::clear_map_count() {
  map_count_ = 0;
  clear_has_map_count();
}
inline ::google::protobuf::int32 CrashPlayerInfo::map_count() const {
  // @@protoc_insertion_point(field_get:message.CrashPlayerInfo.map_count)
  return map_count_;
}
inline void CrashPlayerInfo::set_map_count(::google::protobuf::int32 value) {
  set_has_map_count();
  map_count_ = value;
  // @@protoc_insertion_point(field_set:message.CrashPlayerInfo.map_count)
}

// required int32 gold = 13;
inline bool CrashPlayerInfo::has_gold() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CrashPlayerInfo::set_has_gold() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CrashPlayerInfo::clear_has_gold() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CrashPlayerInfo::clear_gold() {
  gold_ = 0;
  clear_has_gold();
}
inline ::google::protobuf::int32 CrashPlayerInfo::gold() const {
  // @@protoc_insertion_point(field_get:message.CrashPlayerInfo.gold)
  return gold_;
}
inline void CrashPlayerInfo::set_gold(::google::protobuf::int32 value) {
  set_has_gold();
  gold_ = value;
  // @@protoc_insertion_point(field_set:message.CrashPlayerInfo.gold)
}

// -------------------------------------------------------------------

// TaskConditionTypeConfig

// required .message.ConditionType condition = 1 [default = ConditionType_NULL];
inline bool TaskConditionTypeConfig::has_condition() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TaskConditionTypeConfig::set_has_condition() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TaskConditionTypeConfig::clear_has_condition() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TaskConditionTypeConfig::clear_condition() {
  condition_ = 0;
  clear_has_condition();
}
inline ::message::ConditionType TaskConditionTypeConfig::condition() const {
  // @@protoc_insertion_point(field_get:message.TaskConditionTypeConfig.condition)
  return static_cast< ::message::ConditionType >(condition_);
}
inline void TaskConditionTypeConfig::set_condition(::message::ConditionType value) {
  assert(::message::ConditionType_IsValid(value));
  set_has_condition();
  condition_ = value;
  // @@protoc_insertion_point(field_set:message.TaskConditionTypeConfig.condition)
}

// required int32 argu_1 = 2;
inline bool TaskConditionTypeConfig::has_argu_1() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TaskConditionTypeConfig::set_has_argu_1() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TaskConditionTypeConfig::clear_has_argu_1() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TaskConditionTypeConfig::clear_argu_1() {
  argu_1_ = 0;
  clear_has_argu_1();
}
inline ::google::protobuf::int32 TaskConditionTypeConfig::argu_1() const {
  // @@protoc_insertion_point(field_get:message.TaskConditionTypeConfig.argu_1)
  return argu_1_;
}
inline void TaskConditionTypeConfig::set_argu_1(::google::protobuf::int32 value) {
  set_has_argu_1();
  argu_1_ = value;
  // @@protoc_insertion_point(field_set:message.TaskConditionTypeConfig.argu_1)
}

// required int32 argu_2 = 3;
inline bool TaskConditionTypeConfig::has_argu_2() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TaskConditionTypeConfig::set_has_argu_2() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TaskConditionTypeConfig::clear_has_argu_2() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TaskConditionTypeConfig::clear_argu_2() {
  argu_2_ = 0;
  clear_has_argu_2();
}
inline ::google::protobuf::int32 TaskConditionTypeConfig::argu_2() const {
  // @@protoc_insertion_point(field_get:message.TaskConditionTypeConfig.argu_2)
  return argu_2_;
}
inline void TaskConditionTypeConfig::set_argu_2(::google::protobuf::int32 value) {
  set_has_argu_2();
  argu_2_ = value;
  // @@protoc_insertion_point(field_set:message.TaskConditionTypeConfig.argu_2)
}

// -------------------------------------------------------------------

// TaskRewardConfig

// required .message.ResourceType resource_type = 1 [default = ResourceType_NULL];
inline bool TaskRewardConfig::has_resource_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TaskRewardConfig::set_has_resource_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TaskRewardConfig::clear_has_resource_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TaskRewardConfig::clear_resource_type() {
  resource_type_ = 0;
  clear_has_resource_type();
}
inline ::message::ResourceType TaskRewardConfig::resource_type() const {
  // @@protoc_insertion_point(field_get:message.TaskRewardConfig.resource_type)
  return static_cast< ::message::ResourceType >(resource_type_);
}
inline void TaskRewardConfig::set_resource_type(::message::ResourceType value) {
  assert(::message::ResourceType_IsValid(value));
  set_has_resource_type();
  resource_type_ = value;
  // @@protoc_insertion_point(field_set:message.TaskRewardConfig.resource_type)
}

// required int32 count = 2;
inline bool TaskRewardConfig::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TaskRewardConfig::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TaskRewardConfig::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TaskRewardConfig::clear_count() {
  count_ = 0;
  clear_has_count();
}
inline ::google::protobuf::int32 TaskRewardConfig::count() const {
  // @@protoc_insertion_point(field_get:message.TaskRewardConfig.count)
  return count_;
}
inline void TaskRewardConfig::set_count(::google::protobuf::int32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:message.TaskRewardConfig.count)
}

// -------------------------------------------------------------------

// TaskInfoConfig

// required int32 task_id = 1;
inline bool TaskInfoConfig::has_task_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TaskInfoConfig::set_has_task_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TaskInfoConfig::clear_has_task_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TaskInfoConfig::clear_task_id() {
  task_id_ = 0;
  clear_has_task_id();
}
inline ::google::protobuf::int32 TaskInfoConfig::task_id() const {
  // @@protoc_insertion_point(field_get:message.TaskInfoConfig.task_id)
  return task_id_;
}
inline void TaskInfoConfig::set_task_id(::google::protobuf::int32 value) {
  set_has_task_id();
  task_id_ = value;
  // @@protoc_insertion_point(field_set:message.TaskInfoConfig.task_id)
}

// required string name = 2;
inline bool TaskInfoConfig::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TaskInfoConfig::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TaskInfoConfig::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TaskInfoConfig::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& TaskInfoConfig::name() const {
  // @@protoc_insertion_point(field_get:message.TaskInfoConfig.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TaskInfoConfig::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message.TaskInfoConfig.name)
}
inline void TaskInfoConfig::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.TaskInfoConfig.name)
}
inline void TaskInfoConfig::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.TaskInfoConfig.name)
}
inline ::std::string* TaskInfoConfig::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:message.TaskInfoConfig.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TaskInfoConfig::release_name() {
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TaskInfoConfig::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:message.TaskInfoConfig.name)
}

// required string describe = 3;
inline bool TaskInfoConfig::has_describe() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TaskInfoConfig::set_has_describe() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TaskInfoConfig::clear_has_describe() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TaskInfoConfig::clear_describe() {
  describe_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_describe();
}
inline const ::std::string& TaskInfoConfig::describe() const {
  // @@protoc_insertion_point(field_get:message.TaskInfoConfig.describe)
  return describe_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TaskInfoConfig::set_describe(const ::std::string& value) {
  set_has_describe();
  describe_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message.TaskInfoConfig.describe)
}
inline void TaskInfoConfig::set_describe(const char* value) {
  set_has_describe();
  describe_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.TaskInfoConfig.describe)
}
inline void TaskInfoConfig::set_describe(const char* value, size_t size) {
  set_has_describe();
  describe_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.TaskInfoConfig.describe)
}
inline ::std::string* TaskInfoConfig::mutable_describe() {
  set_has_describe();
  // @@protoc_insertion_point(field_mutable:message.TaskInfoConfig.describe)
  return describe_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TaskInfoConfig::release_describe() {
  clear_has_describe();
  return describe_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TaskInfoConfig::set_allocated_describe(::std::string* describe) {
  if (describe != NULL) {
    set_has_describe();
  } else {
    clear_has_describe();
  }
  describe_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), describe);
  // @@protoc_insertion_point(field_set_allocated:message.TaskInfoConfig.describe)
}

// repeated .message.TaskConditionTypeConfig conditions = 4;
inline int TaskInfoConfig::conditions_size() const {
  return conditions_.size();
}
inline void TaskInfoConfig::clear_conditions() {
  conditions_.Clear();
}
inline const ::message::TaskConditionTypeConfig& TaskInfoConfig::conditions(int index) const {
  // @@protoc_insertion_point(field_get:message.TaskInfoConfig.conditions)
  return conditions_.Get(index);
}
inline ::message::TaskConditionTypeConfig* TaskInfoConfig::mutable_conditions(int index) {
  // @@protoc_insertion_point(field_mutable:message.TaskInfoConfig.conditions)
  return conditions_.Mutable(index);
}
inline ::message::TaskConditionTypeConfig* TaskInfoConfig::add_conditions() {
  // @@protoc_insertion_point(field_add:message.TaskInfoConfig.conditions)
  return conditions_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::message::TaskConditionTypeConfig >&
TaskInfoConfig::conditions() const {
  // @@protoc_insertion_point(field_list:message.TaskInfoConfig.conditions)
  return conditions_;
}
inline ::google::protobuf::RepeatedPtrField< ::message::TaskConditionTypeConfig >*
TaskInfoConfig::mutable_conditions() {
  // @@protoc_insertion_point(field_mutable_list:message.TaskInfoConfig.conditions)
  return &conditions_;
}

// repeated .message.TaskRewardConfig rewards = 5;
inline int TaskInfoConfig::rewards_size() const {
  return rewards_.size();
}
inline void TaskInfoConfig::clear_rewards() {
  rewards_.Clear();
}
inline const ::message::TaskRewardConfig& TaskInfoConfig::rewards(int index) const {
  // @@protoc_insertion_point(field_get:message.TaskInfoConfig.rewards)
  return rewards_.Get(index);
}
inline ::message::TaskRewardConfig* TaskInfoConfig::mutable_rewards(int index) {
  // @@protoc_insertion_point(field_mutable:message.TaskInfoConfig.rewards)
  return rewards_.Mutable(index);
}
inline ::message::TaskRewardConfig* TaskInfoConfig::add_rewards() {
  // @@protoc_insertion_point(field_add:message.TaskInfoConfig.rewards)
  return rewards_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::message::TaskRewardConfig >&
TaskInfoConfig::rewards() const {
  // @@protoc_insertion_point(field_list:message.TaskInfoConfig.rewards)
  return rewards_;
}
inline ::google::protobuf::RepeatedPtrField< ::message::TaskRewardConfig >*
TaskInfoConfig::mutable_rewards() {
  // @@protoc_insertion_point(field_mutable_list:message.TaskInfoConfig.rewards)
  return &rewards_;
}

// required int32 required_pass_chapter_id = 6;
inline bool TaskInfoConfig::has_required_pass_chapter_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void TaskInfoConfig::set_has_required_pass_chapter_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void TaskInfoConfig::clear_has_required_pass_chapter_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void TaskInfoConfig::clear_required_pass_chapter_id() {
  required_pass_chapter_id_ = 0;
  clear_has_required_pass_chapter_id();
}
inline ::google::protobuf::int32 TaskInfoConfig::required_pass_chapter_id() const {
  // @@protoc_insertion_point(field_get:message.TaskInfoConfig.required_pass_chapter_id)
  return required_pass_chapter_id_;
}
inline void TaskInfoConfig::set_required_pass_chapter_id(::google::protobuf::int32 value) {
  set_has_required_pass_chapter_id();
  required_pass_chapter_id_ = value;
  // @@protoc_insertion_point(field_set:message.TaskInfoConfig.required_pass_chapter_id)
}

// required int32 required_pass_section_id = 7;
inline bool TaskInfoConfig::has_required_pass_section_id() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void TaskInfoConfig::set_has_required_pass_section_id() {
  _has_bits_[0] |= 0x00000040u;
}
inline void TaskInfoConfig::clear_has_required_pass_section_id() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void TaskInfoConfig::clear_required_pass_section_id() {
  required_pass_section_id_ = 0;
  clear_has_required_pass_section_id();
}
inline ::google::protobuf::int32 TaskInfoConfig::required_pass_section_id() const {
  // @@protoc_insertion_point(field_get:message.TaskInfoConfig.required_pass_section_id)
  return required_pass_section_id_;
}
inline void TaskInfoConfig::set_required_pass_section_id(::google::protobuf::int32 value) {
  set_has_required_pass_section_id();
  required_pass_section_id_ = value;
  // @@protoc_insertion_point(field_set:message.TaskInfoConfig.required_pass_section_id)
}

// required int32 required_complete_task_count = 8;
inline bool TaskInfoConfig::has_required_complete_task_count() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void TaskInfoConfig::set_has_required_complete_task_count() {
  _has_bits_[0] |= 0x00000080u;
}
inline void TaskInfoConfig::clear_has_required_complete_task_count() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void TaskInfoConfig::clear_required_complete_task_count() {
  required_complete_task_count_ = 0;
  clear_has_required_complete_task_count();
}
inline ::google::protobuf::int32 TaskInfoConfig::required_complete_task_count() const {
  // @@protoc_insertion_point(field_get:message.TaskInfoConfig.required_complete_task_count)
  return required_complete_task_count_;
}
inline void TaskInfoConfig::set_required_complete_task_count(::google::protobuf::int32 value) {
  set_has_required_complete_task_count();
  required_complete_task_count_ = value;
  // @@protoc_insertion_point(field_set:message.TaskInfoConfig.required_complete_task_count)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace message

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::message::ConditionType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::message::ConditionType>() {
  return ::message::ConditionType_descriptor();
}
template <> struct is_proto_enum< ::message::ResourceType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::message::ResourceType>() {
  return ::message::ResourceType_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_common_2eproto__INCLUDED
