// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common.proto

#ifndef PROTOBUF_common_2eproto__INCLUDED
#define PROTOBUF_common_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace message {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_common_2eproto();
void protobuf_AssignDesc_common_2eproto();
void protobuf_ShutdownFile_common_2eproto();

class ToyStatData;
class ToyStateProperty;
class NoneCharacterData;
class NoneCharacterDataServer;
class int32array;
class CrashmoMapBaseData;
class CrashMapData;
class CrashPlayerInfo;

// ===================================================================

class ToyStatData : public ::google::protobuf::Message {
 public:
  ToyStatData();
  virtual ~ToyStatData();

  ToyStatData(const ToyStatData& from);

  inline ToyStatData& operator=(const ToyStatData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ToyStatData& default_instance();

  void Swap(ToyStatData* other);

  // implements Message ----------------------------------------------

  inline ToyStatData* New() const { return New(NULL); }

  ToyStatData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ToyStatData& from);
  void MergeFrom(const ToyStatData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ToyStatData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string toy_guid = 1;
  bool has_toy_guid() const;
  void clear_toy_guid();
  static const int kToyGuidFieldNumber = 1;
  const ::std::string& toy_guid() const;
  void set_toy_guid(const ::std::string& value);
  void set_toy_guid(const char* value);
  void set_toy_guid(const char* value, size_t size);
  ::std::string* mutable_toy_guid();
  ::std::string* release_toy_guid();
  void set_allocated_toy_guid(::std::string* toy_guid);

  // required string name = 2;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // required int32 level = 3;
  bool has_level() const;
  void clear_level();
  static const int kLevelFieldNumber = 3;
  ::google::protobuf::int32 level() const;
  void set_level(::google::protobuf::int32 value);

  // required int32 exp = 4;
  bool has_exp() const;
  void clear_exp();
  static const int kExpFieldNumber = 4;
  ::google::protobuf::int32 exp() const;
  void set_exp(::google::protobuf::int32 value);

  // required int32 id = 5;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 5;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:message.ToyStatData)
 private:
  inline void set_has_toy_guid();
  inline void clear_has_toy_guid();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_exp();
  inline void clear_has_exp();
  inline void set_has_id();
  inline void clear_has_id();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr toy_guid_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 exp_;
  ::google::protobuf::int32 id_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static ToyStatData* default_instance_;
};
// -------------------------------------------------------------------

class ToyStateProperty : public ::google::protobuf::Message {
 public:
  ToyStateProperty();
  virtual ~ToyStateProperty();

  ToyStateProperty(const ToyStateProperty& from);

  inline ToyStateProperty& operator=(const ToyStateProperty& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ToyStateProperty& default_instance();

  void Swap(ToyStateProperty* other);

  // implements Message ----------------------------------------------

  inline ToyStateProperty* New() const { return New(NULL); }

  ToyStateProperty* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ToyStateProperty& from);
  void MergeFrom(const ToyStateProperty& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ToyStateProperty* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .message.ToyStatData toy_state = 1;
  bool has_toy_state() const;
  void clear_toy_state();
  static const int kToyStateFieldNumber = 1;
  const ::message::ToyStatData& toy_state() const;
  ::message::ToyStatData* mutable_toy_state();
  ::message::ToyStatData* release_toy_state();
  void set_allocated_toy_state(::message::ToyStatData* toy_state);

  // required int32 hp = 2;
  bool has_hp() const;
  void clear_hp();
  static const int kHpFieldNumber = 2;
  ::google::protobuf::int32 hp() const;
  void set_hp(::google::protobuf::int32 value);

  // required int32 atk = 3;
  bool has_atk() const;
  void clear_atk();
  static const int kAtkFieldNumber = 3;
  ::google::protobuf::int32 atk() const;
  void set_atk(::google::protobuf::int32 value);

  // required int32 def = 4;
  bool has_def() const;
  void clear_def();
  static const int kDefFieldNumber = 4;
  ::google::protobuf::int32 def() const;
  void set_def(::google::protobuf::int32 value);

  // required int32 mspd = 5;
  bool has_mspd() const;
  void clear_mspd();
  static const int kMspdFieldNumber = 5;
  ::google::protobuf::int32 mspd() const;
  void set_mspd(::google::protobuf::int32 value);

  // required int32 spirit = 6;
  bool has_spirit() const;
  void clear_spirit();
  static const int kSpiritFieldNumber = 6;
  ::google::protobuf::int32 spirit() const;
  void set_spirit(::google::protobuf::int32 value);

  // required int32 aspd = 7;
  bool has_aspd() const;
  void clear_aspd();
  static const int kAspdFieldNumber = 7;
  ::google::protobuf::int32 aspd() const;
  void set_aspd(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:message.ToyStateProperty)
 private:
  inline void set_has_toy_state();
  inline void clear_has_toy_state();
  inline void set_has_hp();
  inline void clear_has_hp();
  inline void set_has_atk();
  inline void clear_has_atk();
  inline void set_has_def();
  inline void clear_has_def();
  inline void set_has_mspd();
  inline void clear_has_mspd();
  inline void set_has_spirit();
  inline void clear_has_spirit();
  inline void set_has_aspd();
  inline void clear_has_aspd();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::message::ToyStatData* toy_state_;
  ::google::protobuf::int32 hp_;
  ::google::protobuf::int32 atk_;
  ::google::protobuf::int32 def_;
  ::google::protobuf::int32 mspd_;
  ::google::protobuf::int32 spirit_;
  ::google::protobuf::int32 aspd_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static ToyStateProperty* default_instance_;
};
// -------------------------------------------------------------------

class NoneCharacterData : public ::google::protobuf::Message {
 public:
  NoneCharacterData();
  virtual ~NoneCharacterData();

  NoneCharacterData(const NoneCharacterData& from);

  inline NoneCharacterData& operator=(const NoneCharacterData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NoneCharacterData& default_instance();

  void Swap(NoneCharacterData* other);

  // implements Message ----------------------------------------------

  inline NoneCharacterData* New() const { return New(NULL); }

  NoneCharacterData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NoneCharacterData& from);
  void MergeFrom(const NoneCharacterData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(NoneCharacterData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes instances_status = 1;
  bool has_instances_status() const;
  void clear_instances_status();
  static const int kInstancesStatusFieldNumber = 1;
  const ::std::string& instances_status() const;
  void set_instances_status(const ::std::string& value);
  void set_instances_status(const char* value);
  void set_instances_status(const void* value, size_t size);
  ::std::string* mutable_instances_status();
  ::std::string* release_instances_status();
  void set_allocated_instances_status(::std::string* instances_status);

  // repeated .message.ToyStatData toys = 2;
  int toys_size() const;
  void clear_toys();
  static const int kToysFieldNumber = 2;
  const ::message::ToyStatData& toys(int index) const;
  ::message::ToyStatData* mutable_toys(int index);
  ::message::ToyStatData* add_toys();
  const ::google::protobuf::RepeatedPtrField< ::message::ToyStatData >&
      toys() const;
  ::google::protobuf::RepeatedPtrField< ::message::ToyStatData >*
      mutable_toys();

  // repeated int32 pass_instances = 3;
  int pass_instances_size() const;
  void clear_pass_instances();
  static const int kPassInstancesFieldNumber = 3;
  ::google::protobuf::int32 pass_instances(int index) const;
  void set_pass_instances(int index, ::google::protobuf::int32 value);
  void add_pass_instances(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      pass_instances() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_pass_instances();

  // required string guid = 4;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 4;
  const ::std::string& guid() const;
  void set_guid(const ::std::string& value);
  void set_guid(const char* value);
  void set_guid(const char* value, size_t size);
  ::std::string* mutable_guid();
  ::std::string* release_guid();
  void set_allocated_guid(::std::string* guid);

  // @@protoc_insertion_point(class_scope:message.NoneCharacterData)
 private:
  inline void set_has_instances_status();
  inline void clear_has_instances_status();
  inline void set_has_guid();
  inline void clear_has_guid();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr instances_status_;
  ::google::protobuf::RepeatedPtrField< ::message::ToyStatData > toys_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > pass_instances_;
  ::google::protobuf::internal::ArenaStringPtr guid_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static NoneCharacterData* default_instance_;
};
// -------------------------------------------------------------------

class NoneCharacterDataServer : public ::google::protobuf::Message {
 public:
  NoneCharacterDataServer();
  virtual ~NoneCharacterDataServer();

  NoneCharacterDataServer(const NoneCharacterDataServer& from);

  inline NoneCharacterDataServer& operator=(const NoneCharacterDataServer& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NoneCharacterDataServer& default_instance();

  void Swap(NoneCharacterDataServer* other);

  // implements Message ----------------------------------------------

  inline NoneCharacterDataServer* New() const { return New(NULL); }

  NoneCharacterDataServer* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NoneCharacterDataServer& from);
  void MergeFrom(const NoneCharacterDataServer& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(NoneCharacterDataServer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .message.NoneCharacterData data = 1;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 1;
  const ::message::NoneCharacterData& data() const;
  ::message::NoneCharacterData* mutable_data();
  ::message::NoneCharacterData* release_data();
  void set_allocated_data(::message::NoneCharacterData* data);

  // required uint64 account = 2;
  bool has_account() const;
  void clear_account();
  static const int kAccountFieldNumber = 2;
  ::google::protobuf::uint64 account() const;
  void set_account(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:message.NoneCharacterDataServer)
 private:
  inline void set_has_data();
  inline void clear_has_data();
  inline void set_has_account();
  inline void clear_has_account();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::message::NoneCharacterData* data_;
  ::google::protobuf::uint64 account_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static NoneCharacterDataServer* default_instance_;
};
// -------------------------------------------------------------------

class int32array : public ::google::protobuf::Message {
 public:
  int32array();
  virtual ~int32array();

  int32array(const int32array& from);

  inline int32array& operator=(const int32array& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const int32array& default_instance();

  void Swap(int32array* other);

  // implements Message ----------------------------------------------

  inline int32array* New() const { return New(NULL); }

  int32array* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const int32array& from);
  void MergeFrom(const int32array& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(int32array* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 data = 1;
  int data_size() const;
  void clear_data();
  static const int kDataFieldNumber = 1;
  ::google::protobuf::int32 data(int index) const;
  void set_data(int index, ::google::protobuf::int32 value);
  void add_data(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      data() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_data();

  // @@protoc_insertion_point(class_scope:message.int32array)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > data_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static int32array* default_instance_;
};
// -------------------------------------------------------------------

class CrashmoMapBaseData : public ::google::protobuf::Message {
 public:
  CrashmoMapBaseData();
  virtual ~CrashmoMapBaseData();

  CrashmoMapBaseData(const CrashmoMapBaseData& from);

  inline CrashmoMapBaseData& operator=(const CrashmoMapBaseData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CrashmoMapBaseData& default_instance();

  void Swap(CrashmoMapBaseData* other);

  // implements Message ----------------------------------------------

  inline CrashmoMapBaseData* New() const { return New(NULL); }

  CrashmoMapBaseData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CrashmoMapBaseData& from);
  void MergeFrom(const CrashmoMapBaseData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CrashmoMapBaseData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 width = 1;
  bool has_width() const;
  void clear_width();
  static const int kWidthFieldNumber = 1;
  ::google::protobuf::int32 width() const;
  void set_width(::google::protobuf::int32 value);

  // required int32 height = 2;
  bool has_height() const;
  void clear_height();
  static const int kHeightFieldNumber = 2;
  ::google::protobuf::int32 height() const;
  void set_height(::google::protobuf::int32 value);

  // repeated .message.int32array map_data = 3;
  int map_data_size() const;
  void clear_map_data();
  static const int kMapDataFieldNumber = 3;
  const ::message::int32array& map_data(int index) const;
  ::message::int32array* mutable_map_data(int index);
  ::message::int32array* add_map_data();
  const ::google::protobuf::RepeatedPtrField< ::message::int32array >&
      map_data() const;
  ::google::protobuf::RepeatedPtrField< ::message::int32array >*
      mutable_map_data();

  // required uint64 map_index = 5;
  bool has_map_index() const;
  void clear_map_index();
  static const int kMapIndexFieldNumber = 5;
  ::google::protobuf::uint64 map_index() const;
  void set_map_index(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:message.CrashmoMapBaseData)
 private:
  inline void set_has_width();
  inline void clear_has_width();
  inline void set_has_height();
  inline void clear_has_height();
  inline void set_has_map_index();
  inline void clear_has_map_index();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 width_;
  ::google::protobuf::int32 height_;
  ::google::protobuf::RepeatedPtrField< ::message::int32array > map_data_;
  ::google::protobuf::uint64 map_index_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static CrashmoMapBaseData* default_instance_;
};
// -------------------------------------------------------------------

class CrashMapData : public ::google::protobuf::Message {
 public:
  CrashMapData();
  virtual ~CrashMapData();

  CrashMapData(const CrashMapData& from);

  inline CrashMapData& operator=(const CrashMapData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CrashMapData& default_instance();

  void Swap(CrashMapData* other);

  // implements Message ----------------------------------------------

  inline CrashMapData* New() const { return New(NULL); }

  CrashMapData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CrashMapData& from);
  void MergeFrom(const CrashMapData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CrashMapData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .message.CrashmoMapBaseData Data = 1;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 1;
  const ::message::CrashmoMapBaseData& data() const;
  ::message::CrashmoMapBaseData* mutable_data();
  ::message::CrashmoMapBaseData* release_data();
  void set_allocated_data(::message::CrashmoMapBaseData* data);

  // required string MapName = 2;
  bool has_mapname() const;
  void clear_mapname();
  static const int kMapNameFieldNumber = 2;
  const ::std::string& mapname() const;
  void set_mapname(const ::std::string& value);
  void set_mapname(const char* value);
  void set_mapname(const char* value, size_t size);
  ::std::string* mutable_mapname();
  ::std::string* release_mapname();
  void set_allocated_mapname(::std::string* mapname);

  // required string CreaterName = 3;
  bool has_creatername() const;
  void clear_creatername();
  static const int kCreaterNameFieldNumber = 3;
  const ::std::string& creatername() const;
  void set_creatername(const ::std::string& value);
  void set_creatername(const char* value);
  void set_creatername(const char* value, size_t size);
  ::std::string* mutable_creatername();
  ::std::string* release_creatername();
  void set_allocated_creatername(::std::string* creatername);

  // required int32 Section = 4;
  bool has_section() const;
  void clear_section();
  static const int kSectionFieldNumber = 4;
  ::google::protobuf::int32 section() const;
  void set_section(::google::protobuf::int32 value);

  // required int32 number = 5;
  bool has_number() const;
  void clear_number();
  static const int kNumberFieldNumber = 5;
  ::google::protobuf::int32 number() const;
  void set_number(::google::protobuf::int32 value);

  // required uint64 create_time = 6;
  bool has_create_time() const;
  void clear_create_time();
  static const int kCreateTimeFieldNumber = 6;
  ::google::protobuf::uint64 create_time() const;
  void set_create_time(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:message.CrashMapData)
 private:
  inline void set_has_data();
  inline void clear_has_data();
  inline void set_has_mapname();
  inline void clear_has_mapname();
  inline void set_has_creatername();
  inline void clear_has_creatername();
  inline void set_has_section();
  inline void clear_has_section();
  inline void set_has_number();
  inline void clear_has_number();
  inline void set_has_create_time();
  inline void clear_has_create_time();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::message::CrashmoMapBaseData* data_;
  ::google::protobuf::internal::ArenaStringPtr mapname_;
  ::google::protobuf::internal::ArenaStringPtr creatername_;
  ::google::protobuf::int32 section_;
  ::google::protobuf::int32 number_;
  ::google::protobuf::uint64 create_time_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static CrashMapData* default_instance_;
};
// -------------------------------------------------------------------

class CrashPlayerInfo : public ::google::protobuf::Message {
 public:
  CrashPlayerInfo();
  virtual ~CrashPlayerInfo();

  CrashPlayerInfo(const CrashPlayerInfo& from);

  inline CrashPlayerInfo& operator=(const CrashPlayerInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CrashPlayerInfo& default_instance();

  void Swap(CrashPlayerInfo* other);

  // implements Message ----------------------------------------------

  inline CrashPlayerInfo* New() const { return New(NULL); }

  CrashPlayerInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CrashPlayerInfo& from);
  void MergeFrom(const CrashPlayerInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CrashPlayerInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 account = 1;
  bool has_account() const;
  void clear_account();
  static const int kAccountFieldNumber = 1;
  ::google::protobuf::uint64 account() const;
  void set_account(::google::protobuf::uint64 value);

  // required int32 pass_point = 2;
  bool has_pass_point() const;
  void clear_pass_point();
  static const int kPassPointFieldNumber = 2;
  ::google::protobuf::int32 pass_point() const;
  void set_pass_point(::google::protobuf::int32 value);

  // required int32 pass_section = 4;
  bool has_pass_section() const;
  void clear_pass_section();
  static const int kPassSectionFieldNumber = 4;
  ::google::protobuf::int32 pass_section() const;
  void set_pass_section(::google::protobuf::int32 value);

  // required string name = 5;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 5;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // repeated .message.CrashMapData IncompleteMap = 6;
  int incompletemap_size() const;
  void clear_incompletemap();
  static const int kIncompleteMapFieldNumber = 6;
  const ::message::CrashMapData& incompletemap(int index) const;
  ::message::CrashMapData* mutable_incompletemap(int index);
  ::message::CrashMapData* add_incompletemap();
  const ::google::protobuf::RepeatedPtrField< ::message::CrashMapData >&
      incompletemap() const;
  ::google::protobuf::RepeatedPtrField< ::message::CrashMapData >*
      mutable_incompletemap();

  // repeated .message.CrashMapData CompleteMap = 7;
  int completemap_size() const;
  void clear_completemap();
  static const int kCompleteMapFieldNumber = 7;
  const ::message::CrashMapData& completemap(int index) const;
  ::message::CrashMapData* mutable_completemap(int index);
  ::message::CrashMapData* add_completemap();
  const ::google::protobuf::RepeatedPtrField< ::message::CrashMapData >&
      completemap() const;
  ::google::protobuf::RepeatedPtrField< ::message::CrashMapData >*
      mutable_completemap();

  // @@protoc_insertion_point(class_scope:message.CrashPlayerInfo)
 private:
  inline void set_has_account();
  inline void clear_has_account();
  inline void set_has_pass_point();
  inline void clear_has_pass_point();
  inline void set_has_pass_section();
  inline void clear_has_pass_section();
  inline void set_has_name();
  inline void clear_has_name();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 account_;
  ::google::protobuf::int32 pass_point_;
  ::google::protobuf::int32 pass_section_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::RepeatedPtrField< ::message::CrashMapData > incompletemap_;
  ::google::protobuf::RepeatedPtrField< ::message::CrashMapData > completemap_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static CrashPlayerInfo* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// ToyStatData

// required string toy_guid = 1;
inline bool ToyStatData::has_toy_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ToyStatData::set_has_toy_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ToyStatData::clear_has_toy_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ToyStatData::clear_toy_guid() {
  toy_guid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_toy_guid();
}
inline const ::std::string& ToyStatData::toy_guid() const {
  // @@protoc_insertion_point(field_get:message.ToyStatData.toy_guid)
  return toy_guid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ToyStatData::set_toy_guid(const ::std::string& value) {
  set_has_toy_guid();
  toy_guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message.ToyStatData.toy_guid)
}
inline void ToyStatData::set_toy_guid(const char* value) {
  set_has_toy_guid();
  toy_guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.ToyStatData.toy_guid)
}
inline void ToyStatData::set_toy_guid(const char* value, size_t size) {
  set_has_toy_guid();
  toy_guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.ToyStatData.toy_guid)
}
inline ::std::string* ToyStatData::mutable_toy_guid() {
  set_has_toy_guid();
  // @@protoc_insertion_point(field_mutable:message.ToyStatData.toy_guid)
  return toy_guid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ToyStatData::release_toy_guid() {
  clear_has_toy_guid();
  return toy_guid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ToyStatData::set_allocated_toy_guid(::std::string* toy_guid) {
  if (toy_guid != NULL) {
    set_has_toy_guid();
  } else {
    clear_has_toy_guid();
  }
  toy_guid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), toy_guid);
  // @@protoc_insertion_point(field_set_allocated:message.ToyStatData.toy_guid)
}

// required string name = 2;
inline bool ToyStatData::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ToyStatData::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ToyStatData::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ToyStatData::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& ToyStatData::name() const {
  // @@protoc_insertion_point(field_get:message.ToyStatData.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ToyStatData::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message.ToyStatData.name)
}
inline void ToyStatData::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.ToyStatData.name)
}
inline void ToyStatData::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.ToyStatData.name)
}
inline ::std::string* ToyStatData::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:message.ToyStatData.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ToyStatData::release_name() {
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ToyStatData::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:message.ToyStatData.name)
}

// required int32 level = 3;
inline bool ToyStatData::has_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ToyStatData::set_has_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ToyStatData::clear_has_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ToyStatData::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 ToyStatData::level() const {
  // @@protoc_insertion_point(field_get:message.ToyStatData.level)
  return level_;
}
inline void ToyStatData::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:message.ToyStatData.level)
}

// required int32 exp = 4;
inline bool ToyStatData::has_exp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ToyStatData::set_has_exp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ToyStatData::clear_has_exp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ToyStatData::clear_exp() {
  exp_ = 0;
  clear_has_exp();
}
inline ::google::protobuf::int32 ToyStatData::exp() const {
  // @@protoc_insertion_point(field_get:message.ToyStatData.exp)
  return exp_;
}
inline void ToyStatData::set_exp(::google::protobuf::int32 value) {
  set_has_exp();
  exp_ = value;
  // @@protoc_insertion_point(field_set:message.ToyStatData.exp)
}

// required int32 id = 5;
inline bool ToyStatData::has_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ToyStatData::set_has_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ToyStatData::clear_has_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ToyStatData::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 ToyStatData::id() const {
  // @@protoc_insertion_point(field_get:message.ToyStatData.id)
  return id_;
}
inline void ToyStatData::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:message.ToyStatData.id)
}

// -------------------------------------------------------------------

// ToyStateProperty

// required .message.ToyStatData toy_state = 1;
inline bool ToyStateProperty::has_toy_state() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ToyStateProperty::set_has_toy_state() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ToyStateProperty::clear_has_toy_state() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ToyStateProperty::clear_toy_state() {
  if (toy_state_ != NULL) toy_state_->::message::ToyStatData::Clear();
  clear_has_toy_state();
}
inline const ::message::ToyStatData& ToyStateProperty::toy_state() const {
  // @@protoc_insertion_point(field_get:message.ToyStateProperty.toy_state)
  return toy_state_ != NULL ? *toy_state_ : *default_instance_->toy_state_;
}
inline ::message::ToyStatData* ToyStateProperty::mutable_toy_state() {
  set_has_toy_state();
  if (toy_state_ == NULL) {
    toy_state_ = new ::message::ToyStatData;
  }
  // @@protoc_insertion_point(field_mutable:message.ToyStateProperty.toy_state)
  return toy_state_;
}
inline ::message::ToyStatData* ToyStateProperty::release_toy_state() {
  clear_has_toy_state();
  ::message::ToyStatData* temp = toy_state_;
  toy_state_ = NULL;
  return temp;
}
inline void ToyStateProperty::set_allocated_toy_state(::message::ToyStatData* toy_state) {
  delete toy_state_;
  toy_state_ = toy_state;
  if (toy_state) {
    set_has_toy_state();
  } else {
    clear_has_toy_state();
  }
  // @@protoc_insertion_point(field_set_allocated:message.ToyStateProperty.toy_state)
}

// required int32 hp = 2;
inline bool ToyStateProperty::has_hp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ToyStateProperty::set_has_hp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ToyStateProperty::clear_has_hp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ToyStateProperty::clear_hp() {
  hp_ = 0;
  clear_has_hp();
}
inline ::google::protobuf::int32 ToyStateProperty::hp() const {
  // @@protoc_insertion_point(field_get:message.ToyStateProperty.hp)
  return hp_;
}
inline void ToyStateProperty::set_hp(::google::protobuf::int32 value) {
  set_has_hp();
  hp_ = value;
  // @@protoc_insertion_point(field_set:message.ToyStateProperty.hp)
}

// required int32 atk = 3;
inline bool ToyStateProperty::has_atk() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ToyStateProperty::set_has_atk() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ToyStateProperty::clear_has_atk() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ToyStateProperty::clear_atk() {
  atk_ = 0;
  clear_has_atk();
}
inline ::google::protobuf::int32 ToyStateProperty::atk() const {
  // @@protoc_insertion_point(field_get:message.ToyStateProperty.atk)
  return atk_;
}
inline void ToyStateProperty::set_atk(::google::protobuf::int32 value) {
  set_has_atk();
  atk_ = value;
  // @@protoc_insertion_point(field_set:message.ToyStateProperty.atk)
}

// required int32 def = 4;
inline bool ToyStateProperty::has_def() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ToyStateProperty::set_has_def() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ToyStateProperty::clear_has_def() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ToyStateProperty::clear_def() {
  def_ = 0;
  clear_has_def();
}
inline ::google::protobuf::int32 ToyStateProperty::def() const {
  // @@protoc_insertion_point(field_get:message.ToyStateProperty.def)
  return def_;
}
inline void ToyStateProperty::set_def(::google::protobuf::int32 value) {
  set_has_def();
  def_ = value;
  // @@protoc_insertion_point(field_set:message.ToyStateProperty.def)
}

// required int32 mspd = 5;
inline bool ToyStateProperty::has_mspd() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ToyStateProperty::set_has_mspd() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ToyStateProperty::clear_has_mspd() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ToyStateProperty::clear_mspd() {
  mspd_ = 0;
  clear_has_mspd();
}
inline ::google::protobuf::int32 ToyStateProperty::mspd() const {
  // @@protoc_insertion_point(field_get:message.ToyStateProperty.mspd)
  return mspd_;
}
inline void ToyStateProperty::set_mspd(::google::protobuf::int32 value) {
  set_has_mspd();
  mspd_ = value;
  // @@protoc_insertion_point(field_set:message.ToyStateProperty.mspd)
}

// required int32 spirit = 6;
inline bool ToyStateProperty::has_spirit() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ToyStateProperty::set_has_spirit() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ToyStateProperty::clear_has_spirit() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ToyStateProperty::clear_spirit() {
  spirit_ = 0;
  clear_has_spirit();
}
inline ::google::protobuf::int32 ToyStateProperty::spirit() const {
  // @@protoc_insertion_point(field_get:message.ToyStateProperty.spirit)
  return spirit_;
}
inline void ToyStateProperty::set_spirit(::google::protobuf::int32 value) {
  set_has_spirit();
  spirit_ = value;
  // @@protoc_insertion_point(field_set:message.ToyStateProperty.spirit)
}

// required int32 aspd = 7;
inline bool ToyStateProperty::has_aspd() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ToyStateProperty::set_has_aspd() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ToyStateProperty::clear_has_aspd() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ToyStateProperty::clear_aspd() {
  aspd_ = 0;
  clear_has_aspd();
}
inline ::google::protobuf::int32 ToyStateProperty::aspd() const {
  // @@protoc_insertion_point(field_get:message.ToyStateProperty.aspd)
  return aspd_;
}
inline void ToyStateProperty::set_aspd(::google::protobuf::int32 value) {
  set_has_aspd();
  aspd_ = value;
  // @@protoc_insertion_point(field_set:message.ToyStateProperty.aspd)
}

// -------------------------------------------------------------------

// NoneCharacterData

// required bytes instances_status = 1;
inline bool NoneCharacterData::has_instances_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NoneCharacterData::set_has_instances_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NoneCharacterData::clear_has_instances_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NoneCharacterData::clear_instances_status() {
  instances_status_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_instances_status();
}
inline const ::std::string& NoneCharacterData::instances_status() const {
  // @@protoc_insertion_point(field_get:message.NoneCharacterData.instances_status)
  return instances_status_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NoneCharacterData::set_instances_status(const ::std::string& value) {
  set_has_instances_status();
  instances_status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message.NoneCharacterData.instances_status)
}
inline void NoneCharacterData::set_instances_status(const char* value) {
  set_has_instances_status();
  instances_status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.NoneCharacterData.instances_status)
}
inline void NoneCharacterData::set_instances_status(const void* value, size_t size) {
  set_has_instances_status();
  instances_status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.NoneCharacterData.instances_status)
}
inline ::std::string* NoneCharacterData::mutable_instances_status() {
  set_has_instances_status();
  // @@protoc_insertion_point(field_mutable:message.NoneCharacterData.instances_status)
  return instances_status_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NoneCharacterData::release_instances_status() {
  clear_has_instances_status();
  return instances_status_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NoneCharacterData::set_allocated_instances_status(::std::string* instances_status) {
  if (instances_status != NULL) {
    set_has_instances_status();
  } else {
    clear_has_instances_status();
  }
  instances_status_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), instances_status);
  // @@protoc_insertion_point(field_set_allocated:message.NoneCharacterData.instances_status)
}

// repeated .message.ToyStatData toys = 2;
inline int NoneCharacterData::toys_size() const {
  return toys_.size();
}
inline void NoneCharacterData::clear_toys() {
  toys_.Clear();
}
inline const ::message::ToyStatData& NoneCharacterData::toys(int index) const {
  // @@protoc_insertion_point(field_get:message.NoneCharacterData.toys)
  return toys_.Get(index);
}
inline ::message::ToyStatData* NoneCharacterData::mutable_toys(int index) {
  // @@protoc_insertion_point(field_mutable:message.NoneCharacterData.toys)
  return toys_.Mutable(index);
}
inline ::message::ToyStatData* NoneCharacterData::add_toys() {
  // @@protoc_insertion_point(field_add:message.NoneCharacterData.toys)
  return toys_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::message::ToyStatData >&
NoneCharacterData::toys() const {
  // @@protoc_insertion_point(field_list:message.NoneCharacterData.toys)
  return toys_;
}
inline ::google::protobuf::RepeatedPtrField< ::message::ToyStatData >*
NoneCharacterData::mutable_toys() {
  // @@protoc_insertion_point(field_mutable_list:message.NoneCharacterData.toys)
  return &toys_;
}

// repeated int32 pass_instances = 3;
inline int NoneCharacterData::pass_instances_size() const {
  return pass_instances_.size();
}
inline void NoneCharacterData::clear_pass_instances() {
  pass_instances_.Clear();
}
inline ::google::protobuf::int32 NoneCharacterData::pass_instances(int index) const {
  // @@protoc_insertion_point(field_get:message.NoneCharacterData.pass_instances)
  return pass_instances_.Get(index);
}
inline void NoneCharacterData::set_pass_instances(int index, ::google::protobuf::int32 value) {
  pass_instances_.Set(index, value);
  // @@protoc_insertion_point(field_set:message.NoneCharacterData.pass_instances)
}
inline void NoneCharacterData::add_pass_instances(::google::protobuf::int32 value) {
  pass_instances_.Add(value);
  // @@protoc_insertion_point(field_add:message.NoneCharacterData.pass_instances)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
NoneCharacterData::pass_instances() const {
  // @@protoc_insertion_point(field_list:message.NoneCharacterData.pass_instances)
  return pass_instances_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
NoneCharacterData::mutable_pass_instances() {
  // @@protoc_insertion_point(field_mutable_list:message.NoneCharacterData.pass_instances)
  return &pass_instances_;
}

// required string guid = 4;
inline bool NoneCharacterData::has_guid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void NoneCharacterData::set_has_guid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void NoneCharacterData::clear_has_guid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void NoneCharacterData::clear_guid() {
  guid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_guid();
}
inline const ::std::string& NoneCharacterData::guid() const {
  // @@protoc_insertion_point(field_get:message.NoneCharacterData.guid)
  return guid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NoneCharacterData::set_guid(const ::std::string& value) {
  set_has_guid();
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message.NoneCharacterData.guid)
}
inline void NoneCharacterData::set_guid(const char* value) {
  set_has_guid();
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.NoneCharacterData.guid)
}
inline void NoneCharacterData::set_guid(const char* value, size_t size) {
  set_has_guid();
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.NoneCharacterData.guid)
}
inline ::std::string* NoneCharacterData::mutable_guid() {
  set_has_guid();
  // @@protoc_insertion_point(field_mutable:message.NoneCharacterData.guid)
  return guid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NoneCharacterData::release_guid() {
  clear_has_guid();
  return guid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NoneCharacterData::set_allocated_guid(::std::string* guid) {
  if (guid != NULL) {
    set_has_guid();
  } else {
    clear_has_guid();
  }
  guid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), guid);
  // @@protoc_insertion_point(field_set_allocated:message.NoneCharacterData.guid)
}

// -------------------------------------------------------------------

// NoneCharacterDataServer

// required .message.NoneCharacterData data = 1;
inline bool NoneCharacterDataServer::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NoneCharacterDataServer::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NoneCharacterDataServer::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NoneCharacterDataServer::clear_data() {
  if (data_ != NULL) data_->::message::NoneCharacterData::Clear();
  clear_has_data();
}
inline const ::message::NoneCharacterData& NoneCharacterDataServer::data() const {
  // @@protoc_insertion_point(field_get:message.NoneCharacterDataServer.data)
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
inline ::message::NoneCharacterData* NoneCharacterDataServer::mutable_data() {
  set_has_data();
  if (data_ == NULL) {
    data_ = new ::message::NoneCharacterData;
  }
  // @@protoc_insertion_point(field_mutable:message.NoneCharacterDataServer.data)
  return data_;
}
inline ::message::NoneCharacterData* NoneCharacterDataServer::release_data() {
  clear_has_data();
  ::message::NoneCharacterData* temp = data_;
  data_ = NULL;
  return temp;
}
inline void NoneCharacterDataServer::set_allocated_data(::message::NoneCharacterData* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
  // @@protoc_insertion_point(field_set_allocated:message.NoneCharacterDataServer.data)
}

// required uint64 account = 2;
inline bool NoneCharacterDataServer::has_account() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NoneCharacterDataServer::set_has_account() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NoneCharacterDataServer::clear_has_account() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NoneCharacterDataServer::clear_account() {
  account_ = GOOGLE_ULONGLONG(0);
  clear_has_account();
}
inline ::google::protobuf::uint64 NoneCharacterDataServer::account() const {
  // @@protoc_insertion_point(field_get:message.NoneCharacterDataServer.account)
  return account_;
}
inline void NoneCharacterDataServer::set_account(::google::protobuf::uint64 value) {
  set_has_account();
  account_ = value;
  // @@protoc_insertion_point(field_set:message.NoneCharacterDataServer.account)
}

// -------------------------------------------------------------------

// int32array

// repeated int32 data = 1;
inline int int32array::data_size() const {
  return data_.size();
}
inline void int32array::clear_data() {
  data_.Clear();
}
inline ::google::protobuf::int32 int32array::data(int index) const {
  // @@protoc_insertion_point(field_get:message.int32array.data)
  return data_.Get(index);
}
inline void int32array::set_data(int index, ::google::protobuf::int32 value) {
  data_.Set(index, value);
  // @@protoc_insertion_point(field_set:message.int32array.data)
}
inline void int32array::add_data(::google::protobuf::int32 value) {
  data_.Add(value);
  // @@protoc_insertion_point(field_add:message.int32array.data)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
int32array::data() const {
  // @@protoc_insertion_point(field_list:message.int32array.data)
  return data_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
int32array::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:message.int32array.data)
  return &data_;
}

// -------------------------------------------------------------------

// CrashmoMapBaseData

// required int32 width = 1;
inline bool CrashmoMapBaseData::has_width() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CrashmoMapBaseData::set_has_width() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CrashmoMapBaseData::clear_has_width() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CrashmoMapBaseData::clear_width() {
  width_ = 0;
  clear_has_width();
}
inline ::google::protobuf::int32 CrashmoMapBaseData::width() const {
  // @@protoc_insertion_point(field_get:message.CrashmoMapBaseData.width)
  return width_;
}
inline void CrashmoMapBaseData::set_width(::google::protobuf::int32 value) {
  set_has_width();
  width_ = value;
  // @@protoc_insertion_point(field_set:message.CrashmoMapBaseData.width)
}

// required int32 height = 2;
inline bool CrashmoMapBaseData::has_height() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CrashmoMapBaseData::set_has_height() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CrashmoMapBaseData::clear_has_height() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CrashmoMapBaseData::clear_height() {
  height_ = 0;
  clear_has_height();
}
inline ::google::protobuf::int32 CrashmoMapBaseData::height() const {
  // @@protoc_insertion_point(field_get:message.CrashmoMapBaseData.height)
  return height_;
}
inline void CrashmoMapBaseData::set_height(::google::protobuf::int32 value) {
  set_has_height();
  height_ = value;
  // @@protoc_insertion_point(field_set:message.CrashmoMapBaseData.height)
}

// repeated .message.int32array map_data = 3;
inline int CrashmoMapBaseData::map_data_size() const {
  return map_data_.size();
}
inline void CrashmoMapBaseData::clear_map_data() {
  map_data_.Clear();
}
inline const ::message::int32array& CrashmoMapBaseData::map_data(int index) const {
  // @@protoc_insertion_point(field_get:message.CrashmoMapBaseData.map_data)
  return map_data_.Get(index);
}
inline ::message::int32array* CrashmoMapBaseData::mutable_map_data(int index) {
  // @@protoc_insertion_point(field_mutable:message.CrashmoMapBaseData.map_data)
  return map_data_.Mutable(index);
}
inline ::message::int32array* CrashmoMapBaseData::add_map_data() {
  // @@protoc_insertion_point(field_add:message.CrashmoMapBaseData.map_data)
  return map_data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::message::int32array >&
CrashmoMapBaseData::map_data() const {
  // @@protoc_insertion_point(field_list:message.CrashmoMapBaseData.map_data)
  return map_data_;
}
inline ::google::protobuf::RepeatedPtrField< ::message::int32array >*
CrashmoMapBaseData::mutable_map_data() {
  // @@protoc_insertion_point(field_mutable_list:message.CrashmoMapBaseData.map_data)
  return &map_data_;
}

// required uint64 map_index = 5;
inline bool CrashmoMapBaseData::has_map_index() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CrashmoMapBaseData::set_has_map_index() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CrashmoMapBaseData::clear_has_map_index() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CrashmoMapBaseData::clear_map_index() {
  map_index_ = GOOGLE_ULONGLONG(0);
  clear_has_map_index();
}
inline ::google::protobuf::uint64 CrashmoMapBaseData::map_index() const {
  // @@protoc_insertion_point(field_get:message.CrashmoMapBaseData.map_index)
  return map_index_;
}
inline void CrashmoMapBaseData::set_map_index(::google::protobuf::uint64 value) {
  set_has_map_index();
  map_index_ = value;
  // @@protoc_insertion_point(field_set:message.CrashmoMapBaseData.map_index)
}

// -------------------------------------------------------------------

// CrashMapData

// required .message.CrashmoMapBaseData Data = 1;
inline bool CrashMapData::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CrashMapData::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CrashMapData::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CrashMapData::clear_data() {
  if (data_ != NULL) data_->::message::CrashmoMapBaseData::Clear();
  clear_has_data();
}
inline const ::message::CrashmoMapBaseData& CrashMapData::data() const {
  // @@protoc_insertion_point(field_get:message.CrashMapData.Data)
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
inline ::message::CrashmoMapBaseData* CrashMapData::mutable_data() {
  set_has_data();
  if (data_ == NULL) {
    data_ = new ::message::CrashmoMapBaseData;
  }
  // @@protoc_insertion_point(field_mutable:message.CrashMapData.Data)
  return data_;
}
inline ::message::CrashmoMapBaseData* CrashMapData::release_data() {
  clear_has_data();
  ::message::CrashmoMapBaseData* temp = data_;
  data_ = NULL;
  return temp;
}
inline void CrashMapData::set_allocated_data(::message::CrashmoMapBaseData* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
  // @@protoc_insertion_point(field_set_allocated:message.CrashMapData.Data)
}

// required string MapName = 2;
inline bool CrashMapData::has_mapname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CrashMapData::set_has_mapname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CrashMapData::clear_has_mapname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CrashMapData::clear_mapname() {
  mapname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_mapname();
}
inline const ::std::string& CrashMapData::mapname() const {
  // @@protoc_insertion_point(field_get:message.CrashMapData.MapName)
  return mapname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CrashMapData::set_mapname(const ::std::string& value) {
  set_has_mapname();
  mapname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message.CrashMapData.MapName)
}
inline void CrashMapData::set_mapname(const char* value) {
  set_has_mapname();
  mapname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.CrashMapData.MapName)
}
inline void CrashMapData::set_mapname(const char* value, size_t size) {
  set_has_mapname();
  mapname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.CrashMapData.MapName)
}
inline ::std::string* CrashMapData::mutable_mapname() {
  set_has_mapname();
  // @@protoc_insertion_point(field_mutable:message.CrashMapData.MapName)
  return mapname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CrashMapData::release_mapname() {
  clear_has_mapname();
  return mapname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CrashMapData::set_allocated_mapname(::std::string* mapname) {
  if (mapname != NULL) {
    set_has_mapname();
  } else {
    clear_has_mapname();
  }
  mapname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mapname);
  // @@protoc_insertion_point(field_set_allocated:message.CrashMapData.MapName)
}

// required string CreaterName = 3;
inline bool CrashMapData::has_creatername() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CrashMapData::set_has_creatername() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CrashMapData::clear_has_creatername() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CrashMapData::clear_creatername() {
  creatername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_creatername();
}
inline const ::std::string& CrashMapData::creatername() const {
  // @@protoc_insertion_point(field_get:message.CrashMapData.CreaterName)
  return creatername_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CrashMapData::set_creatername(const ::std::string& value) {
  set_has_creatername();
  creatername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message.CrashMapData.CreaterName)
}
inline void CrashMapData::set_creatername(const char* value) {
  set_has_creatername();
  creatername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.CrashMapData.CreaterName)
}
inline void CrashMapData::set_creatername(const char* value, size_t size) {
  set_has_creatername();
  creatername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.CrashMapData.CreaterName)
}
inline ::std::string* CrashMapData::mutable_creatername() {
  set_has_creatername();
  // @@protoc_insertion_point(field_mutable:message.CrashMapData.CreaterName)
  return creatername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CrashMapData::release_creatername() {
  clear_has_creatername();
  return creatername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CrashMapData::set_allocated_creatername(::std::string* creatername) {
  if (creatername != NULL) {
    set_has_creatername();
  } else {
    clear_has_creatername();
  }
  creatername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), creatername);
  // @@protoc_insertion_point(field_set_allocated:message.CrashMapData.CreaterName)
}

// required int32 Section = 4;
inline bool CrashMapData::has_section() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CrashMapData::set_has_section() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CrashMapData::clear_has_section() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CrashMapData::clear_section() {
  section_ = 0;
  clear_has_section();
}
inline ::google::protobuf::int32 CrashMapData::section() const {
  // @@protoc_insertion_point(field_get:message.CrashMapData.Section)
  return section_;
}
inline void CrashMapData::set_section(::google::protobuf::int32 value) {
  set_has_section();
  section_ = value;
  // @@protoc_insertion_point(field_set:message.CrashMapData.Section)
}

// required int32 number = 5;
inline bool CrashMapData::has_number() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CrashMapData::set_has_number() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CrashMapData::clear_has_number() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CrashMapData::clear_number() {
  number_ = 0;
  clear_has_number();
}
inline ::google::protobuf::int32 CrashMapData::number() const {
  // @@protoc_insertion_point(field_get:message.CrashMapData.number)
  return number_;
}
inline void CrashMapData::set_number(::google::protobuf::int32 value) {
  set_has_number();
  number_ = value;
  // @@protoc_insertion_point(field_set:message.CrashMapData.number)
}

// required uint64 create_time = 6;
inline bool CrashMapData::has_create_time() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CrashMapData::set_has_create_time() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CrashMapData::clear_has_create_time() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CrashMapData::clear_create_time() {
  create_time_ = GOOGLE_ULONGLONG(0);
  clear_has_create_time();
}
inline ::google::protobuf::uint64 CrashMapData::create_time() const {
  // @@protoc_insertion_point(field_get:message.CrashMapData.create_time)
  return create_time_;
}
inline void CrashMapData::set_create_time(::google::protobuf::uint64 value) {
  set_has_create_time();
  create_time_ = value;
  // @@protoc_insertion_point(field_set:message.CrashMapData.create_time)
}

// -------------------------------------------------------------------

// CrashPlayerInfo

// required uint64 account = 1;
inline bool CrashPlayerInfo::has_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CrashPlayerInfo::set_has_account() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CrashPlayerInfo::clear_has_account() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CrashPlayerInfo::clear_account() {
  account_ = GOOGLE_ULONGLONG(0);
  clear_has_account();
}
inline ::google::protobuf::uint64 CrashPlayerInfo::account() const {
  // @@protoc_insertion_point(field_get:message.CrashPlayerInfo.account)
  return account_;
}
inline void CrashPlayerInfo::set_account(::google::protobuf::uint64 value) {
  set_has_account();
  account_ = value;
  // @@protoc_insertion_point(field_set:message.CrashPlayerInfo.account)
}

// required int32 pass_point = 2;
inline bool CrashPlayerInfo::has_pass_point() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CrashPlayerInfo::set_has_pass_point() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CrashPlayerInfo::clear_has_pass_point() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CrashPlayerInfo::clear_pass_point() {
  pass_point_ = 0;
  clear_has_pass_point();
}
inline ::google::protobuf::int32 CrashPlayerInfo::pass_point() const {
  // @@protoc_insertion_point(field_get:message.CrashPlayerInfo.pass_point)
  return pass_point_;
}
inline void CrashPlayerInfo::set_pass_point(::google::protobuf::int32 value) {
  set_has_pass_point();
  pass_point_ = value;
  // @@protoc_insertion_point(field_set:message.CrashPlayerInfo.pass_point)
}

// required int32 pass_section = 4;
inline bool CrashPlayerInfo::has_pass_section() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CrashPlayerInfo::set_has_pass_section() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CrashPlayerInfo::clear_has_pass_section() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CrashPlayerInfo::clear_pass_section() {
  pass_section_ = 0;
  clear_has_pass_section();
}
inline ::google::protobuf::int32 CrashPlayerInfo::pass_section() const {
  // @@protoc_insertion_point(field_get:message.CrashPlayerInfo.pass_section)
  return pass_section_;
}
inline void CrashPlayerInfo::set_pass_section(::google::protobuf::int32 value) {
  set_has_pass_section();
  pass_section_ = value;
  // @@protoc_insertion_point(field_set:message.CrashPlayerInfo.pass_section)
}

// required string name = 5;
inline bool CrashPlayerInfo::has_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CrashPlayerInfo::set_has_name() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CrashPlayerInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CrashPlayerInfo::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& CrashPlayerInfo::name() const {
  // @@protoc_insertion_point(field_get:message.CrashPlayerInfo.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CrashPlayerInfo::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message.CrashPlayerInfo.name)
}
inline void CrashPlayerInfo::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.CrashPlayerInfo.name)
}
inline void CrashPlayerInfo::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.CrashPlayerInfo.name)
}
inline ::std::string* CrashPlayerInfo::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:message.CrashPlayerInfo.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CrashPlayerInfo::release_name() {
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CrashPlayerInfo::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:message.CrashPlayerInfo.name)
}

// repeated .message.CrashMapData IncompleteMap = 6;
inline int CrashPlayerInfo::incompletemap_size() const {
  return incompletemap_.size();
}
inline void CrashPlayerInfo::clear_incompletemap() {
  incompletemap_.Clear();
}
inline const ::message::CrashMapData& CrashPlayerInfo::incompletemap(int index) const {
  // @@protoc_insertion_point(field_get:message.CrashPlayerInfo.IncompleteMap)
  return incompletemap_.Get(index);
}
inline ::message::CrashMapData* CrashPlayerInfo::mutable_incompletemap(int index) {
  // @@protoc_insertion_point(field_mutable:message.CrashPlayerInfo.IncompleteMap)
  return incompletemap_.Mutable(index);
}
inline ::message::CrashMapData* CrashPlayerInfo::add_incompletemap() {
  // @@protoc_insertion_point(field_add:message.CrashPlayerInfo.IncompleteMap)
  return incompletemap_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::message::CrashMapData >&
CrashPlayerInfo::incompletemap() const {
  // @@protoc_insertion_point(field_list:message.CrashPlayerInfo.IncompleteMap)
  return incompletemap_;
}
inline ::google::protobuf::RepeatedPtrField< ::message::CrashMapData >*
CrashPlayerInfo::mutable_incompletemap() {
  // @@protoc_insertion_point(field_mutable_list:message.CrashPlayerInfo.IncompleteMap)
  return &incompletemap_;
}

// repeated .message.CrashMapData CompleteMap = 7;
inline int CrashPlayerInfo::completemap_size() const {
  return completemap_.size();
}
inline void CrashPlayerInfo::clear_completemap() {
  completemap_.Clear();
}
inline const ::message::CrashMapData& CrashPlayerInfo::completemap(int index) const {
  // @@protoc_insertion_point(field_get:message.CrashPlayerInfo.CompleteMap)
  return completemap_.Get(index);
}
inline ::message::CrashMapData* CrashPlayerInfo::mutable_completemap(int index) {
  // @@protoc_insertion_point(field_mutable:message.CrashPlayerInfo.CompleteMap)
  return completemap_.Mutable(index);
}
inline ::message::CrashMapData* CrashPlayerInfo::add_completemap() {
  // @@protoc_insertion_point(field_add:message.CrashPlayerInfo.CompleteMap)
  return completemap_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::message::CrashMapData >&
CrashPlayerInfo::completemap() const {
  // @@protoc_insertion_point(field_list:message.CrashPlayerInfo.CompleteMap)
  return completemap_;
}
inline ::google::protobuf::RepeatedPtrField< ::message::CrashMapData >*
CrashPlayerInfo::mutable_completemap() {
  // @@protoc_insertion_point(field_mutable_list:message.CrashPlayerInfo.CompleteMap)
  return &completemap_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace message

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_common_2eproto__INCLUDED
