// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "common.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace message {

namespace {

const ::google::protobuf::Descriptor* ToyStatData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ToyStatData_reflection_ = NULL;
const ::google::protobuf::Descriptor* ToyStateProperty_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ToyStateProperty_reflection_ = NULL;
const ::google::protobuf::Descriptor* NoneCharacterData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NoneCharacterData_reflection_ = NULL;
const ::google::protobuf::Descriptor* NoneCharacterDataServer_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NoneCharacterDataServer_reflection_ = NULL;
const ::google::protobuf::Descriptor* int32array_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  int32array_reflection_ = NULL;
const ::google::protobuf::Descriptor* CrashmoMapBaseData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CrashmoMapBaseData_reflection_ = NULL;
const ::google::protobuf::Descriptor* CrashMapData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CrashMapData_reflection_ = NULL;
const ::google::protobuf::Descriptor* CrashPlayerInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CrashPlayerInfo_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_common_2eproto() {
  protobuf_AddDesc_common_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "common.proto");
  GOOGLE_CHECK(file != NULL);
  ToyStatData_descriptor_ = file->message_type(0);
  static const int ToyStatData_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToyStatData, toy_guid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToyStatData, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToyStatData, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToyStatData, exp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToyStatData, id_),
  };
  ToyStatData_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ToyStatData_descriptor_,
      ToyStatData::default_instance_,
      ToyStatData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToyStatData, _has_bits_[0]),
      -1,
      -1,
      sizeof(ToyStatData),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToyStatData, _internal_metadata_),
      -1);
  ToyStateProperty_descriptor_ = file->message_type(1);
  static const int ToyStateProperty_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToyStateProperty, toy_state_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToyStateProperty, hp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToyStateProperty, atk_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToyStateProperty, def_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToyStateProperty, mspd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToyStateProperty, spirit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToyStateProperty, aspd_),
  };
  ToyStateProperty_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ToyStateProperty_descriptor_,
      ToyStateProperty::default_instance_,
      ToyStateProperty_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToyStateProperty, _has_bits_[0]),
      -1,
      -1,
      sizeof(ToyStateProperty),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToyStateProperty, _internal_metadata_),
      -1);
  NoneCharacterData_descriptor_ = file->message_type(2);
  static const int NoneCharacterData_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NoneCharacterData, instances_status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NoneCharacterData, toys_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NoneCharacterData, pass_instances_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NoneCharacterData, guid_),
  };
  NoneCharacterData_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      NoneCharacterData_descriptor_,
      NoneCharacterData::default_instance_,
      NoneCharacterData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NoneCharacterData, _has_bits_[0]),
      -1,
      -1,
      sizeof(NoneCharacterData),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NoneCharacterData, _internal_metadata_),
      -1);
  NoneCharacterDataServer_descriptor_ = file->message_type(3);
  static const int NoneCharacterDataServer_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NoneCharacterDataServer, data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NoneCharacterDataServer, account_),
  };
  NoneCharacterDataServer_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      NoneCharacterDataServer_descriptor_,
      NoneCharacterDataServer::default_instance_,
      NoneCharacterDataServer_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NoneCharacterDataServer, _has_bits_[0]),
      -1,
      -1,
      sizeof(NoneCharacterDataServer),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NoneCharacterDataServer, _internal_metadata_),
      -1);
  int32array_descriptor_ = file->message_type(4);
  static const int int32array_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(int32array, data_),
  };
  int32array_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      int32array_descriptor_,
      int32array::default_instance_,
      int32array_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(int32array, _has_bits_[0]),
      -1,
      -1,
      sizeof(int32array),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(int32array, _internal_metadata_),
      -1);
  CrashmoMapBaseData_descriptor_ = file->message_type(5);
  static const int CrashmoMapBaseData_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CrashmoMapBaseData, width_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CrashmoMapBaseData, height_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CrashmoMapBaseData, map_data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CrashmoMapBaseData, map_index_),
  };
  CrashmoMapBaseData_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CrashmoMapBaseData_descriptor_,
      CrashmoMapBaseData::default_instance_,
      CrashmoMapBaseData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CrashmoMapBaseData, _has_bits_[0]),
      -1,
      -1,
      sizeof(CrashmoMapBaseData),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CrashmoMapBaseData, _internal_metadata_),
      -1);
  CrashMapData_descriptor_ = file->message_type(6);
  static const int CrashMapData_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CrashMapData, data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CrashMapData, mapname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CrashMapData, creatername_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CrashMapData, section_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CrashMapData, number_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CrashMapData, create_time_),
  };
  CrashMapData_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CrashMapData_descriptor_,
      CrashMapData::default_instance_,
      CrashMapData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CrashMapData, _has_bits_[0]),
      -1,
      -1,
      sizeof(CrashMapData),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CrashMapData, _internal_metadata_),
      -1);
  CrashPlayerInfo_descriptor_ = file->message_type(7);
  static const int CrashPlayerInfo_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CrashPlayerInfo, account_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CrashPlayerInfo, pass_point_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CrashPlayerInfo, pass_section_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CrashPlayerInfo, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CrashPlayerInfo, incompletemap_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CrashPlayerInfo, completemap_),
  };
  CrashPlayerInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CrashPlayerInfo_descriptor_,
      CrashPlayerInfo::default_instance_,
      CrashPlayerInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CrashPlayerInfo, _has_bits_[0]),
      -1,
      -1,
      sizeof(CrashPlayerInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CrashPlayerInfo, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_common_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ToyStatData_descriptor_, &ToyStatData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ToyStateProperty_descriptor_, &ToyStateProperty::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      NoneCharacterData_descriptor_, &NoneCharacterData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      NoneCharacterDataServer_descriptor_, &NoneCharacterDataServer::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      int32array_descriptor_, &int32array::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CrashmoMapBaseData_descriptor_, &CrashmoMapBaseData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CrashMapData_descriptor_, &CrashMapData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CrashPlayerInfo_descriptor_, &CrashPlayerInfo::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_common_2eproto() {
  delete ToyStatData::default_instance_;
  delete ToyStatData_reflection_;
  delete ToyStateProperty::default_instance_;
  delete ToyStateProperty_reflection_;
  delete NoneCharacterData::default_instance_;
  delete NoneCharacterData_reflection_;
  delete NoneCharacterDataServer::default_instance_;
  delete NoneCharacterDataServer_reflection_;
  delete int32array::default_instance_;
  delete int32array_reflection_;
  delete CrashmoMapBaseData::default_instance_;
  delete CrashmoMapBaseData_reflection_;
  delete CrashMapData::default_instance_;
  delete CrashMapData_reflection_;
  delete CrashPlayerInfo::default_instance_;
  delete CrashPlayerInfo_reflection_;
}

void protobuf_AddDesc_common_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\014common.proto\022\007message\"U\n\013ToyStatData\022\020"
    "\n\010toy_guid\030\001 \002(\t\022\014\n\004name\030\002 \002(\t\022\r\n\005level\030"
    "\003 \002(\005\022\013\n\003exp\030\004 \002(\005\022\n\n\002id\030\005 \002(\005\"\215\001\n\020ToySt"
    "ateProperty\022\'\n\ttoy_state\030\001 \002(\0132\024.message"
    ".ToyStatData\022\n\n\002hp\030\002 \002(\005\022\013\n\003atk\030\003 \002(\005\022\013\n"
    "\003def\030\004 \002(\005\022\014\n\004mspd\030\005 \002(\005\022\016\n\006spirit\030\006 \002(\005"
    "\022\014\n\004aspd\030\007 \002(\005\"w\n\021NoneCharacterData\022\030\n\020i"
    "nstances_status\030\001 \002(\014\022\"\n\004toys\030\002 \003(\0132\024.me"
    "ssage.ToyStatData\022\026\n\016pass_instances\030\003 \003("
    "\005\022\014\n\004guid\030\004 \002(\t\"T\n\027NoneCharacterDataServ"
    "er\022(\n\004data\030\001 \002(\0132\032.message.NoneCharacter"
    "Data\022\017\n\007account\030\002 \002(\004\"\032\n\nint32array\022\014\n\004d"
    "ata\030\001 \003(\005\"m\n\022CrashmoMapBaseData\022\r\n\005width"
    "\030\001 \002(\005\022\016\n\006height\030\002 \002(\005\022%\n\010map_data\030\003 \003(\013"
    "2\023.message.int32array\022\021\n\tmap_index\030\005 \002(\004"
    "\"\225\001\n\014CrashMapData\022)\n\004Data\030\001 \002(\0132\033.messag"
    "e.CrashmoMapBaseData\022\017\n\007MapName\030\002 \002(\t\022\023\n"
    "\013CreaterName\030\003 \002(\t\022\017\n\007Section\030\004 \002(\005\022\016\n\006n"
    "umber\030\005 \002(\005\022\023\n\013create_time\030\006 \002(\004\"\264\001\n\017Cra"
    "shPlayerInfo\022\017\n\007account\030\001 \002(\004\022\022\n\npass_po"
    "int\030\002 \002(\005\022\024\n\014pass_section\030\004 \002(\005\022\014\n\004name\030"
    "\005 \002(\t\022,\n\rIncompleteMap\030\006 \003(\0132\025.message.C"
    "rashMapData\022*\n\013CompleteMap\030\007 \003(\0132\025.messa"
    "ge.CrashMapData", 935);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "common.proto", &protobuf_RegisterTypes);
  ToyStatData::default_instance_ = new ToyStatData();
  ToyStateProperty::default_instance_ = new ToyStateProperty();
  NoneCharacterData::default_instance_ = new NoneCharacterData();
  NoneCharacterDataServer::default_instance_ = new NoneCharacterDataServer();
  int32array::default_instance_ = new int32array();
  CrashmoMapBaseData::default_instance_ = new CrashmoMapBaseData();
  CrashMapData::default_instance_ = new CrashMapData();
  CrashPlayerInfo::default_instance_ = new CrashPlayerInfo();
  ToyStatData::default_instance_->InitAsDefaultInstance();
  ToyStateProperty::default_instance_->InitAsDefaultInstance();
  NoneCharacterData::default_instance_->InitAsDefaultInstance();
  NoneCharacterDataServer::default_instance_->InitAsDefaultInstance();
  int32array::default_instance_->InitAsDefaultInstance();
  CrashmoMapBaseData::default_instance_->InitAsDefaultInstance();
  CrashMapData::default_instance_->InitAsDefaultInstance();
  CrashPlayerInfo::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_common_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_common_2eproto {
  StaticDescriptorInitializer_common_2eproto() {
    protobuf_AddDesc_common_2eproto();
  }
} static_descriptor_initializer_common_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#ifndef _MSC_VER
const int ToyStatData::kToyGuidFieldNumber;
const int ToyStatData::kNameFieldNumber;
const int ToyStatData::kLevelFieldNumber;
const int ToyStatData::kExpFieldNumber;
const int ToyStatData::kIdFieldNumber;
#endif  // !_MSC_VER

ToyStatData::ToyStatData()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.ToyStatData)
}

void ToyStatData::InitAsDefaultInstance() {
}

ToyStatData::ToyStatData(const ToyStatData& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message.ToyStatData)
}

void ToyStatData::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  toy_guid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  level_ = 0;
  exp_ = 0;
  id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ToyStatData::~ToyStatData() {
  // @@protoc_insertion_point(destructor:message.ToyStatData)
  SharedDtor();
}

void ToyStatData::SharedDtor() {
  toy_guid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void ToyStatData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ToyStatData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ToyStatData_descriptor_;
}

const ToyStatData& ToyStatData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_2eproto();
  return *default_instance_;
}

ToyStatData* ToyStatData::default_instance_ = NULL;

ToyStatData* ToyStatData::New(::google::protobuf::Arena* arena) const {
  ToyStatData* n = new ToyStatData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ToyStatData::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ToyStatData*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 31) {
    ZR_(level_, id_);
    if (has_toy_guid()) {
      toy_guid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_name()) {
      name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ToyStatData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.ToyStatData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string toy_guid = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_toy_guid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->toy_guid().data(), this->toy_guid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "message.ToyStatData.toy_guid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // required string name = 2;
      case 2: {
        if (tag == 18) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "message.ToyStatData.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_level;
        break;
      }

      // required int32 level = 3;
      case 3: {
        if (tag == 24) {
         parse_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_exp;
        break;
      }

      // required int32 exp = 4;
      case 4: {
        if (tag == 32) {
         parse_exp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &exp_)));
          set_has_exp();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_id;
        break;
      }

      // required int32 id = 5;
      case 5: {
        if (tag == 40) {
         parse_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.ToyStatData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.ToyStatData)
  return false;
#undef DO_
}

void ToyStatData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.ToyStatData)
  // required string toy_guid = 1;
  if (has_toy_guid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->toy_guid().data(), this->toy_guid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "message.ToyStatData.toy_guid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->toy_guid(), output);
  }

  // required string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "message.ToyStatData.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // required int32 level = 3;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->level(), output);
  }

  // required int32 exp = 4;
  if (has_exp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->exp(), output);
  }

  // required int32 id = 5;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.ToyStatData)
}

::google::protobuf::uint8* ToyStatData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.ToyStatData)
  // required string toy_guid = 1;
  if (has_toy_guid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->toy_guid().data(), this->toy_guid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "message.ToyStatData.toy_guid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->toy_guid(), target);
  }

  // required string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "message.ToyStatData.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // required int32 level = 3;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->level(), target);
  }

  // required int32 exp = 4;
  if (has_exp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->exp(), target);
  }

  // required int32 id = 5;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.ToyStatData)
  return target;
}

int ToyStatData::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_toy_guid()) {
    // required string toy_guid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->toy_guid());
  }

  if (has_name()) {
    // required string name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  if (has_level()) {
    // required int32 level = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->level());
  }

  if (has_exp()) {
    // required int32 exp = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->exp());
  }

  if (has_id()) {
    // required int32 id = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  return total_size;
}
int ToyStatData::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x0000001f) ^ 0x0000001f) == 0) {  // All required fields are present.
    // required string toy_guid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->toy_guid());

    // required string name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

    // required int32 level = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->level());

    // required int32 exp = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->exp());

    // required int32 id = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ToyStatData::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ToyStatData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ToyStatData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ToyStatData::MergeFrom(const ToyStatData& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_toy_guid()) {
      set_has_toy_guid();
      toy_guid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.toy_guid_);
    }
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (from.has_level()) {
      set_level(from.level());
    }
    if (from.has_exp()) {
      set_exp(from.exp());
    }
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ToyStatData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ToyStatData::CopyFrom(const ToyStatData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ToyStatData::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;

  return true;
}

void ToyStatData::Swap(ToyStatData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ToyStatData::InternalSwap(ToyStatData* other) {
  toy_guid_.Swap(&other->toy_guid_);
  name_.Swap(&other->name_);
  std::swap(level_, other->level_);
  std::swap(exp_, other->exp_);
  std::swap(id_, other->id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ToyStatData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ToyStatData_descriptor_;
  metadata.reflection = ToyStatData_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ToyStatData

// required string toy_guid = 1;
 bool ToyStatData::has_toy_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void ToyStatData::set_has_toy_guid() {
  _has_bits_[0] |= 0x00000001u;
}
 void ToyStatData::clear_has_toy_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
 void ToyStatData::clear_toy_guid() {
  toy_guid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_toy_guid();
}
 const ::std::string& ToyStatData::toy_guid() const {
  // @@protoc_insertion_point(field_get:message.ToyStatData.toy_guid)
  return toy_guid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ToyStatData::set_toy_guid(const ::std::string& value) {
  set_has_toy_guid();
  toy_guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message.ToyStatData.toy_guid)
}
 void ToyStatData::set_toy_guid(const char* value) {
  set_has_toy_guid();
  toy_guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.ToyStatData.toy_guid)
}
 void ToyStatData::set_toy_guid(const char* value, size_t size) {
  set_has_toy_guid();
  toy_guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.ToyStatData.toy_guid)
}
 ::std::string* ToyStatData::mutable_toy_guid() {
  set_has_toy_guid();
  // @@protoc_insertion_point(field_mutable:message.ToyStatData.toy_guid)
  return toy_guid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ToyStatData::release_toy_guid() {
  clear_has_toy_guid();
  return toy_guid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ToyStatData::set_allocated_toy_guid(::std::string* toy_guid) {
  if (toy_guid != NULL) {
    set_has_toy_guid();
  } else {
    clear_has_toy_guid();
  }
  toy_guid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), toy_guid);
  // @@protoc_insertion_point(field_set_allocated:message.ToyStatData.toy_guid)
}

// required string name = 2;
 bool ToyStatData::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
 void ToyStatData::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
 void ToyStatData::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
 void ToyStatData::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
 const ::std::string& ToyStatData::name() const {
  // @@protoc_insertion_point(field_get:message.ToyStatData.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ToyStatData::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message.ToyStatData.name)
}
 void ToyStatData::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.ToyStatData.name)
}
 void ToyStatData::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.ToyStatData.name)
}
 ::std::string* ToyStatData::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:message.ToyStatData.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ToyStatData::release_name() {
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ToyStatData::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:message.ToyStatData.name)
}

// required int32 level = 3;
 bool ToyStatData::has_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
 void ToyStatData::set_has_level() {
  _has_bits_[0] |= 0x00000004u;
}
 void ToyStatData::clear_has_level() {
  _has_bits_[0] &= ~0x00000004u;
}
 void ToyStatData::clear_level() {
  level_ = 0;
  clear_has_level();
}
 ::google::protobuf::int32 ToyStatData::level() const {
  // @@protoc_insertion_point(field_get:message.ToyStatData.level)
  return level_;
}
 void ToyStatData::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:message.ToyStatData.level)
}

// required int32 exp = 4;
 bool ToyStatData::has_exp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
 void ToyStatData::set_has_exp() {
  _has_bits_[0] |= 0x00000008u;
}
 void ToyStatData::clear_has_exp() {
  _has_bits_[0] &= ~0x00000008u;
}
 void ToyStatData::clear_exp() {
  exp_ = 0;
  clear_has_exp();
}
 ::google::protobuf::int32 ToyStatData::exp() const {
  // @@protoc_insertion_point(field_get:message.ToyStatData.exp)
  return exp_;
}
 void ToyStatData::set_exp(::google::protobuf::int32 value) {
  set_has_exp();
  exp_ = value;
  // @@protoc_insertion_point(field_set:message.ToyStatData.exp)
}

// required int32 id = 5;
 bool ToyStatData::has_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
 void ToyStatData::set_has_id() {
  _has_bits_[0] |= 0x00000010u;
}
 void ToyStatData::clear_has_id() {
  _has_bits_[0] &= ~0x00000010u;
}
 void ToyStatData::clear_id() {
  id_ = 0;
  clear_has_id();
}
 ::google::protobuf::int32 ToyStatData::id() const {
  // @@protoc_insertion_point(field_get:message.ToyStatData.id)
  return id_;
}
 void ToyStatData::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:message.ToyStatData.id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int ToyStateProperty::kToyStateFieldNumber;
const int ToyStateProperty::kHpFieldNumber;
const int ToyStateProperty::kAtkFieldNumber;
const int ToyStateProperty::kDefFieldNumber;
const int ToyStateProperty::kMspdFieldNumber;
const int ToyStateProperty::kSpiritFieldNumber;
const int ToyStateProperty::kAspdFieldNumber;
#endif  // !_MSC_VER

ToyStateProperty::ToyStateProperty()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.ToyStateProperty)
}

void ToyStateProperty::InitAsDefaultInstance() {
  toy_state_ = const_cast< ::message::ToyStatData*>(&::message::ToyStatData::default_instance());
}

ToyStateProperty::ToyStateProperty(const ToyStateProperty& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message.ToyStateProperty)
}

void ToyStateProperty::SharedCtor() {
  _cached_size_ = 0;
  toy_state_ = NULL;
  hp_ = 0;
  atk_ = 0;
  def_ = 0;
  mspd_ = 0;
  spirit_ = 0;
  aspd_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ToyStateProperty::~ToyStateProperty() {
  // @@protoc_insertion_point(destructor:message.ToyStateProperty)
  SharedDtor();
}

void ToyStateProperty::SharedDtor() {
  if (this != default_instance_) {
    delete toy_state_;
  }
}

void ToyStateProperty::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ToyStateProperty::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ToyStateProperty_descriptor_;
}

const ToyStateProperty& ToyStateProperty::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_2eproto();
  return *default_instance_;
}

ToyStateProperty* ToyStateProperty::default_instance_ = NULL;

ToyStateProperty* ToyStateProperty::New(::google::protobuf::Arena* arena) const {
  ToyStateProperty* n = new ToyStateProperty;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ToyStateProperty::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ToyStateProperty*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 127) {
    ZR_(hp_, aspd_);
    if (has_toy_state()) {
      if (toy_state_ != NULL) toy_state_->::message::ToyStatData::Clear();
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ToyStateProperty::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.ToyStateProperty)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .message.ToyStatData toy_state = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_toy_state()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_hp;
        break;
      }

      // required int32 hp = 2;
      case 2: {
        if (tag == 16) {
         parse_hp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &hp_)));
          set_has_hp();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_atk;
        break;
      }

      // required int32 atk = 3;
      case 3: {
        if (tag == 24) {
         parse_atk:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &atk_)));
          set_has_atk();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_def;
        break;
      }

      // required int32 def = 4;
      case 4: {
        if (tag == 32) {
         parse_def:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &def_)));
          set_has_def();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_mspd;
        break;
      }

      // required int32 mspd = 5;
      case 5: {
        if (tag == 40) {
         parse_mspd:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mspd_)));
          set_has_mspd();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_spirit;
        break;
      }

      // required int32 spirit = 6;
      case 6: {
        if (tag == 48) {
         parse_spirit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &spirit_)));
          set_has_spirit();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_aspd;
        break;
      }

      // required int32 aspd = 7;
      case 7: {
        if (tag == 56) {
         parse_aspd:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &aspd_)));
          set_has_aspd();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.ToyStateProperty)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.ToyStateProperty)
  return false;
#undef DO_
}

void ToyStateProperty::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.ToyStateProperty)
  // required .message.ToyStatData toy_state = 1;
  if (has_toy_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->toy_state_, output);
  }

  // required int32 hp = 2;
  if (has_hp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->hp(), output);
  }

  // required int32 atk = 3;
  if (has_atk()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->atk(), output);
  }

  // required int32 def = 4;
  if (has_def()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->def(), output);
  }

  // required int32 mspd = 5;
  if (has_mspd()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->mspd(), output);
  }

  // required int32 spirit = 6;
  if (has_spirit()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->spirit(), output);
  }

  // required int32 aspd = 7;
  if (has_aspd()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->aspd(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.ToyStateProperty)
}

::google::protobuf::uint8* ToyStateProperty::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.ToyStateProperty)
  // required .message.ToyStatData toy_state = 1;
  if (has_toy_state()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, *this->toy_state_, target);
  }

  // required int32 hp = 2;
  if (has_hp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->hp(), target);
  }

  // required int32 atk = 3;
  if (has_atk()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->atk(), target);
  }

  // required int32 def = 4;
  if (has_def()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->def(), target);
  }

  // required int32 mspd = 5;
  if (has_mspd()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->mspd(), target);
  }

  // required int32 spirit = 6;
  if (has_spirit()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->spirit(), target);
  }

  // required int32 aspd = 7;
  if (has_aspd()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->aspd(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.ToyStateProperty)
  return target;
}

int ToyStateProperty::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_toy_state()) {
    // required .message.ToyStatData toy_state = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->toy_state_);
  }

  if (has_hp()) {
    // required int32 hp = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->hp());
  }

  if (has_atk()) {
    // required int32 atk = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->atk());
  }

  if (has_def()) {
    // required int32 def = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->def());
  }

  if (has_mspd()) {
    // required int32 mspd = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->mspd());
  }

  if (has_spirit()) {
    // required int32 spirit = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->spirit());
  }

  if (has_aspd()) {
    // required int32 aspd = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->aspd());
  }

  return total_size;
}
int ToyStateProperty::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x0000007f) ^ 0x0000007f) == 0) {  // All required fields are present.
    // required .message.ToyStatData toy_state = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->toy_state_);

    // required int32 hp = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->hp());

    // required int32 atk = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->atk());

    // required int32 def = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->def());

    // required int32 mspd = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->mspd());

    // required int32 spirit = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->spirit());

    // required int32 aspd = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->aspd());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ToyStateProperty::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ToyStateProperty* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ToyStateProperty*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ToyStateProperty::MergeFrom(const ToyStateProperty& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_toy_state()) {
      mutable_toy_state()->::message::ToyStatData::MergeFrom(from.toy_state());
    }
    if (from.has_hp()) {
      set_hp(from.hp());
    }
    if (from.has_atk()) {
      set_atk(from.atk());
    }
    if (from.has_def()) {
      set_def(from.def());
    }
    if (from.has_mspd()) {
      set_mspd(from.mspd());
    }
    if (from.has_spirit()) {
      set_spirit(from.spirit());
    }
    if (from.has_aspd()) {
      set_aspd(from.aspd());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ToyStateProperty::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ToyStateProperty::CopyFrom(const ToyStateProperty& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ToyStateProperty::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000007f) != 0x0000007f) return false;

  if (has_toy_state()) {
    if (!this->toy_state_->IsInitialized()) return false;
  }
  return true;
}

void ToyStateProperty::Swap(ToyStateProperty* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ToyStateProperty::InternalSwap(ToyStateProperty* other) {
  std::swap(toy_state_, other->toy_state_);
  std::swap(hp_, other->hp_);
  std::swap(atk_, other->atk_);
  std::swap(def_, other->def_);
  std::swap(mspd_, other->mspd_);
  std::swap(spirit_, other->spirit_);
  std::swap(aspd_, other->aspd_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ToyStateProperty::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ToyStateProperty_descriptor_;
  metadata.reflection = ToyStateProperty_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ToyStateProperty

// required .message.ToyStatData toy_state = 1;
 bool ToyStateProperty::has_toy_state() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void ToyStateProperty::set_has_toy_state() {
  _has_bits_[0] |= 0x00000001u;
}
 void ToyStateProperty::clear_has_toy_state() {
  _has_bits_[0] &= ~0x00000001u;
}
 void ToyStateProperty::clear_toy_state() {
  if (toy_state_ != NULL) toy_state_->::message::ToyStatData::Clear();
  clear_has_toy_state();
}
 const ::message::ToyStatData& ToyStateProperty::toy_state() const {
  // @@protoc_insertion_point(field_get:message.ToyStateProperty.toy_state)
  return toy_state_ != NULL ? *toy_state_ : *default_instance_->toy_state_;
}
 ::message::ToyStatData* ToyStateProperty::mutable_toy_state() {
  set_has_toy_state();
  if (toy_state_ == NULL) {
    toy_state_ = new ::message::ToyStatData;
  }
  // @@protoc_insertion_point(field_mutable:message.ToyStateProperty.toy_state)
  return toy_state_;
}
 ::message::ToyStatData* ToyStateProperty::release_toy_state() {
  clear_has_toy_state();
  ::message::ToyStatData* temp = toy_state_;
  toy_state_ = NULL;
  return temp;
}
 void ToyStateProperty::set_allocated_toy_state(::message::ToyStatData* toy_state) {
  delete toy_state_;
  toy_state_ = toy_state;
  if (toy_state) {
    set_has_toy_state();
  } else {
    clear_has_toy_state();
  }
  // @@protoc_insertion_point(field_set_allocated:message.ToyStateProperty.toy_state)
}

// required int32 hp = 2;
 bool ToyStateProperty::has_hp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
 void ToyStateProperty::set_has_hp() {
  _has_bits_[0] |= 0x00000002u;
}
 void ToyStateProperty::clear_has_hp() {
  _has_bits_[0] &= ~0x00000002u;
}
 void ToyStateProperty::clear_hp() {
  hp_ = 0;
  clear_has_hp();
}
 ::google::protobuf::int32 ToyStateProperty::hp() const {
  // @@protoc_insertion_point(field_get:message.ToyStateProperty.hp)
  return hp_;
}
 void ToyStateProperty::set_hp(::google::protobuf::int32 value) {
  set_has_hp();
  hp_ = value;
  // @@protoc_insertion_point(field_set:message.ToyStateProperty.hp)
}

// required int32 atk = 3;
 bool ToyStateProperty::has_atk() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
 void ToyStateProperty::set_has_atk() {
  _has_bits_[0] |= 0x00000004u;
}
 void ToyStateProperty::clear_has_atk() {
  _has_bits_[0] &= ~0x00000004u;
}
 void ToyStateProperty::clear_atk() {
  atk_ = 0;
  clear_has_atk();
}
 ::google::protobuf::int32 ToyStateProperty::atk() const {
  // @@protoc_insertion_point(field_get:message.ToyStateProperty.atk)
  return atk_;
}
 void ToyStateProperty::set_atk(::google::protobuf::int32 value) {
  set_has_atk();
  atk_ = value;
  // @@protoc_insertion_point(field_set:message.ToyStateProperty.atk)
}

// required int32 def = 4;
 bool ToyStateProperty::has_def() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
 void ToyStateProperty::set_has_def() {
  _has_bits_[0] |= 0x00000008u;
}
 void ToyStateProperty::clear_has_def() {
  _has_bits_[0] &= ~0x00000008u;
}
 void ToyStateProperty::clear_def() {
  def_ = 0;
  clear_has_def();
}
 ::google::protobuf::int32 ToyStateProperty::def() const {
  // @@protoc_insertion_point(field_get:message.ToyStateProperty.def)
  return def_;
}
 void ToyStateProperty::set_def(::google::protobuf::int32 value) {
  set_has_def();
  def_ = value;
  // @@protoc_insertion_point(field_set:message.ToyStateProperty.def)
}

// required int32 mspd = 5;
 bool ToyStateProperty::has_mspd() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
 void ToyStateProperty::set_has_mspd() {
  _has_bits_[0] |= 0x00000010u;
}
 void ToyStateProperty::clear_has_mspd() {
  _has_bits_[0] &= ~0x00000010u;
}
 void ToyStateProperty::clear_mspd() {
  mspd_ = 0;
  clear_has_mspd();
}
 ::google::protobuf::int32 ToyStateProperty::mspd() const {
  // @@protoc_insertion_point(field_get:message.ToyStateProperty.mspd)
  return mspd_;
}
 void ToyStateProperty::set_mspd(::google::protobuf::int32 value) {
  set_has_mspd();
  mspd_ = value;
  // @@protoc_insertion_point(field_set:message.ToyStateProperty.mspd)
}

// required int32 spirit = 6;
 bool ToyStateProperty::has_spirit() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
 void ToyStateProperty::set_has_spirit() {
  _has_bits_[0] |= 0x00000020u;
}
 void ToyStateProperty::clear_has_spirit() {
  _has_bits_[0] &= ~0x00000020u;
}
 void ToyStateProperty::clear_spirit() {
  spirit_ = 0;
  clear_has_spirit();
}
 ::google::protobuf::int32 ToyStateProperty::spirit() const {
  // @@protoc_insertion_point(field_get:message.ToyStateProperty.spirit)
  return spirit_;
}
 void ToyStateProperty::set_spirit(::google::protobuf::int32 value) {
  set_has_spirit();
  spirit_ = value;
  // @@protoc_insertion_point(field_set:message.ToyStateProperty.spirit)
}

// required int32 aspd = 7;
 bool ToyStateProperty::has_aspd() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
 void ToyStateProperty::set_has_aspd() {
  _has_bits_[0] |= 0x00000040u;
}
 void ToyStateProperty::clear_has_aspd() {
  _has_bits_[0] &= ~0x00000040u;
}
 void ToyStateProperty::clear_aspd() {
  aspd_ = 0;
  clear_has_aspd();
}
 ::google::protobuf::int32 ToyStateProperty::aspd() const {
  // @@protoc_insertion_point(field_get:message.ToyStateProperty.aspd)
  return aspd_;
}
 void ToyStateProperty::set_aspd(::google::protobuf::int32 value) {
  set_has_aspd();
  aspd_ = value;
  // @@protoc_insertion_point(field_set:message.ToyStateProperty.aspd)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int NoneCharacterData::kInstancesStatusFieldNumber;
const int NoneCharacterData::kToysFieldNumber;
const int NoneCharacterData::kPassInstancesFieldNumber;
const int NoneCharacterData::kGuidFieldNumber;
#endif  // !_MSC_VER

NoneCharacterData::NoneCharacterData()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.NoneCharacterData)
}

void NoneCharacterData::InitAsDefaultInstance() {
}

NoneCharacterData::NoneCharacterData(const NoneCharacterData& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message.NoneCharacterData)
}

void NoneCharacterData::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  instances_status_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  guid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NoneCharacterData::~NoneCharacterData() {
  // @@protoc_insertion_point(destructor:message.NoneCharacterData)
  SharedDtor();
}

void NoneCharacterData::SharedDtor() {
  instances_status_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  guid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void NoneCharacterData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NoneCharacterData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NoneCharacterData_descriptor_;
}

const NoneCharacterData& NoneCharacterData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_2eproto();
  return *default_instance_;
}

NoneCharacterData* NoneCharacterData::default_instance_ = NULL;

NoneCharacterData* NoneCharacterData::New(::google::protobuf::Arena* arena) const {
  NoneCharacterData* n = new NoneCharacterData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NoneCharacterData::Clear() {
  if (_has_bits_[0 / 32] & 9) {
    if (has_instances_status()) {
      instances_status_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_guid()) {
      guid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  toys_.Clear();
  pass_instances_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool NoneCharacterData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.NoneCharacterData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes instances_status = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_instances_status()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_toys;
        break;
      }

      // repeated .message.ToyStatData toys = 2;
      case 2: {
        if (tag == 18) {
         parse_toys:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_toys()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_toys;
        if (input->ExpectTag(24)) goto parse_pass_instances;
        break;
      }

      // repeated int32 pass_instances = 3;
      case 3: {
        if (tag == 24) {
         parse_pass_instances:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 24, input, this->mutable_pass_instances())));
        } else if (tag == 26) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_pass_instances())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_pass_instances;
        if (input->ExpectTag(34)) goto parse_guid;
        break;
      }

      // required string guid = 4;
      case 4: {
        if (tag == 34) {
         parse_guid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_guid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->guid().data(), this->guid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "message.NoneCharacterData.guid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.NoneCharacterData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.NoneCharacterData)
  return false;
#undef DO_
}

void NoneCharacterData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.NoneCharacterData)
  // required bytes instances_status = 1;
  if (has_instances_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->instances_status(), output);
  }

  // repeated .message.ToyStatData toys = 2;
  for (unsigned int i = 0, n = this->toys_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->toys(i), output);
  }

  // repeated int32 pass_instances = 3;
  for (int i = 0; i < this->pass_instances_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      3, this->pass_instances(i), output);
  }

  // required string guid = 4;
  if (has_guid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->guid().data(), this->guid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "message.NoneCharacterData.guid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->guid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.NoneCharacterData)
}

::google::protobuf::uint8* NoneCharacterData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.NoneCharacterData)
  // required bytes instances_status = 1;
  if (has_instances_status()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->instances_status(), target);
  }

  // repeated .message.ToyStatData toys = 2;
  for (unsigned int i = 0, n = this->toys_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->toys(i), target);
  }

  // repeated int32 pass_instances = 3;
  for (int i = 0; i < this->pass_instances_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(3, this->pass_instances(i), target);
  }

  // required string guid = 4;
  if (has_guid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->guid().data(), this->guid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "message.NoneCharacterData.guid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->guid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.NoneCharacterData)
  return target;
}

int NoneCharacterData::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_instances_status()) {
    // required bytes instances_status = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->instances_status());
  }

  if (has_guid()) {
    // required string guid = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->guid());
  }

  return total_size;
}
int NoneCharacterData::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000009) ^ 0x00000009) == 0) {  // All required fields are present.
    // required bytes instances_status = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->instances_status());

    // required string guid = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->guid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .message.ToyStatData toys = 2;
  total_size += 1 * this->toys_size();
  for (int i = 0; i < this->toys_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->toys(i));
  }

  // repeated int32 pass_instances = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->pass_instances_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->pass_instances(i));
    }
    total_size += 1 * this->pass_instances_size() + data_size;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NoneCharacterData::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const NoneCharacterData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const NoneCharacterData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NoneCharacterData::MergeFrom(const NoneCharacterData& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  toys_.MergeFrom(from.toys_);
  pass_instances_.MergeFrom(from.pass_instances_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_instances_status()) {
      set_has_instances_status();
      instances_status_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.instances_status_);
    }
    if (from.has_guid()) {
      set_has_guid();
      guid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.guid_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void NoneCharacterData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NoneCharacterData::CopyFrom(const NoneCharacterData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NoneCharacterData::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000009) != 0x00000009) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->toys())) return false;
  return true;
}

void NoneCharacterData::Swap(NoneCharacterData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NoneCharacterData::InternalSwap(NoneCharacterData* other) {
  instances_status_.Swap(&other->instances_status_);
  toys_.UnsafeArenaSwap(&other->toys_);
  pass_instances_.UnsafeArenaSwap(&other->pass_instances_);
  guid_.Swap(&other->guid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NoneCharacterData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NoneCharacterData_descriptor_;
  metadata.reflection = NoneCharacterData_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// NoneCharacterData

// required bytes instances_status = 1;
 bool NoneCharacterData::has_instances_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void NoneCharacterData::set_has_instances_status() {
  _has_bits_[0] |= 0x00000001u;
}
 void NoneCharacterData::clear_has_instances_status() {
  _has_bits_[0] &= ~0x00000001u;
}
 void NoneCharacterData::clear_instances_status() {
  instances_status_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_instances_status();
}
 const ::std::string& NoneCharacterData::instances_status() const {
  // @@protoc_insertion_point(field_get:message.NoneCharacterData.instances_status)
  return instances_status_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NoneCharacterData::set_instances_status(const ::std::string& value) {
  set_has_instances_status();
  instances_status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message.NoneCharacterData.instances_status)
}
 void NoneCharacterData::set_instances_status(const char* value) {
  set_has_instances_status();
  instances_status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.NoneCharacterData.instances_status)
}
 void NoneCharacterData::set_instances_status(const void* value, size_t size) {
  set_has_instances_status();
  instances_status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.NoneCharacterData.instances_status)
}
 ::std::string* NoneCharacterData::mutable_instances_status() {
  set_has_instances_status();
  // @@protoc_insertion_point(field_mutable:message.NoneCharacterData.instances_status)
  return instances_status_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* NoneCharacterData::release_instances_status() {
  clear_has_instances_status();
  return instances_status_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NoneCharacterData::set_allocated_instances_status(::std::string* instances_status) {
  if (instances_status != NULL) {
    set_has_instances_status();
  } else {
    clear_has_instances_status();
  }
  instances_status_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), instances_status);
  // @@protoc_insertion_point(field_set_allocated:message.NoneCharacterData.instances_status)
}

// repeated .message.ToyStatData toys = 2;
 int NoneCharacterData::toys_size() const {
  return toys_.size();
}
 void NoneCharacterData::clear_toys() {
  toys_.Clear();
}
 const ::message::ToyStatData& NoneCharacterData::toys(int index) const {
  // @@protoc_insertion_point(field_get:message.NoneCharacterData.toys)
  return toys_.Get(index);
}
 ::message::ToyStatData* NoneCharacterData::mutable_toys(int index) {
  // @@protoc_insertion_point(field_mutable:message.NoneCharacterData.toys)
  return toys_.Mutable(index);
}
 ::message::ToyStatData* NoneCharacterData::add_toys() {
  // @@protoc_insertion_point(field_add:message.NoneCharacterData.toys)
  return toys_.Add();
}
 const ::google::protobuf::RepeatedPtrField< ::message::ToyStatData >&
NoneCharacterData::toys() const {
  // @@protoc_insertion_point(field_list:message.NoneCharacterData.toys)
  return toys_;
}
 ::google::protobuf::RepeatedPtrField< ::message::ToyStatData >*
NoneCharacterData::mutable_toys() {
  // @@protoc_insertion_point(field_mutable_list:message.NoneCharacterData.toys)
  return &toys_;
}

// repeated int32 pass_instances = 3;
 int NoneCharacterData::pass_instances_size() const {
  return pass_instances_.size();
}
 void NoneCharacterData::clear_pass_instances() {
  pass_instances_.Clear();
}
 ::google::protobuf::int32 NoneCharacterData::pass_instances(int index) const {
  // @@protoc_insertion_point(field_get:message.NoneCharacterData.pass_instances)
  return pass_instances_.Get(index);
}
 void NoneCharacterData::set_pass_instances(int index, ::google::protobuf::int32 value) {
  pass_instances_.Set(index, value);
  // @@protoc_insertion_point(field_set:message.NoneCharacterData.pass_instances)
}
 void NoneCharacterData::add_pass_instances(::google::protobuf::int32 value) {
  pass_instances_.Add(value);
  // @@protoc_insertion_point(field_add:message.NoneCharacterData.pass_instances)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
NoneCharacterData::pass_instances() const {
  // @@protoc_insertion_point(field_list:message.NoneCharacterData.pass_instances)
  return pass_instances_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
NoneCharacterData::mutable_pass_instances() {
  // @@protoc_insertion_point(field_mutable_list:message.NoneCharacterData.pass_instances)
  return &pass_instances_;
}

// required string guid = 4;
 bool NoneCharacterData::has_guid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
 void NoneCharacterData::set_has_guid() {
  _has_bits_[0] |= 0x00000008u;
}
 void NoneCharacterData::clear_has_guid() {
  _has_bits_[0] &= ~0x00000008u;
}
 void NoneCharacterData::clear_guid() {
  guid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_guid();
}
 const ::std::string& NoneCharacterData::guid() const {
  // @@protoc_insertion_point(field_get:message.NoneCharacterData.guid)
  return guid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NoneCharacterData::set_guid(const ::std::string& value) {
  set_has_guid();
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message.NoneCharacterData.guid)
}
 void NoneCharacterData::set_guid(const char* value) {
  set_has_guid();
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.NoneCharacterData.guid)
}
 void NoneCharacterData::set_guid(const char* value, size_t size) {
  set_has_guid();
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.NoneCharacterData.guid)
}
 ::std::string* NoneCharacterData::mutable_guid() {
  set_has_guid();
  // @@protoc_insertion_point(field_mutable:message.NoneCharacterData.guid)
  return guid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* NoneCharacterData::release_guid() {
  clear_has_guid();
  return guid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NoneCharacterData::set_allocated_guid(::std::string* guid) {
  if (guid != NULL) {
    set_has_guid();
  } else {
    clear_has_guid();
  }
  guid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), guid);
  // @@protoc_insertion_point(field_set_allocated:message.NoneCharacterData.guid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int NoneCharacterDataServer::kDataFieldNumber;
const int NoneCharacterDataServer::kAccountFieldNumber;
#endif  // !_MSC_VER

NoneCharacterDataServer::NoneCharacterDataServer()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.NoneCharacterDataServer)
}

void NoneCharacterDataServer::InitAsDefaultInstance() {
  data_ = const_cast< ::message::NoneCharacterData*>(&::message::NoneCharacterData::default_instance());
}

NoneCharacterDataServer::NoneCharacterDataServer(const NoneCharacterDataServer& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message.NoneCharacterDataServer)
}

void NoneCharacterDataServer::SharedCtor() {
  _cached_size_ = 0;
  data_ = NULL;
  account_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NoneCharacterDataServer::~NoneCharacterDataServer() {
  // @@protoc_insertion_point(destructor:message.NoneCharacterDataServer)
  SharedDtor();
}

void NoneCharacterDataServer::SharedDtor() {
  if (this != default_instance_) {
    delete data_;
  }
}

void NoneCharacterDataServer::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NoneCharacterDataServer::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NoneCharacterDataServer_descriptor_;
}

const NoneCharacterDataServer& NoneCharacterDataServer::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_2eproto();
  return *default_instance_;
}

NoneCharacterDataServer* NoneCharacterDataServer::default_instance_ = NULL;

NoneCharacterDataServer* NoneCharacterDataServer::New(::google::protobuf::Arena* arena) const {
  NoneCharacterDataServer* n = new NoneCharacterDataServer;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NoneCharacterDataServer::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_data()) {
      if (data_ != NULL) data_->::message::NoneCharacterData::Clear();
    }
    account_ = GOOGLE_ULONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool NoneCharacterDataServer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.NoneCharacterDataServer)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .message.NoneCharacterData data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_account;
        break;
      }

      // required uint64 account = 2;
      case 2: {
        if (tag == 16) {
         parse_account:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &account_)));
          set_has_account();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.NoneCharacterDataServer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.NoneCharacterDataServer)
  return false;
#undef DO_
}

void NoneCharacterDataServer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.NoneCharacterDataServer)
  // required .message.NoneCharacterData data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->data_, output);
  }

  // required uint64 account = 2;
  if (has_account()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->account(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.NoneCharacterDataServer)
}

::google::protobuf::uint8* NoneCharacterDataServer::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.NoneCharacterDataServer)
  // required .message.NoneCharacterData data = 1;
  if (has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, *this->data_, target);
  }

  // required uint64 account = 2;
  if (has_account()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->account(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.NoneCharacterDataServer)
  return target;
}

int NoneCharacterDataServer::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_data()) {
    // required .message.NoneCharacterData data = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->data_);
  }

  if (has_account()) {
    // required uint64 account = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->account());
  }

  return total_size;
}
int NoneCharacterDataServer::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .message.NoneCharacterData data = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->data_);

    // required uint64 account = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->account());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NoneCharacterDataServer::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const NoneCharacterDataServer* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const NoneCharacterDataServer*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NoneCharacterDataServer::MergeFrom(const NoneCharacterDataServer& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      mutable_data()->::message::NoneCharacterData::MergeFrom(from.data());
    }
    if (from.has_account()) {
      set_account(from.account());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void NoneCharacterDataServer::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NoneCharacterDataServer::CopyFrom(const NoneCharacterDataServer& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NoneCharacterDataServer::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_data()) {
    if (!this->data_->IsInitialized()) return false;
  }
  return true;
}

void NoneCharacterDataServer::Swap(NoneCharacterDataServer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NoneCharacterDataServer::InternalSwap(NoneCharacterDataServer* other) {
  std::swap(data_, other->data_);
  std::swap(account_, other->account_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NoneCharacterDataServer::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NoneCharacterDataServer_descriptor_;
  metadata.reflection = NoneCharacterDataServer_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// NoneCharacterDataServer

// required .message.NoneCharacterData data = 1;
 bool NoneCharacterDataServer::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void NoneCharacterDataServer::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
 void NoneCharacterDataServer::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
 void NoneCharacterDataServer::clear_data() {
  if (data_ != NULL) data_->::message::NoneCharacterData::Clear();
  clear_has_data();
}
 const ::message::NoneCharacterData& NoneCharacterDataServer::data() const {
  // @@protoc_insertion_point(field_get:message.NoneCharacterDataServer.data)
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
 ::message::NoneCharacterData* NoneCharacterDataServer::mutable_data() {
  set_has_data();
  if (data_ == NULL) {
    data_ = new ::message::NoneCharacterData;
  }
  // @@protoc_insertion_point(field_mutable:message.NoneCharacterDataServer.data)
  return data_;
}
 ::message::NoneCharacterData* NoneCharacterDataServer::release_data() {
  clear_has_data();
  ::message::NoneCharacterData* temp = data_;
  data_ = NULL;
  return temp;
}
 void NoneCharacterDataServer::set_allocated_data(::message::NoneCharacterData* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
  // @@protoc_insertion_point(field_set_allocated:message.NoneCharacterDataServer.data)
}

// required uint64 account = 2;
 bool NoneCharacterDataServer::has_account() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
 void NoneCharacterDataServer::set_has_account() {
  _has_bits_[0] |= 0x00000002u;
}
 void NoneCharacterDataServer::clear_has_account() {
  _has_bits_[0] &= ~0x00000002u;
}
 void NoneCharacterDataServer::clear_account() {
  account_ = GOOGLE_ULONGLONG(0);
  clear_has_account();
}
 ::google::protobuf::uint64 NoneCharacterDataServer::account() const {
  // @@protoc_insertion_point(field_get:message.NoneCharacterDataServer.account)
  return account_;
}
 void NoneCharacterDataServer::set_account(::google::protobuf::uint64 value) {
  set_has_account();
  account_ = value;
  // @@protoc_insertion_point(field_set:message.NoneCharacterDataServer.account)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int int32array::kDataFieldNumber;
#endif  // !_MSC_VER

int32array::int32array()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.int32array)
}

void int32array::InitAsDefaultInstance() {
}

int32array::int32array(const int32array& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message.int32array)
}

void int32array::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

int32array::~int32array() {
  // @@protoc_insertion_point(destructor:message.int32array)
  SharedDtor();
}

void int32array::SharedDtor() {
  if (this != default_instance_) {
  }
}

void int32array::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* int32array::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return int32array_descriptor_;
}

const int32array& int32array::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_2eproto();
  return *default_instance_;
}

int32array* int32array::default_instance_ = NULL;

int32array* int32array::New(::google::protobuf::Arena* arena) const {
  int32array* n = new int32array;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void int32array::Clear() {
  data_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool int32array::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.int32array)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 data = 1;
      case 1: {
        if (tag == 8) {
         parse_data:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8, input, this->mutable_data())));
        } else if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_data())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(8)) goto parse_data;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.int32array)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.int32array)
  return false;
#undef DO_
}

void int32array::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.int32array)
  // repeated int32 data = 1;
  for (int i = 0; i < this->data_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->data(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.int32array)
}

::google::protobuf::uint8* int32array::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.int32array)
  // repeated int32 data = 1;
  for (int i = 0; i < this->data_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(1, this->data(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.int32array)
  return target;
}

int int32array::ByteSize() const {
  int total_size = 0;

  // repeated int32 data = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->data_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->data(i));
    }
    total_size += 1 * this->data_size() + data_size;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void int32array::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const int32array* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const int32array*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void int32array::MergeFrom(const int32array& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  data_.MergeFrom(from.data_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void int32array::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void int32array::CopyFrom(const int32array& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool int32array::IsInitialized() const {

  return true;
}

void int32array::Swap(int32array* other) {
  if (other == this) return;
  InternalSwap(other);
}
void int32array::InternalSwap(int32array* other) {
  data_.UnsafeArenaSwap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata int32array::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = int32array_descriptor_;
  metadata.reflection = int32array_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// int32array

// repeated int32 data = 1;
 int int32array::data_size() const {
  return data_.size();
}
 void int32array::clear_data() {
  data_.Clear();
}
 ::google::protobuf::int32 int32array::data(int index) const {
  // @@protoc_insertion_point(field_get:message.int32array.data)
  return data_.Get(index);
}
 void int32array::set_data(int index, ::google::protobuf::int32 value) {
  data_.Set(index, value);
  // @@protoc_insertion_point(field_set:message.int32array.data)
}
 void int32array::add_data(::google::protobuf::int32 value) {
  data_.Add(value);
  // @@protoc_insertion_point(field_add:message.int32array.data)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
int32array::data() const {
  // @@protoc_insertion_point(field_list:message.int32array.data)
  return data_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
int32array::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:message.int32array.data)
  return &data_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int CrashmoMapBaseData::kWidthFieldNumber;
const int CrashmoMapBaseData::kHeightFieldNumber;
const int CrashmoMapBaseData::kMapDataFieldNumber;
const int CrashmoMapBaseData::kMapIndexFieldNumber;
#endif  // !_MSC_VER

CrashmoMapBaseData::CrashmoMapBaseData()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.CrashmoMapBaseData)
}

void CrashmoMapBaseData::InitAsDefaultInstance() {
}

CrashmoMapBaseData::CrashmoMapBaseData(const CrashmoMapBaseData& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message.CrashmoMapBaseData)
}

void CrashmoMapBaseData::SharedCtor() {
  _cached_size_ = 0;
  width_ = 0;
  height_ = 0;
  map_index_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CrashmoMapBaseData::~CrashmoMapBaseData() {
  // @@protoc_insertion_point(destructor:message.CrashmoMapBaseData)
  SharedDtor();
}

void CrashmoMapBaseData::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CrashmoMapBaseData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CrashmoMapBaseData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CrashmoMapBaseData_descriptor_;
}

const CrashmoMapBaseData& CrashmoMapBaseData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_2eproto();
  return *default_instance_;
}

CrashmoMapBaseData* CrashmoMapBaseData::default_instance_ = NULL;

CrashmoMapBaseData* CrashmoMapBaseData::New(::google::protobuf::Arena* arena) const {
  CrashmoMapBaseData* n = new CrashmoMapBaseData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CrashmoMapBaseData::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CrashmoMapBaseData*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 11) {
    ZR_(width_, height_);
    map_index_ = GOOGLE_ULONGLONG(0);
  }

#undef ZR_HELPER_
#undef ZR_

  map_data_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CrashmoMapBaseData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.CrashmoMapBaseData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 width = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &width_)));
          set_has_width();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_height;
        break;
      }

      // required int32 height = 2;
      case 2: {
        if (tag == 16) {
         parse_height:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &height_)));
          set_has_height();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_map_data;
        break;
      }

      // repeated .message.int32array map_data = 3;
      case 3: {
        if (tag == 26) {
         parse_map_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_map_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_map_data;
        if (input->ExpectTag(40)) goto parse_map_index;
        break;
      }

      // required uint64 map_index = 5;
      case 5: {
        if (tag == 40) {
         parse_map_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &map_index_)));
          set_has_map_index();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.CrashmoMapBaseData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.CrashmoMapBaseData)
  return false;
#undef DO_
}

void CrashmoMapBaseData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.CrashmoMapBaseData)
  // required int32 width = 1;
  if (has_width()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->width(), output);
  }

  // required int32 height = 2;
  if (has_height()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->height(), output);
  }

  // repeated .message.int32array map_data = 3;
  for (unsigned int i = 0, n = this->map_data_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->map_data(i), output);
  }

  // required uint64 map_index = 5;
  if (has_map_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->map_index(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.CrashmoMapBaseData)
}

::google::protobuf::uint8* CrashmoMapBaseData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.CrashmoMapBaseData)
  // required int32 width = 1;
  if (has_width()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->width(), target);
  }

  // required int32 height = 2;
  if (has_height()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->height(), target);
  }

  // repeated .message.int32array map_data = 3;
  for (unsigned int i = 0, n = this->map_data_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->map_data(i), target);
  }

  // required uint64 map_index = 5;
  if (has_map_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->map_index(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.CrashmoMapBaseData)
  return target;
}

int CrashmoMapBaseData::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_width()) {
    // required int32 width = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->width());
  }

  if (has_height()) {
    // required int32 height = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->height());
  }

  if (has_map_index()) {
    // required uint64 map_index = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->map_index());
  }

  return total_size;
}
int CrashmoMapBaseData::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x0000000b) ^ 0x0000000b) == 0) {  // All required fields are present.
    // required int32 width = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->width());

    // required int32 height = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->height());

    // required uint64 map_index = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->map_index());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .message.int32array map_data = 3;
  total_size += 1 * this->map_data_size();
  for (int i = 0; i < this->map_data_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->map_data(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CrashmoMapBaseData::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CrashmoMapBaseData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CrashmoMapBaseData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CrashmoMapBaseData::MergeFrom(const CrashmoMapBaseData& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  map_data_.MergeFrom(from.map_data_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_width()) {
      set_width(from.width());
    }
    if (from.has_height()) {
      set_height(from.height());
    }
    if (from.has_map_index()) {
      set_map_index(from.map_index());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CrashmoMapBaseData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CrashmoMapBaseData::CopyFrom(const CrashmoMapBaseData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CrashmoMapBaseData::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000b) != 0x0000000b) return false;

  return true;
}

void CrashmoMapBaseData::Swap(CrashmoMapBaseData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CrashmoMapBaseData::InternalSwap(CrashmoMapBaseData* other) {
  std::swap(width_, other->width_);
  std::swap(height_, other->height_);
  map_data_.UnsafeArenaSwap(&other->map_data_);
  std::swap(map_index_, other->map_index_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CrashmoMapBaseData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CrashmoMapBaseData_descriptor_;
  metadata.reflection = CrashmoMapBaseData_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CrashmoMapBaseData

// required int32 width = 1;
 bool CrashmoMapBaseData::has_width() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void CrashmoMapBaseData::set_has_width() {
  _has_bits_[0] |= 0x00000001u;
}
 void CrashmoMapBaseData::clear_has_width() {
  _has_bits_[0] &= ~0x00000001u;
}
 void CrashmoMapBaseData::clear_width() {
  width_ = 0;
  clear_has_width();
}
 ::google::protobuf::int32 CrashmoMapBaseData::width() const {
  // @@protoc_insertion_point(field_get:message.CrashmoMapBaseData.width)
  return width_;
}
 void CrashmoMapBaseData::set_width(::google::protobuf::int32 value) {
  set_has_width();
  width_ = value;
  // @@protoc_insertion_point(field_set:message.CrashmoMapBaseData.width)
}

// required int32 height = 2;
 bool CrashmoMapBaseData::has_height() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
 void CrashmoMapBaseData::set_has_height() {
  _has_bits_[0] |= 0x00000002u;
}
 void CrashmoMapBaseData::clear_has_height() {
  _has_bits_[0] &= ~0x00000002u;
}
 void CrashmoMapBaseData::clear_height() {
  height_ = 0;
  clear_has_height();
}
 ::google::protobuf::int32 CrashmoMapBaseData::height() const {
  // @@protoc_insertion_point(field_get:message.CrashmoMapBaseData.height)
  return height_;
}
 void CrashmoMapBaseData::set_height(::google::protobuf::int32 value) {
  set_has_height();
  height_ = value;
  // @@protoc_insertion_point(field_set:message.CrashmoMapBaseData.height)
}

// repeated .message.int32array map_data = 3;
 int CrashmoMapBaseData::map_data_size() const {
  return map_data_.size();
}
 void CrashmoMapBaseData::clear_map_data() {
  map_data_.Clear();
}
 const ::message::int32array& CrashmoMapBaseData::map_data(int index) const {
  // @@protoc_insertion_point(field_get:message.CrashmoMapBaseData.map_data)
  return map_data_.Get(index);
}
 ::message::int32array* CrashmoMapBaseData::mutable_map_data(int index) {
  // @@protoc_insertion_point(field_mutable:message.CrashmoMapBaseData.map_data)
  return map_data_.Mutable(index);
}
 ::message::int32array* CrashmoMapBaseData::add_map_data() {
  // @@protoc_insertion_point(field_add:message.CrashmoMapBaseData.map_data)
  return map_data_.Add();
}
 const ::google::protobuf::RepeatedPtrField< ::message::int32array >&
CrashmoMapBaseData::map_data() const {
  // @@protoc_insertion_point(field_list:message.CrashmoMapBaseData.map_data)
  return map_data_;
}
 ::google::protobuf::RepeatedPtrField< ::message::int32array >*
CrashmoMapBaseData::mutable_map_data() {
  // @@protoc_insertion_point(field_mutable_list:message.CrashmoMapBaseData.map_data)
  return &map_data_;
}

// required uint64 map_index = 5;
 bool CrashmoMapBaseData::has_map_index() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
 void CrashmoMapBaseData::set_has_map_index() {
  _has_bits_[0] |= 0x00000008u;
}
 void CrashmoMapBaseData::clear_has_map_index() {
  _has_bits_[0] &= ~0x00000008u;
}
 void CrashmoMapBaseData::clear_map_index() {
  map_index_ = GOOGLE_ULONGLONG(0);
  clear_has_map_index();
}
 ::google::protobuf::uint64 CrashmoMapBaseData::map_index() const {
  // @@protoc_insertion_point(field_get:message.CrashmoMapBaseData.map_index)
  return map_index_;
}
 void CrashmoMapBaseData::set_map_index(::google::protobuf::uint64 value) {
  set_has_map_index();
  map_index_ = value;
  // @@protoc_insertion_point(field_set:message.CrashmoMapBaseData.map_index)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int CrashMapData::kDataFieldNumber;
const int CrashMapData::kMapNameFieldNumber;
const int CrashMapData::kCreaterNameFieldNumber;
const int CrashMapData::kSectionFieldNumber;
const int CrashMapData::kNumberFieldNumber;
const int CrashMapData::kCreateTimeFieldNumber;
#endif  // !_MSC_VER

CrashMapData::CrashMapData()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.CrashMapData)
}

void CrashMapData::InitAsDefaultInstance() {
  data_ = const_cast< ::message::CrashmoMapBaseData*>(&::message::CrashmoMapBaseData::default_instance());
}

CrashMapData::CrashMapData(const CrashMapData& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message.CrashMapData)
}

void CrashMapData::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_ = NULL;
  mapname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  creatername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  section_ = 0;
  number_ = 0;
  create_time_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CrashMapData::~CrashMapData() {
  // @@protoc_insertion_point(destructor:message.CrashMapData)
  SharedDtor();
}

void CrashMapData::SharedDtor() {
  mapname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  creatername_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete data_;
  }
}

void CrashMapData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CrashMapData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CrashMapData_descriptor_;
}

const CrashMapData& CrashMapData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_2eproto();
  return *default_instance_;
}

CrashMapData* CrashMapData::default_instance_ = NULL;

CrashMapData* CrashMapData::New(::google::protobuf::Arena* arena) const {
  CrashMapData* n = new CrashMapData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CrashMapData::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CrashMapData*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 63) {
    ZR_(section_, create_time_);
    if (has_data()) {
      if (data_ != NULL) data_->::message::CrashmoMapBaseData::Clear();
    }
    if (has_mapname()) {
      mapname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_creatername()) {
      creatername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CrashMapData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.CrashMapData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .message.CrashmoMapBaseData Data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_MapName;
        break;
      }

      // required string MapName = 2;
      case 2: {
        if (tag == 18) {
         parse_MapName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mapname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->mapname().data(), this->mapname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "message.CrashMapData.MapName");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_CreaterName;
        break;
      }

      // required string CreaterName = 3;
      case 3: {
        if (tag == 26) {
         parse_CreaterName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_creatername()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->creatername().data(), this->creatername().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "message.CrashMapData.CreaterName");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_Section;
        break;
      }

      // required int32 Section = 4;
      case 4: {
        if (tag == 32) {
         parse_Section:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &section_)));
          set_has_section();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_number;
        break;
      }

      // required int32 number = 5;
      case 5: {
        if (tag == 40) {
         parse_number:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &number_)));
          set_has_number();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_create_time;
        break;
      }

      // required uint64 create_time = 6;
      case 6: {
        if (tag == 48) {
         parse_create_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &create_time_)));
          set_has_create_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.CrashMapData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.CrashMapData)
  return false;
#undef DO_
}

void CrashMapData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.CrashMapData)
  // required .message.CrashmoMapBaseData Data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->data_, output);
  }

  // required string MapName = 2;
  if (has_mapname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mapname().data(), this->mapname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "message.CrashMapData.MapName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->mapname(), output);
  }

  // required string CreaterName = 3;
  if (has_creatername()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->creatername().data(), this->creatername().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "message.CrashMapData.CreaterName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->creatername(), output);
  }

  // required int32 Section = 4;
  if (has_section()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->section(), output);
  }

  // required int32 number = 5;
  if (has_number()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->number(), output);
  }

  // required uint64 create_time = 6;
  if (has_create_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->create_time(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.CrashMapData)
}

::google::protobuf::uint8* CrashMapData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.CrashMapData)
  // required .message.CrashmoMapBaseData Data = 1;
  if (has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, *this->data_, target);
  }

  // required string MapName = 2;
  if (has_mapname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mapname().data(), this->mapname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "message.CrashMapData.MapName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->mapname(), target);
  }

  // required string CreaterName = 3;
  if (has_creatername()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->creatername().data(), this->creatername().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "message.CrashMapData.CreaterName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->creatername(), target);
  }

  // required int32 Section = 4;
  if (has_section()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->section(), target);
  }

  // required int32 number = 5;
  if (has_number()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->number(), target);
  }

  // required uint64 create_time = 6;
  if (has_create_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->create_time(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.CrashMapData)
  return target;
}

int CrashMapData::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_data()) {
    // required .message.CrashmoMapBaseData Data = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->data_);
  }

  if (has_mapname()) {
    // required string MapName = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mapname());
  }

  if (has_creatername()) {
    // required string CreaterName = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->creatername());
  }

  if (has_section()) {
    // required int32 Section = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->section());
  }

  if (has_number()) {
    // required int32 number = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->number());
  }

  if (has_create_time()) {
    // required uint64 create_time = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->create_time());
  }

  return total_size;
}
int CrashMapData::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x0000003f) ^ 0x0000003f) == 0) {  // All required fields are present.
    // required .message.CrashmoMapBaseData Data = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->data_);

    // required string MapName = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mapname());

    // required string CreaterName = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->creatername());

    // required int32 Section = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->section());

    // required int32 number = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->number());

    // required uint64 create_time = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->create_time());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CrashMapData::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CrashMapData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CrashMapData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CrashMapData::MergeFrom(const CrashMapData& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      mutable_data()->::message::CrashmoMapBaseData::MergeFrom(from.data());
    }
    if (from.has_mapname()) {
      set_has_mapname();
      mapname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mapname_);
    }
    if (from.has_creatername()) {
      set_has_creatername();
      creatername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.creatername_);
    }
    if (from.has_section()) {
      set_section(from.section());
    }
    if (from.has_number()) {
      set_number(from.number());
    }
    if (from.has_create_time()) {
      set_create_time(from.create_time());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CrashMapData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CrashMapData::CopyFrom(const CrashMapData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CrashMapData::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000003f) != 0x0000003f) return false;

  if (has_data()) {
    if (!this->data_->IsInitialized()) return false;
  }
  return true;
}

void CrashMapData::Swap(CrashMapData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CrashMapData::InternalSwap(CrashMapData* other) {
  std::swap(data_, other->data_);
  mapname_.Swap(&other->mapname_);
  creatername_.Swap(&other->creatername_);
  std::swap(section_, other->section_);
  std::swap(number_, other->number_);
  std::swap(create_time_, other->create_time_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CrashMapData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CrashMapData_descriptor_;
  metadata.reflection = CrashMapData_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CrashMapData

// required .message.CrashmoMapBaseData Data = 1;
 bool CrashMapData::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void CrashMapData::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
 void CrashMapData::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
 void CrashMapData::clear_data() {
  if (data_ != NULL) data_->::message::CrashmoMapBaseData::Clear();
  clear_has_data();
}
 const ::message::CrashmoMapBaseData& CrashMapData::data() const {
  // @@protoc_insertion_point(field_get:message.CrashMapData.Data)
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
 ::message::CrashmoMapBaseData* CrashMapData::mutable_data() {
  set_has_data();
  if (data_ == NULL) {
    data_ = new ::message::CrashmoMapBaseData;
  }
  // @@protoc_insertion_point(field_mutable:message.CrashMapData.Data)
  return data_;
}
 ::message::CrashmoMapBaseData* CrashMapData::release_data() {
  clear_has_data();
  ::message::CrashmoMapBaseData* temp = data_;
  data_ = NULL;
  return temp;
}
 void CrashMapData::set_allocated_data(::message::CrashmoMapBaseData* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
  // @@protoc_insertion_point(field_set_allocated:message.CrashMapData.Data)
}

// required string MapName = 2;
 bool CrashMapData::has_mapname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
 void CrashMapData::set_has_mapname() {
  _has_bits_[0] |= 0x00000002u;
}
 void CrashMapData::clear_has_mapname() {
  _has_bits_[0] &= ~0x00000002u;
}
 void CrashMapData::clear_mapname() {
  mapname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_mapname();
}
 const ::std::string& CrashMapData::mapname() const {
  // @@protoc_insertion_point(field_get:message.CrashMapData.MapName)
  return mapname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CrashMapData::set_mapname(const ::std::string& value) {
  set_has_mapname();
  mapname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message.CrashMapData.MapName)
}
 void CrashMapData::set_mapname(const char* value) {
  set_has_mapname();
  mapname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.CrashMapData.MapName)
}
 void CrashMapData::set_mapname(const char* value, size_t size) {
  set_has_mapname();
  mapname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.CrashMapData.MapName)
}
 ::std::string* CrashMapData::mutable_mapname() {
  set_has_mapname();
  // @@protoc_insertion_point(field_mutable:message.CrashMapData.MapName)
  return mapname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CrashMapData::release_mapname() {
  clear_has_mapname();
  return mapname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CrashMapData::set_allocated_mapname(::std::string* mapname) {
  if (mapname != NULL) {
    set_has_mapname();
  } else {
    clear_has_mapname();
  }
  mapname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mapname);
  // @@protoc_insertion_point(field_set_allocated:message.CrashMapData.MapName)
}

// required string CreaterName = 3;
 bool CrashMapData::has_creatername() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
 void CrashMapData::set_has_creatername() {
  _has_bits_[0] |= 0x00000004u;
}
 void CrashMapData::clear_has_creatername() {
  _has_bits_[0] &= ~0x00000004u;
}
 void CrashMapData::clear_creatername() {
  creatername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_creatername();
}
 const ::std::string& CrashMapData::creatername() const {
  // @@protoc_insertion_point(field_get:message.CrashMapData.CreaterName)
  return creatername_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CrashMapData::set_creatername(const ::std::string& value) {
  set_has_creatername();
  creatername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message.CrashMapData.CreaterName)
}
 void CrashMapData::set_creatername(const char* value) {
  set_has_creatername();
  creatername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.CrashMapData.CreaterName)
}
 void CrashMapData::set_creatername(const char* value, size_t size) {
  set_has_creatername();
  creatername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.CrashMapData.CreaterName)
}
 ::std::string* CrashMapData::mutable_creatername() {
  set_has_creatername();
  // @@protoc_insertion_point(field_mutable:message.CrashMapData.CreaterName)
  return creatername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CrashMapData::release_creatername() {
  clear_has_creatername();
  return creatername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CrashMapData::set_allocated_creatername(::std::string* creatername) {
  if (creatername != NULL) {
    set_has_creatername();
  } else {
    clear_has_creatername();
  }
  creatername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), creatername);
  // @@protoc_insertion_point(field_set_allocated:message.CrashMapData.CreaterName)
}

// required int32 Section = 4;
 bool CrashMapData::has_section() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
 void CrashMapData::set_has_section() {
  _has_bits_[0] |= 0x00000008u;
}
 void CrashMapData::clear_has_section() {
  _has_bits_[0] &= ~0x00000008u;
}
 void CrashMapData::clear_section() {
  section_ = 0;
  clear_has_section();
}
 ::google::protobuf::int32 CrashMapData::section() const {
  // @@protoc_insertion_point(field_get:message.CrashMapData.Section)
  return section_;
}
 void CrashMapData::set_section(::google::protobuf::int32 value) {
  set_has_section();
  section_ = value;
  // @@protoc_insertion_point(field_set:message.CrashMapData.Section)
}

// required int32 number = 5;
 bool CrashMapData::has_number() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
 void CrashMapData::set_has_number() {
  _has_bits_[0] |= 0x00000010u;
}
 void CrashMapData::clear_has_number() {
  _has_bits_[0] &= ~0x00000010u;
}
 void CrashMapData::clear_number() {
  number_ = 0;
  clear_has_number();
}
 ::google::protobuf::int32 CrashMapData::number() const {
  // @@protoc_insertion_point(field_get:message.CrashMapData.number)
  return number_;
}
 void CrashMapData::set_number(::google::protobuf::int32 value) {
  set_has_number();
  number_ = value;
  // @@protoc_insertion_point(field_set:message.CrashMapData.number)
}

// required uint64 create_time = 6;
 bool CrashMapData::has_create_time() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
 void CrashMapData::set_has_create_time() {
  _has_bits_[0] |= 0x00000020u;
}
 void CrashMapData::clear_has_create_time() {
  _has_bits_[0] &= ~0x00000020u;
}
 void CrashMapData::clear_create_time() {
  create_time_ = GOOGLE_ULONGLONG(0);
  clear_has_create_time();
}
 ::google::protobuf::uint64 CrashMapData::create_time() const {
  // @@protoc_insertion_point(field_get:message.CrashMapData.create_time)
  return create_time_;
}
 void CrashMapData::set_create_time(::google::protobuf::uint64 value) {
  set_has_create_time();
  create_time_ = value;
  // @@protoc_insertion_point(field_set:message.CrashMapData.create_time)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int CrashPlayerInfo::kAccountFieldNumber;
const int CrashPlayerInfo::kPassPointFieldNumber;
const int CrashPlayerInfo::kPassSectionFieldNumber;
const int CrashPlayerInfo::kNameFieldNumber;
const int CrashPlayerInfo::kIncompleteMapFieldNumber;
const int CrashPlayerInfo::kCompleteMapFieldNumber;
#endif  // !_MSC_VER

CrashPlayerInfo::CrashPlayerInfo()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.CrashPlayerInfo)
}

void CrashPlayerInfo::InitAsDefaultInstance() {
}

CrashPlayerInfo::CrashPlayerInfo(const CrashPlayerInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message.CrashPlayerInfo)
}

void CrashPlayerInfo::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  account_ = GOOGLE_ULONGLONG(0);
  pass_point_ = 0;
  pass_section_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CrashPlayerInfo::~CrashPlayerInfo() {
  // @@protoc_insertion_point(destructor:message.CrashPlayerInfo)
  SharedDtor();
}

void CrashPlayerInfo::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CrashPlayerInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CrashPlayerInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CrashPlayerInfo_descriptor_;
}

const CrashPlayerInfo& CrashPlayerInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_2eproto();
  return *default_instance_;
}

CrashPlayerInfo* CrashPlayerInfo::default_instance_ = NULL;

CrashPlayerInfo* CrashPlayerInfo::New(::google::protobuf::Arena* arena) const {
  CrashPlayerInfo* n = new CrashPlayerInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CrashPlayerInfo::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CrashPlayerInfo*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 15) {
    ZR_(account_, pass_section_);
    if (has_name()) {
      name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  incompletemap_.Clear();
  completemap_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CrashPlayerInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.CrashPlayerInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 account = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &account_)));
          set_has_account();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_pass_point;
        break;
      }

      // required int32 pass_point = 2;
      case 2: {
        if (tag == 16) {
         parse_pass_point:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pass_point_)));
          set_has_pass_point();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_pass_section;
        break;
      }

      // required int32 pass_section = 4;
      case 4: {
        if (tag == 32) {
         parse_pass_section:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pass_section_)));
          set_has_pass_section();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_name;
        break;
      }

      // required string name = 5;
      case 5: {
        if (tag == 42) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "message.CrashPlayerInfo.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_IncompleteMap;
        break;
      }

      // repeated .message.CrashMapData IncompleteMap = 6;
      case 6: {
        if (tag == 50) {
         parse_IncompleteMap:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_incompletemap()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_IncompleteMap;
        if (input->ExpectTag(58)) goto parse_CompleteMap;
        break;
      }

      // repeated .message.CrashMapData CompleteMap = 7;
      case 7: {
        if (tag == 58) {
         parse_CompleteMap:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_completemap()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_CompleteMap;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.CrashPlayerInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.CrashPlayerInfo)
  return false;
#undef DO_
}

void CrashPlayerInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.CrashPlayerInfo)
  // required uint64 account = 1;
  if (has_account()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->account(), output);
  }

  // required int32 pass_point = 2;
  if (has_pass_point()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->pass_point(), output);
  }

  // required int32 pass_section = 4;
  if (has_pass_section()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->pass_section(), output);
  }

  // required string name = 5;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "message.CrashPlayerInfo.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->name(), output);
  }

  // repeated .message.CrashMapData IncompleteMap = 6;
  for (unsigned int i = 0, n = this->incompletemap_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->incompletemap(i), output);
  }

  // repeated .message.CrashMapData CompleteMap = 7;
  for (unsigned int i = 0, n = this->completemap_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->completemap(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.CrashPlayerInfo)
}

::google::protobuf::uint8* CrashPlayerInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.CrashPlayerInfo)
  // required uint64 account = 1;
  if (has_account()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->account(), target);
  }

  // required int32 pass_point = 2;
  if (has_pass_point()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->pass_point(), target);
  }

  // required int32 pass_section = 4;
  if (has_pass_section()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->pass_section(), target);
  }

  // required string name = 5;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "message.CrashPlayerInfo.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->name(), target);
  }

  // repeated .message.CrashMapData IncompleteMap = 6;
  for (unsigned int i = 0, n = this->incompletemap_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->incompletemap(i), target);
  }

  // repeated .message.CrashMapData CompleteMap = 7;
  for (unsigned int i = 0, n = this->completemap_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->completemap(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.CrashPlayerInfo)
  return target;
}

int CrashPlayerInfo::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_account()) {
    // required uint64 account = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->account());
  }

  if (has_pass_point()) {
    // required int32 pass_point = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->pass_point());
  }

  if (has_pass_section()) {
    // required int32 pass_section = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->pass_section());
  }

  if (has_name()) {
    // required string name = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  return total_size;
}
int CrashPlayerInfo::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required uint64 account = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->account());

    // required int32 pass_point = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->pass_point());

    // required int32 pass_section = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->pass_section());

    // required string name = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .message.CrashMapData IncompleteMap = 6;
  total_size += 1 * this->incompletemap_size();
  for (int i = 0; i < this->incompletemap_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->incompletemap(i));
  }

  // repeated .message.CrashMapData CompleteMap = 7;
  total_size += 1 * this->completemap_size();
  for (int i = 0; i < this->completemap_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->completemap(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CrashPlayerInfo::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CrashPlayerInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CrashPlayerInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CrashPlayerInfo::MergeFrom(const CrashPlayerInfo& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  incompletemap_.MergeFrom(from.incompletemap_);
  completemap_.MergeFrom(from.completemap_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_account()) {
      set_account(from.account());
    }
    if (from.has_pass_point()) {
      set_pass_point(from.pass_point());
    }
    if (from.has_pass_section()) {
      set_pass_section(from.pass_section());
    }
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CrashPlayerInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CrashPlayerInfo::CopyFrom(const CrashPlayerInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CrashPlayerInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->incompletemap())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->completemap())) return false;
  return true;
}

void CrashPlayerInfo::Swap(CrashPlayerInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CrashPlayerInfo::InternalSwap(CrashPlayerInfo* other) {
  std::swap(account_, other->account_);
  std::swap(pass_point_, other->pass_point_);
  std::swap(pass_section_, other->pass_section_);
  name_.Swap(&other->name_);
  incompletemap_.UnsafeArenaSwap(&other->incompletemap_);
  completemap_.UnsafeArenaSwap(&other->completemap_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CrashPlayerInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CrashPlayerInfo_descriptor_;
  metadata.reflection = CrashPlayerInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CrashPlayerInfo

// required uint64 account = 1;
 bool CrashPlayerInfo::has_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void CrashPlayerInfo::set_has_account() {
  _has_bits_[0] |= 0x00000001u;
}
 void CrashPlayerInfo::clear_has_account() {
  _has_bits_[0] &= ~0x00000001u;
}
 void CrashPlayerInfo::clear_account() {
  account_ = GOOGLE_ULONGLONG(0);
  clear_has_account();
}
 ::google::protobuf::uint64 CrashPlayerInfo::account() const {
  // @@protoc_insertion_point(field_get:message.CrashPlayerInfo.account)
  return account_;
}
 void CrashPlayerInfo::set_account(::google::protobuf::uint64 value) {
  set_has_account();
  account_ = value;
  // @@protoc_insertion_point(field_set:message.CrashPlayerInfo.account)
}

// required int32 pass_point = 2;
 bool CrashPlayerInfo::has_pass_point() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
 void CrashPlayerInfo::set_has_pass_point() {
  _has_bits_[0] |= 0x00000002u;
}
 void CrashPlayerInfo::clear_has_pass_point() {
  _has_bits_[0] &= ~0x00000002u;
}
 void CrashPlayerInfo::clear_pass_point() {
  pass_point_ = 0;
  clear_has_pass_point();
}
 ::google::protobuf::int32 CrashPlayerInfo::pass_point() const {
  // @@protoc_insertion_point(field_get:message.CrashPlayerInfo.pass_point)
  return pass_point_;
}
 void CrashPlayerInfo::set_pass_point(::google::protobuf::int32 value) {
  set_has_pass_point();
  pass_point_ = value;
  // @@protoc_insertion_point(field_set:message.CrashPlayerInfo.pass_point)
}

// required int32 pass_section = 4;
 bool CrashPlayerInfo::has_pass_section() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
 void CrashPlayerInfo::set_has_pass_section() {
  _has_bits_[0] |= 0x00000004u;
}
 void CrashPlayerInfo::clear_has_pass_section() {
  _has_bits_[0] &= ~0x00000004u;
}
 void CrashPlayerInfo::clear_pass_section() {
  pass_section_ = 0;
  clear_has_pass_section();
}
 ::google::protobuf::int32 CrashPlayerInfo::pass_section() const {
  // @@protoc_insertion_point(field_get:message.CrashPlayerInfo.pass_section)
  return pass_section_;
}
 void CrashPlayerInfo::set_pass_section(::google::protobuf::int32 value) {
  set_has_pass_section();
  pass_section_ = value;
  // @@protoc_insertion_point(field_set:message.CrashPlayerInfo.pass_section)
}

// required string name = 5;
 bool CrashPlayerInfo::has_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
 void CrashPlayerInfo::set_has_name() {
  _has_bits_[0] |= 0x00000008u;
}
 void CrashPlayerInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000008u;
}
 void CrashPlayerInfo::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
 const ::std::string& CrashPlayerInfo::name() const {
  // @@protoc_insertion_point(field_get:message.CrashPlayerInfo.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CrashPlayerInfo::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message.CrashPlayerInfo.name)
}
 void CrashPlayerInfo::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.CrashPlayerInfo.name)
}
 void CrashPlayerInfo::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.CrashPlayerInfo.name)
}
 ::std::string* CrashPlayerInfo::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:message.CrashPlayerInfo.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CrashPlayerInfo::release_name() {
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CrashPlayerInfo::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:message.CrashPlayerInfo.name)
}

// repeated .message.CrashMapData IncompleteMap = 6;
 int CrashPlayerInfo::incompletemap_size() const {
  return incompletemap_.size();
}
 void CrashPlayerInfo::clear_incompletemap() {
  incompletemap_.Clear();
}
 const ::message::CrashMapData& CrashPlayerInfo::incompletemap(int index) const {
  // @@protoc_insertion_point(field_get:message.CrashPlayerInfo.IncompleteMap)
  return incompletemap_.Get(index);
}
 ::message::CrashMapData* CrashPlayerInfo::mutable_incompletemap(int index) {
  // @@protoc_insertion_point(field_mutable:message.CrashPlayerInfo.IncompleteMap)
  return incompletemap_.Mutable(index);
}
 ::message::CrashMapData* CrashPlayerInfo::add_incompletemap() {
  // @@protoc_insertion_point(field_add:message.CrashPlayerInfo.IncompleteMap)
  return incompletemap_.Add();
}
 const ::google::protobuf::RepeatedPtrField< ::message::CrashMapData >&
CrashPlayerInfo::incompletemap() const {
  // @@protoc_insertion_point(field_list:message.CrashPlayerInfo.IncompleteMap)
  return incompletemap_;
}
 ::google::protobuf::RepeatedPtrField< ::message::CrashMapData >*
CrashPlayerInfo::mutable_incompletemap() {
  // @@protoc_insertion_point(field_mutable_list:message.CrashPlayerInfo.IncompleteMap)
  return &incompletemap_;
}

// repeated .message.CrashMapData CompleteMap = 7;
 int CrashPlayerInfo::completemap_size() const {
  return completemap_.size();
}
 void CrashPlayerInfo::clear_completemap() {
  completemap_.Clear();
}
 const ::message::CrashMapData& CrashPlayerInfo::completemap(int index) const {
  // @@protoc_insertion_point(field_get:message.CrashPlayerInfo.CompleteMap)
  return completemap_.Get(index);
}
 ::message::CrashMapData* CrashPlayerInfo::mutable_completemap(int index) {
  // @@protoc_insertion_point(field_mutable:message.CrashPlayerInfo.CompleteMap)
  return completemap_.Mutable(index);
}
 ::message::CrashMapData* CrashPlayerInfo::add_completemap() {
  // @@protoc_insertion_point(field_add:message.CrashPlayerInfo.CompleteMap)
  return completemap_.Add();
}
 const ::google::protobuf::RepeatedPtrField< ::message::CrashMapData >&
CrashPlayerInfo::completemap() const {
  // @@protoc_insertion_point(field_list:message.CrashPlayerInfo.CompleteMap)
  return completemap_;
}
 ::google::protobuf::RepeatedPtrField< ::message::CrashMapData >*
CrashPlayerInfo::mutable_completemap() {
  // @@protoc_insertion_point(field_mutable_list:message.CrashPlayerInfo.CompleteMap)
  return &completemap_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace message

// @@protoc_insertion_point(global_scope)
