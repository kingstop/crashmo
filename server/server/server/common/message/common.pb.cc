// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "common.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace message {

namespace {

const ::google::protobuf::Descriptor* int32array_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  int32array_reflection_ = NULL;
const ::google::protobuf::Descriptor* CrashmoMapBaseData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CrashmoMapBaseData_reflection_ = NULL;
const ::google::protobuf::Descriptor* CrashMapData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CrashMapData_reflection_ = NULL;
const ::google::protobuf::Descriptor* TaskInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TaskInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* RankMapBlogEntry_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RankMapBlogEntry_reflection_ = NULL;
const ::google::protobuf::Descriptor* CrashPlayerPublishMap_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CrashPlayerPublishMap_reflection_ = NULL;
const ::google::protobuf::Descriptor* intPair_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  intPair_reflection_ = NULL;
const ::google::protobuf::Descriptor* CrashPlayerInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CrashPlayerInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TaskConditionTypeConfig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TaskConditionTypeConfig_reflection_ = NULL;
const ::google::protobuf::Descriptor* TaskRewardConfig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TaskRewardConfig_reflection_ = NULL;
const ::google::protobuf::Descriptor* TaskInfoConfig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TaskInfoConfig_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* ConditionType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* ResourceType_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_common_2eproto() {
  protobuf_AddDesc_common_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "common.proto");
  GOOGLE_CHECK(file != NULL);
  int32array_descriptor_ = file->message_type(0);
  static const int int32array_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(int32array, data_),
  };
  int32array_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      int32array_descriptor_,
      int32array::default_instance_,
      int32array_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(int32array, _has_bits_[0]),
      -1,
      -1,
      sizeof(int32array),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(int32array, _internal_metadata_),
      -1);
  CrashmoMapBaseData_descriptor_ = file->message_type(1);
  static const int CrashmoMapBaseData_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CrashmoMapBaseData, width_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CrashmoMapBaseData, height_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CrashmoMapBaseData, map_data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CrashmoMapBaseData, map_index_),
  };
  CrashmoMapBaseData_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CrashmoMapBaseData_descriptor_,
      CrashmoMapBaseData::default_instance_,
      CrashmoMapBaseData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CrashmoMapBaseData, _has_bits_[0]),
      -1,
      -1,
      sizeof(CrashmoMapBaseData),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CrashmoMapBaseData, _internal_metadata_),
      -1);
  CrashMapData_descriptor_ = file->message_type(2);
  static const int CrashMapData_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CrashMapData, data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CrashMapData, mapname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CrashMapData, creatername_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CrashMapData, section_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CrashMapData, chapter_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CrashMapData, create_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CrashMapData, gold_),
  };
  CrashMapData_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CrashMapData_descriptor_,
      CrashMapData::default_instance_,
      CrashMapData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CrashMapData, _has_bits_[0]),
      -1,
      -1,
      sizeof(CrashMapData),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CrashMapData, _internal_metadata_),
      -1);
  TaskInfo_descriptor_ = file->message_type(3);
  static const int TaskInfo_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskInfo, task_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskInfo, argu_1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskInfo, argu_2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskInfo, argu_3_),
  };
  TaskInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TaskInfo_descriptor_,
      TaskInfo::default_instance_,
      TaskInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskInfo, _has_bits_[0]),
      -1,
      -1,
      sizeof(TaskInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskInfo, _internal_metadata_),
      -1);
  RankMapBlogEntry_descriptor_ = file->message_type(4);
  static const int RankMapBlogEntry_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RankMapBlogEntry, acc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RankMapBlogEntry, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RankMapBlogEntry, sugges__),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RankMapBlogEntry, time_),
  };
  RankMapBlogEntry_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RankMapBlogEntry_descriptor_,
      RankMapBlogEntry::default_instance_,
      RankMapBlogEntry_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RankMapBlogEntry, _has_bits_[0]),
      -1,
      -1,
      sizeof(RankMapBlogEntry),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RankMapBlogEntry, _internal_metadata_),
      -1);
  CrashPlayerPublishMap_descriptor_ = file->message_type(5);
  static const int CrashPlayerPublishMap_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CrashPlayerPublishMap, crashmap_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CrashPlayerPublishMap, publish_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CrashPlayerPublishMap, challenge_times_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CrashPlayerPublishMap, failed_of_challenge_times_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CrashPlayerPublishMap, map_rank_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CrashPlayerPublishMap, map_blog_),
  };
  CrashPlayerPublishMap_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CrashPlayerPublishMap_descriptor_,
      CrashPlayerPublishMap::default_instance_,
      CrashPlayerPublishMap_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CrashPlayerPublishMap, _has_bits_[0]),
      -1,
      -1,
      sizeof(CrashPlayerPublishMap),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CrashPlayerPublishMap, _internal_metadata_),
      -1);
  intPair_descriptor_ = file->message_type(6);
  static const int intPair_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(intPair, number_1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(intPair, number_2_),
  };
  intPair_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      intPair_descriptor_,
      intPair::default_instance_,
      intPair_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(intPair, _has_bits_[0]),
      -1,
      -1,
      sizeof(intPair),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(intPair, _internal_metadata_),
      -1);
  CrashPlayerInfo_descriptor_ = file->message_type(7);
  static const int CrashPlayerInfo_offsets_[12] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CrashPlayerInfo, account_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CrashPlayerInfo, passed_record_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CrashPlayerInfo, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CrashPlayerInfo, incompletemap_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CrashPlayerInfo, completemap_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CrashPlayerInfo, isadmin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CrashPlayerInfo, resources_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CrashPlayerInfo, map_width_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CrashPlayerInfo, map_height_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CrashPlayerInfo, map_count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CrashPlayerInfo, gold_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CrashPlayerInfo, current_task_),
  };
  CrashPlayerInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CrashPlayerInfo_descriptor_,
      CrashPlayerInfo::default_instance_,
      CrashPlayerInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CrashPlayerInfo, _has_bits_[0]),
      -1,
      -1,
      sizeof(CrashPlayerInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CrashPlayerInfo, _internal_metadata_),
      -1);
  TaskConditionTypeConfig_descriptor_ = file->message_type(8);
  static const int TaskConditionTypeConfig_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskConditionTypeConfig, condition_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskConditionTypeConfig, argu_1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskConditionTypeConfig, argu_2_),
  };
  TaskConditionTypeConfig_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TaskConditionTypeConfig_descriptor_,
      TaskConditionTypeConfig::default_instance_,
      TaskConditionTypeConfig_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskConditionTypeConfig, _has_bits_[0]),
      -1,
      -1,
      sizeof(TaskConditionTypeConfig),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskConditionTypeConfig, _internal_metadata_),
      -1);
  TaskRewardConfig_descriptor_ = file->message_type(9);
  static const int TaskRewardConfig_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskRewardConfig, resource_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskRewardConfig, count_),
  };
  TaskRewardConfig_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TaskRewardConfig_descriptor_,
      TaskRewardConfig::default_instance_,
      TaskRewardConfig_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskRewardConfig, _has_bits_[0]),
      -1,
      -1,
      sizeof(TaskRewardConfig),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskRewardConfig, _internal_metadata_),
      -1);
  TaskInfoConfig_descriptor_ = file->message_type(10);
  static const int TaskInfoConfig_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskInfoConfig, task_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskInfoConfig, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskInfoConfig, describe_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskInfoConfig, conditions_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskInfoConfig, rewards_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskInfoConfig, required_pass_chapter_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskInfoConfig, required_pass_section_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskInfoConfig, required_complete_task_count_),
  };
  TaskInfoConfig_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TaskInfoConfig_descriptor_,
      TaskInfoConfig::default_instance_,
      TaskInfoConfig_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskInfoConfig, _has_bits_[0]),
      -1,
      -1,
      sizeof(TaskInfoConfig),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskInfoConfig, _internal_metadata_),
      -1);
  ConditionType_descriptor_ = file->enum_type(0);
  ResourceType_descriptor_ = file->enum_type(1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_common_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      int32array_descriptor_, &int32array::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CrashmoMapBaseData_descriptor_, &CrashmoMapBaseData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CrashMapData_descriptor_, &CrashMapData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TaskInfo_descriptor_, &TaskInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RankMapBlogEntry_descriptor_, &RankMapBlogEntry::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CrashPlayerPublishMap_descriptor_, &CrashPlayerPublishMap::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      intPair_descriptor_, &intPair::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CrashPlayerInfo_descriptor_, &CrashPlayerInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TaskConditionTypeConfig_descriptor_, &TaskConditionTypeConfig::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TaskRewardConfig_descriptor_, &TaskRewardConfig::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TaskInfoConfig_descriptor_, &TaskInfoConfig::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_common_2eproto() {
  delete int32array::default_instance_;
  delete int32array_reflection_;
  delete CrashmoMapBaseData::default_instance_;
  delete CrashmoMapBaseData_reflection_;
  delete CrashMapData::default_instance_;
  delete CrashMapData_reflection_;
  delete TaskInfo::default_instance_;
  delete TaskInfo_reflection_;
  delete RankMapBlogEntry::default_instance_;
  delete RankMapBlogEntry_reflection_;
  delete CrashPlayerPublishMap::default_instance_;
  delete CrashPlayerPublishMap_reflection_;
  delete intPair::default_instance_;
  delete intPair_reflection_;
  delete CrashPlayerInfo::default_instance_;
  delete CrashPlayerInfo_reflection_;
  delete TaskConditionTypeConfig::default_instance_;
  delete TaskConditionTypeConfig_reflection_;
  delete TaskRewardConfig::default_instance_;
  delete TaskRewardConfig_reflection_;
  delete TaskInfoConfig::default_instance_;
  delete TaskInfoConfig_reflection_;
}

void protobuf_AddDesc_common_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\014common.proto\022\007message\"\032\n\nint32array\022\014\n"
    "\004data\030\001 \003(\005\"m\n\022CrashmoMapBaseData\022\r\n\005wid"
    "th\030\001 \002(\005\022\016\n\006height\030\002 \002(\005\022%\n\010map_data\030\003 \003"
    "(\0132\023.message.int32array\022\021\n\tmap_index\030\005 \002"
    "(\004\"\244\001\n\014CrashMapData\022)\n\004Data\030\001 \002(\0132\033.mess"
    "age.CrashmoMapBaseData\022\017\n\007MapName\030\002 \002(\t\022"
    "\023\n\013CreaterName\030\003 \002(\t\022\017\n\007Section\030\004 \002(\005\022\017\n"
    "\007Chapter\030\005 \002(\005\022\023\n\013create_time\030\006 \002(\004\022\014\n\004g"
    "old\030\007 \002(\005\"K\n\010TaskInfo\022\017\n\007task_id\030\001 \002(\005\022\016"
    "\n\006argu_1\030\002 \002(\005\022\016\n\006argu_2\030\003 \002(\005\022\016\n\006argu_3"
    "\030\004 \002(\005\"L\n\020RankMapBlogEntry\022\013\n\003acc\030\001 \002(\004\022"
    "\014\n\004name\030\002 \002(\t\022\017\n\007sugges_\030\003 \002(\t\022\014\n\004time\030\004"
    " \002(\005\"\321\001\n\025CrashPlayerPublishMap\022\'\n\010crashm"
    "ap\030\001 \002(\0132\025.message.CrashMapData\022\024\n\014publi"
    "sh_time\030\002 \002(\004\022\027\n\017challenge_times\030\003 \002(\005\022!"
    "\n\031failed_of_challenge_times\030\004 \002(\005\022\020\n\010map"
    "_rank\030\005 \002(\005\022+\n\010map_blog\030\006 \003(\0132\031.message."
    "RankMapBlogEntry\"-\n\007intPair\022\020\n\010number_1\030"
    "\001 \002(\005\022\020\n\010number_2\030\002 \002(\005\"\332\002\n\017CrashPlayerI"
    "nfo\022\017\n\007account\030\001 \002(\004\022\'\n\rpassed_record\030\002 "
    "\003(\0132\020.message.intPair\022\014\n\004name\030\003 \002(\t\022,\n\rI"
    "ncompleteMap\030\004 \003(\0132\025.message.CrashMapDat"
    "a\022*\n\013CompleteMap\030\005 \003(\0132\025.message.CrashMa"
    "pData\022\017\n\007isadmin\030\006 \002(\010\022#\n\tresources\030\007 \003("
    "\0132\020.message.intPair\022\021\n\tmap_width\030\010 \002(\005\022\022"
    "\n\nmap_height\030\t \002(\005\022\021\n\tmap_count\030\n \002(\005\022\014\n"
    "\004gold\030\013 \002(\005\022\'\n\014current_task\030\014 \003(\0132\021.mess"
    "age.TaskInfo\"x\n\027TaskConditionTypeConfig\022"
    "=\n\tcondition\030\001 \002(\0162\026.message.ConditionTy"
    "pe:\022ConditionType_NULL\022\016\n\006argu_1\030\002 \002(\005\022\016"
    "\n\006argu_2\030\003 \002(\005\"b\n\020TaskRewardConfig\022\?\n\rre"
    "source_type\030\001 \002(\0162\025.message.ResourceType"
    ":\021ResourceType_NULL\022\r\n\005count\030\002 \002(\005\"\215\002\n\016T"
    "askInfoConfig\022\017\n\007task_id\030\001 \002(\005\022\014\n\004name\030\002"
    " \002(\t\022\020\n\010describe\030\003 \002(\t\0224\n\nconditions\030\004 \003"
    "(\0132 .message.TaskConditionTypeConfig\022*\n\007"
    "rewards\030\005 \003(\0132\031.message.TaskRewardConfig"
    "\022 \n\030required_pass_chapter_id\030\006 \002(\005\022 \n\030re"
    "quired_pass_section_id\030\007 \002(\005\022$\n\034required"
    "_complete_task_count\030\010 \002(\005*\277\001\n\rCondition"
    "Type\022\026\n\022ConditionType_NULL\020\000\022!\n\035Conditio"
    "nType_PassOfficilGame\020\001\022\035\n\031ConditionType"
    "_LimitedTime\020\002\022\035\n\031ConditionType_LimitedS"
    "tep\020\003\022\036\n\032ConditionType_PassUserGame\020\004\022\025\n"
    "\021ConditionType_Max\020\005*\212\002\n\014ResourceType\022\025\n"
    "\021ResourceType_NULL\020\000\022\022\n\016ResourceType_0\020\001"
    "\022\022\n\016ResourceType_1\020\002\022\022\n\016ResourceType_2\020\003"
    "\022\022\n\016ResourceType_3\020\004\022\022\n\016ResourceType_4\020\005"
    "\022\022\n\016ResourceType_5\020\006\022\022\n\016ResourceType_6\020\007"
    "\022\022\n\016ResourceType_7\020\010\022\025\n\021ResourceType_gol"
    "d\020\t\022\026\n\022ResourceType_jewel\020\n\022\024\n\020ResourceT"
    "ype_Max\020\013", 2049);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "common.proto", &protobuf_RegisterTypes);
  int32array::default_instance_ = new int32array();
  CrashmoMapBaseData::default_instance_ = new CrashmoMapBaseData();
  CrashMapData::default_instance_ = new CrashMapData();
  TaskInfo::default_instance_ = new TaskInfo();
  RankMapBlogEntry::default_instance_ = new RankMapBlogEntry();
  CrashPlayerPublishMap::default_instance_ = new CrashPlayerPublishMap();
  intPair::default_instance_ = new intPair();
  CrashPlayerInfo::default_instance_ = new CrashPlayerInfo();
  TaskConditionTypeConfig::default_instance_ = new TaskConditionTypeConfig();
  TaskRewardConfig::default_instance_ = new TaskRewardConfig();
  TaskInfoConfig::default_instance_ = new TaskInfoConfig();
  int32array::default_instance_->InitAsDefaultInstance();
  CrashmoMapBaseData::default_instance_->InitAsDefaultInstance();
  CrashMapData::default_instance_->InitAsDefaultInstance();
  TaskInfo::default_instance_->InitAsDefaultInstance();
  RankMapBlogEntry::default_instance_->InitAsDefaultInstance();
  CrashPlayerPublishMap::default_instance_->InitAsDefaultInstance();
  intPair::default_instance_->InitAsDefaultInstance();
  CrashPlayerInfo::default_instance_->InitAsDefaultInstance();
  TaskConditionTypeConfig::default_instance_->InitAsDefaultInstance();
  TaskRewardConfig::default_instance_->InitAsDefaultInstance();
  TaskInfoConfig::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_common_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_common_2eproto {
  StaticDescriptorInitializer_common_2eproto() {
    protobuf_AddDesc_common_2eproto();
  }
} static_descriptor_initializer_common_2eproto_;
const ::google::protobuf::EnumDescriptor* ConditionType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ConditionType_descriptor_;
}
bool ConditionType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ResourceType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResourceType_descriptor_;
}
bool ResourceType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
      return true;
    default:
      return false;
  }
}


namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#ifndef _MSC_VER
const int int32array::kDataFieldNumber;
#endif  // !_MSC_VER

int32array::int32array()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.int32array)
}

void int32array::InitAsDefaultInstance() {
}

int32array::int32array(const int32array& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message.int32array)
}

void int32array::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

int32array::~int32array() {
  // @@protoc_insertion_point(destructor:message.int32array)
  SharedDtor();
}

void int32array::SharedDtor() {
  if (this != default_instance_) {
  }
}

void int32array::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* int32array::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return int32array_descriptor_;
}

const int32array& int32array::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_2eproto();
  return *default_instance_;
}

int32array* int32array::default_instance_ = NULL;

int32array* int32array::New(::google::protobuf::Arena* arena) const {
  int32array* n = new int32array;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void int32array::Clear() {
  data_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool int32array::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.int32array)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 data = 1;
      case 1: {
        if (tag == 8) {
         parse_data:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8, input, this->mutable_data())));
        } else if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_data())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(8)) goto parse_data;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.int32array)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.int32array)
  return false;
#undef DO_
}

void int32array::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.int32array)
  // repeated int32 data = 1;
  for (int i = 0; i < this->data_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->data(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.int32array)
}

::google::protobuf::uint8* int32array::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.int32array)
  // repeated int32 data = 1;
  for (int i = 0; i < this->data_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(1, this->data(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.int32array)
  return target;
}

int int32array::ByteSize() const {
  int total_size = 0;

  // repeated int32 data = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->data_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->data(i));
    }
    total_size += 1 * this->data_size() + data_size;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void int32array::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const int32array* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const int32array*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void int32array::MergeFrom(const int32array& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  data_.MergeFrom(from.data_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void int32array::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void int32array::CopyFrom(const int32array& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool int32array::IsInitialized() const {

  return true;
}

void int32array::Swap(int32array* other) {
  if (other == this) return;
  InternalSwap(other);
}
void int32array::InternalSwap(int32array* other) {
  data_.UnsafeArenaSwap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata int32array::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = int32array_descriptor_;
  metadata.reflection = int32array_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// int32array

// repeated int32 data = 1;
 int int32array::data_size() const {
  return data_.size();
}
 void int32array::clear_data() {
  data_.Clear();
}
 ::google::protobuf::int32 int32array::data(int index) const {
  // @@protoc_insertion_point(field_get:message.int32array.data)
  return data_.Get(index);
}
 void int32array::set_data(int index, ::google::protobuf::int32 value) {
  data_.Set(index, value);
  // @@protoc_insertion_point(field_set:message.int32array.data)
}
 void int32array::add_data(::google::protobuf::int32 value) {
  data_.Add(value);
  // @@protoc_insertion_point(field_add:message.int32array.data)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
int32array::data() const {
  // @@protoc_insertion_point(field_list:message.int32array.data)
  return data_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
int32array::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:message.int32array.data)
  return &data_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int CrashmoMapBaseData::kWidthFieldNumber;
const int CrashmoMapBaseData::kHeightFieldNumber;
const int CrashmoMapBaseData::kMapDataFieldNumber;
const int CrashmoMapBaseData::kMapIndexFieldNumber;
#endif  // !_MSC_VER

CrashmoMapBaseData::CrashmoMapBaseData()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.CrashmoMapBaseData)
}

void CrashmoMapBaseData::InitAsDefaultInstance() {
}

CrashmoMapBaseData::CrashmoMapBaseData(const CrashmoMapBaseData& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message.CrashmoMapBaseData)
}

void CrashmoMapBaseData::SharedCtor() {
  _cached_size_ = 0;
  width_ = 0;
  height_ = 0;
  map_index_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CrashmoMapBaseData::~CrashmoMapBaseData() {
  // @@protoc_insertion_point(destructor:message.CrashmoMapBaseData)
  SharedDtor();
}

void CrashmoMapBaseData::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CrashmoMapBaseData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CrashmoMapBaseData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CrashmoMapBaseData_descriptor_;
}

const CrashmoMapBaseData& CrashmoMapBaseData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_2eproto();
  return *default_instance_;
}

CrashmoMapBaseData* CrashmoMapBaseData::default_instance_ = NULL;

CrashmoMapBaseData* CrashmoMapBaseData::New(::google::protobuf::Arena* arena) const {
  CrashmoMapBaseData* n = new CrashmoMapBaseData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CrashmoMapBaseData::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CrashmoMapBaseData*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 11) {
    ZR_(width_, height_);
    map_index_ = GOOGLE_ULONGLONG(0);
  }

#undef ZR_HELPER_
#undef ZR_

  map_data_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CrashmoMapBaseData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.CrashmoMapBaseData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 width = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &width_)));
          set_has_width();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_height;
        break;
      }

      // required int32 height = 2;
      case 2: {
        if (tag == 16) {
         parse_height:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &height_)));
          set_has_height();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_map_data;
        break;
      }

      // repeated .message.int32array map_data = 3;
      case 3: {
        if (tag == 26) {
         parse_map_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_map_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_map_data;
        if (input->ExpectTag(40)) goto parse_map_index;
        break;
      }

      // required uint64 map_index = 5;
      case 5: {
        if (tag == 40) {
         parse_map_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &map_index_)));
          set_has_map_index();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.CrashmoMapBaseData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.CrashmoMapBaseData)
  return false;
#undef DO_
}

void CrashmoMapBaseData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.CrashmoMapBaseData)
  // required int32 width = 1;
  if (has_width()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->width(), output);
  }

  // required int32 height = 2;
  if (has_height()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->height(), output);
  }

  // repeated .message.int32array map_data = 3;
  for (unsigned int i = 0, n = this->map_data_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->map_data(i), output);
  }

  // required uint64 map_index = 5;
  if (has_map_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->map_index(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.CrashmoMapBaseData)
}

::google::protobuf::uint8* CrashmoMapBaseData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.CrashmoMapBaseData)
  // required int32 width = 1;
  if (has_width()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->width(), target);
  }

  // required int32 height = 2;
  if (has_height()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->height(), target);
  }

  // repeated .message.int32array map_data = 3;
  for (unsigned int i = 0, n = this->map_data_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->map_data(i), target);
  }

  // required uint64 map_index = 5;
  if (has_map_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->map_index(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.CrashmoMapBaseData)
  return target;
}

int CrashmoMapBaseData::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_width()) {
    // required int32 width = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->width());
  }

  if (has_height()) {
    // required int32 height = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->height());
  }

  if (has_map_index()) {
    // required uint64 map_index = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->map_index());
  }

  return total_size;
}
int CrashmoMapBaseData::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x0000000b) ^ 0x0000000b) == 0) {  // All required fields are present.
    // required int32 width = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->width());

    // required int32 height = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->height());

    // required uint64 map_index = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->map_index());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .message.int32array map_data = 3;
  total_size += 1 * this->map_data_size();
  for (int i = 0; i < this->map_data_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->map_data(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CrashmoMapBaseData::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CrashmoMapBaseData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CrashmoMapBaseData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CrashmoMapBaseData::MergeFrom(const CrashmoMapBaseData& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  map_data_.MergeFrom(from.map_data_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_width()) {
      set_width(from.width());
    }
    if (from.has_height()) {
      set_height(from.height());
    }
    if (from.has_map_index()) {
      set_map_index(from.map_index());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CrashmoMapBaseData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CrashmoMapBaseData::CopyFrom(const CrashmoMapBaseData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CrashmoMapBaseData::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000b) != 0x0000000b) return false;

  return true;
}

void CrashmoMapBaseData::Swap(CrashmoMapBaseData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CrashmoMapBaseData::InternalSwap(CrashmoMapBaseData* other) {
  std::swap(width_, other->width_);
  std::swap(height_, other->height_);
  map_data_.UnsafeArenaSwap(&other->map_data_);
  std::swap(map_index_, other->map_index_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CrashmoMapBaseData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CrashmoMapBaseData_descriptor_;
  metadata.reflection = CrashmoMapBaseData_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CrashmoMapBaseData

// required int32 width = 1;
 bool CrashmoMapBaseData::has_width() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void CrashmoMapBaseData::set_has_width() {
  _has_bits_[0] |= 0x00000001u;
}
 void CrashmoMapBaseData::clear_has_width() {
  _has_bits_[0] &= ~0x00000001u;
}
 void CrashmoMapBaseData::clear_width() {
  width_ = 0;
  clear_has_width();
}
 ::google::protobuf::int32 CrashmoMapBaseData::width() const {
  // @@protoc_insertion_point(field_get:message.CrashmoMapBaseData.width)
  return width_;
}
 void CrashmoMapBaseData::set_width(::google::protobuf::int32 value) {
  set_has_width();
  width_ = value;
  // @@protoc_insertion_point(field_set:message.CrashmoMapBaseData.width)
}

// required int32 height = 2;
 bool CrashmoMapBaseData::has_height() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
 void CrashmoMapBaseData::set_has_height() {
  _has_bits_[0] |= 0x00000002u;
}
 void CrashmoMapBaseData::clear_has_height() {
  _has_bits_[0] &= ~0x00000002u;
}
 void CrashmoMapBaseData::clear_height() {
  height_ = 0;
  clear_has_height();
}
 ::google::protobuf::int32 CrashmoMapBaseData::height() const {
  // @@protoc_insertion_point(field_get:message.CrashmoMapBaseData.height)
  return height_;
}
 void CrashmoMapBaseData::set_height(::google::protobuf::int32 value) {
  set_has_height();
  height_ = value;
  // @@protoc_insertion_point(field_set:message.CrashmoMapBaseData.height)
}

// repeated .message.int32array map_data = 3;
 int CrashmoMapBaseData::map_data_size() const {
  return map_data_.size();
}
 void CrashmoMapBaseData::clear_map_data() {
  map_data_.Clear();
}
 const ::message::int32array& CrashmoMapBaseData::map_data(int index) const {
  // @@protoc_insertion_point(field_get:message.CrashmoMapBaseData.map_data)
  return map_data_.Get(index);
}
 ::message::int32array* CrashmoMapBaseData::mutable_map_data(int index) {
  // @@protoc_insertion_point(field_mutable:message.CrashmoMapBaseData.map_data)
  return map_data_.Mutable(index);
}
 ::message::int32array* CrashmoMapBaseData::add_map_data() {
  // @@protoc_insertion_point(field_add:message.CrashmoMapBaseData.map_data)
  return map_data_.Add();
}
 const ::google::protobuf::RepeatedPtrField< ::message::int32array >&
CrashmoMapBaseData::map_data() const {
  // @@protoc_insertion_point(field_list:message.CrashmoMapBaseData.map_data)
  return map_data_;
}
 ::google::protobuf::RepeatedPtrField< ::message::int32array >*
CrashmoMapBaseData::mutable_map_data() {
  // @@protoc_insertion_point(field_mutable_list:message.CrashmoMapBaseData.map_data)
  return &map_data_;
}

// required uint64 map_index = 5;
 bool CrashmoMapBaseData::has_map_index() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
 void CrashmoMapBaseData::set_has_map_index() {
  _has_bits_[0] |= 0x00000008u;
}
 void CrashmoMapBaseData::clear_has_map_index() {
  _has_bits_[0] &= ~0x00000008u;
}
 void CrashmoMapBaseData::clear_map_index() {
  map_index_ = GOOGLE_ULONGLONG(0);
  clear_has_map_index();
}
 ::google::protobuf::uint64 CrashmoMapBaseData::map_index() const {
  // @@protoc_insertion_point(field_get:message.CrashmoMapBaseData.map_index)
  return map_index_;
}
 void CrashmoMapBaseData::set_map_index(::google::protobuf::uint64 value) {
  set_has_map_index();
  map_index_ = value;
  // @@protoc_insertion_point(field_set:message.CrashmoMapBaseData.map_index)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int CrashMapData::kDataFieldNumber;
const int CrashMapData::kMapNameFieldNumber;
const int CrashMapData::kCreaterNameFieldNumber;
const int CrashMapData::kSectionFieldNumber;
const int CrashMapData::kChapterFieldNumber;
const int CrashMapData::kCreateTimeFieldNumber;
const int CrashMapData::kGoldFieldNumber;
#endif  // !_MSC_VER

CrashMapData::CrashMapData()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.CrashMapData)
}

void CrashMapData::InitAsDefaultInstance() {
  data_ = const_cast< ::message::CrashmoMapBaseData*>(&::message::CrashmoMapBaseData::default_instance());
}

CrashMapData::CrashMapData(const CrashMapData& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message.CrashMapData)
}

void CrashMapData::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_ = NULL;
  mapname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  creatername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  section_ = 0;
  chapter_ = 0;
  create_time_ = GOOGLE_ULONGLONG(0);
  gold_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CrashMapData::~CrashMapData() {
  // @@protoc_insertion_point(destructor:message.CrashMapData)
  SharedDtor();
}

void CrashMapData::SharedDtor() {
  mapname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  creatername_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete data_;
  }
}

void CrashMapData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CrashMapData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CrashMapData_descriptor_;
}

const CrashMapData& CrashMapData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_2eproto();
  return *default_instance_;
}

CrashMapData* CrashMapData::default_instance_ = NULL;

CrashMapData* CrashMapData::New(::google::protobuf::Arena* arena) const {
  CrashMapData* n = new CrashMapData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CrashMapData::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CrashMapData*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 127) {
    ZR_(section_, gold_);
    if (has_data()) {
      if (data_ != NULL) data_->::message::CrashmoMapBaseData::Clear();
    }
    if (has_mapname()) {
      mapname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_creatername()) {
      creatername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CrashMapData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.CrashMapData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .message.CrashmoMapBaseData Data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_MapName;
        break;
      }

      // required string MapName = 2;
      case 2: {
        if (tag == 18) {
         parse_MapName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mapname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->mapname().data(), this->mapname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "message.CrashMapData.MapName");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_CreaterName;
        break;
      }

      // required string CreaterName = 3;
      case 3: {
        if (tag == 26) {
         parse_CreaterName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_creatername()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->creatername().data(), this->creatername().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "message.CrashMapData.CreaterName");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_Section;
        break;
      }

      // required int32 Section = 4;
      case 4: {
        if (tag == 32) {
         parse_Section:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &section_)));
          set_has_section();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_Chapter;
        break;
      }

      // required int32 Chapter = 5;
      case 5: {
        if (tag == 40) {
         parse_Chapter:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &chapter_)));
          set_has_chapter();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_create_time;
        break;
      }

      // required uint64 create_time = 6;
      case 6: {
        if (tag == 48) {
         parse_create_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &create_time_)));
          set_has_create_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_gold;
        break;
      }

      // required int32 gold = 7;
      case 7: {
        if (tag == 56) {
         parse_gold:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gold_)));
          set_has_gold();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.CrashMapData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.CrashMapData)
  return false;
#undef DO_
}

void CrashMapData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.CrashMapData)
  // required .message.CrashmoMapBaseData Data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->data_, output);
  }

  // required string MapName = 2;
  if (has_mapname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mapname().data(), this->mapname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "message.CrashMapData.MapName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->mapname(), output);
  }

  // required string CreaterName = 3;
  if (has_creatername()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->creatername().data(), this->creatername().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "message.CrashMapData.CreaterName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->creatername(), output);
  }

  // required int32 Section = 4;
  if (has_section()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->section(), output);
  }

  // required int32 Chapter = 5;
  if (has_chapter()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->chapter(), output);
  }

  // required uint64 create_time = 6;
  if (has_create_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->create_time(), output);
  }

  // required int32 gold = 7;
  if (has_gold()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->gold(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.CrashMapData)
}

::google::protobuf::uint8* CrashMapData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.CrashMapData)
  // required .message.CrashmoMapBaseData Data = 1;
  if (has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, *this->data_, target);
  }

  // required string MapName = 2;
  if (has_mapname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mapname().data(), this->mapname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "message.CrashMapData.MapName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->mapname(), target);
  }

  // required string CreaterName = 3;
  if (has_creatername()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->creatername().data(), this->creatername().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "message.CrashMapData.CreaterName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->creatername(), target);
  }

  // required int32 Section = 4;
  if (has_section()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->section(), target);
  }

  // required int32 Chapter = 5;
  if (has_chapter()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->chapter(), target);
  }

  // required uint64 create_time = 6;
  if (has_create_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->create_time(), target);
  }

  // required int32 gold = 7;
  if (has_gold()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->gold(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.CrashMapData)
  return target;
}

int CrashMapData::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_data()) {
    // required .message.CrashmoMapBaseData Data = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->data_);
  }

  if (has_mapname()) {
    // required string MapName = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mapname());
  }

  if (has_creatername()) {
    // required string CreaterName = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->creatername());
  }

  if (has_section()) {
    // required int32 Section = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->section());
  }

  if (has_chapter()) {
    // required int32 Chapter = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->chapter());
  }

  if (has_create_time()) {
    // required uint64 create_time = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->create_time());
  }

  if (has_gold()) {
    // required int32 gold = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->gold());
  }

  return total_size;
}
int CrashMapData::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x0000007f) ^ 0x0000007f) == 0) {  // All required fields are present.
    // required .message.CrashmoMapBaseData Data = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->data_);

    // required string MapName = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mapname());

    // required string CreaterName = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->creatername());

    // required int32 Section = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->section());

    // required int32 Chapter = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->chapter());

    // required uint64 create_time = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->create_time());

    // required int32 gold = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->gold());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CrashMapData::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CrashMapData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CrashMapData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CrashMapData::MergeFrom(const CrashMapData& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      mutable_data()->::message::CrashmoMapBaseData::MergeFrom(from.data());
    }
    if (from.has_mapname()) {
      set_has_mapname();
      mapname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mapname_);
    }
    if (from.has_creatername()) {
      set_has_creatername();
      creatername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.creatername_);
    }
    if (from.has_section()) {
      set_section(from.section());
    }
    if (from.has_chapter()) {
      set_chapter(from.chapter());
    }
    if (from.has_create_time()) {
      set_create_time(from.create_time());
    }
    if (from.has_gold()) {
      set_gold(from.gold());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CrashMapData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CrashMapData::CopyFrom(const CrashMapData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CrashMapData::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000007f) != 0x0000007f) return false;

  if (has_data()) {
    if (!this->data_->IsInitialized()) return false;
  }
  return true;
}

void CrashMapData::Swap(CrashMapData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CrashMapData::InternalSwap(CrashMapData* other) {
  std::swap(data_, other->data_);
  mapname_.Swap(&other->mapname_);
  creatername_.Swap(&other->creatername_);
  std::swap(section_, other->section_);
  std::swap(chapter_, other->chapter_);
  std::swap(create_time_, other->create_time_);
  std::swap(gold_, other->gold_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CrashMapData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CrashMapData_descriptor_;
  metadata.reflection = CrashMapData_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CrashMapData

// required .message.CrashmoMapBaseData Data = 1;
 bool CrashMapData::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void CrashMapData::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
 void CrashMapData::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
 void CrashMapData::clear_data() {
  if (data_ != NULL) data_->::message::CrashmoMapBaseData::Clear();
  clear_has_data();
}
 const ::message::CrashmoMapBaseData& CrashMapData::data() const {
  // @@protoc_insertion_point(field_get:message.CrashMapData.Data)
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
 ::message::CrashmoMapBaseData* CrashMapData::mutable_data() {
  set_has_data();
  if (data_ == NULL) {
    data_ = new ::message::CrashmoMapBaseData;
  }
  // @@protoc_insertion_point(field_mutable:message.CrashMapData.Data)
  return data_;
}
 ::message::CrashmoMapBaseData* CrashMapData::release_data() {
  clear_has_data();
  ::message::CrashmoMapBaseData* temp = data_;
  data_ = NULL;
  return temp;
}
 void CrashMapData::set_allocated_data(::message::CrashmoMapBaseData* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
  // @@protoc_insertion_point(field_set_allocated:message.CrashMapData.Data)
}

// required string MapName = 2;
 bool CrashMapData::has_mapname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
 void CrashMapData::set_has_mapname() {
  _has_bits_[0] |= 0x00000002u;
}
 void CrashMapData::clear_has_mapname() {
  _has_bits_[0] &= ~0x00000002u;
}
 void CrashMapData::clear_mapname() {
  mapname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_mapname();
}
 const ::std::string& CrashMapData::mapname() const {
  // @@protoc_insertion_point(field_get:message.CrashMapData.MapName)
  return mapname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CrashMapData::set_mapname(const ::std::string& value) {
  set_has_mapname();
  mapname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message.CrashMapData.MapName)
}
 void CrashMapData::set_mapname(const char* value) {
  set_has_mapname();
  mapname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.CrashMapData.MapName)
}
 void CrashMapData::set_mapname(const char* value, size_t size) {
  set_has_mapname();
  mapname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.CrashMapData.MapName)
}
 ::std::string* CrashMapData::mutable_mapname() {
  set_has_mapname();
  // @@protoc_insertion_point(field_mutable:message.CrashMapData.MapName)
  return mapname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CrashMapData::release_mapname() {
  clear_has_mapname();
  return mapname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CrashMapData::set_allocated_mapname(::std::string* mapname) {
  if (mapname != NULL) {
    set_has_mapname();
  } else {
    clear_has_mapname();
  }
  mapname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mapname);
  // @@protoc_insertion_point(field_set_allocated:message.CrashMapData.MapName)
}

// required string CreaterName = 3;
 bool CrashMapData::has_creatername() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
 void CrashMapData::set_has_creatername() {
  _has_bits_[0] |= 0x00000004u;
}
 void CrashMapData::clear_has_creatername() {
  _has_bits_[0] &= ~0x00000004u;
}
 void CrashMapData::clear_creatername() {
  creatername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_creatername();
}
 const ::std::string& CrashMapData::creatername() const {
  // @@protoc_insertion_point(field_get:message.CrashMapData.CreaterName)
  return creatername_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CrashMapData::set_creatername(const ::std::string& value) {
  set_has_creatername();
  creatername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message.CrashMapData.CreaterName)
}
 void CrashMapData::set_creatername(const char* value) {
  set_has_creatername();
  creatername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.CrashMapData.CreaterName)
}
 void CrashMapData::set_creatername(const char* value, size_t size) {
  set_has_creatername();
  creatername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.CrashMapData.CreaterName)
}
 ::std::string* CrashMapData::mutable_creatername() {
  set_has_creatername();
  // @@protoc_insertion_point(field_mutable:message.CrashMapData.CreaterName)
  return creatername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CrashMapData::release_creatername() {
  clear_has_creatername();
  return creatername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CrashMapData::set_allocated_creatername(::std::string* creatername) {
  if (creatername != NULL) {
    set_has_creatername();
  } else {
    clear_has_creatername();
  }
  creatername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), creatername);
  // @@protoc_insertion_point(field_set_allocated:message.CrashMapData.CreaterName)
}

// required int32 Section = 4;
 bool CrashMapData::has_section() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
 void CrashMapData::set_has_section() {
  _has_bits_[0] |= 0x00000008u;
}
 void CrashMapData::clear_has_section() {
  _has_bits_[0] &= ~0x00000008u;
}
 void CrashMapData::clear_section() {
  section_ = 0;
  clear_has_section();
}
 ::google::protobuf::int32 CrashMapData::section() const {
  // @@protoc_insertion_point(field_get:message.CrashMapData.Section)
  return section_;
}
 void CrashMapData::set_section(::google::protobuf::int32 value) {
  set_has_section();
  section_ = value;
  // @@protoc_insertion_point(field_set:message.CrashMapData.Section)
}

// required int32 Chapter = 5;
 bool CrashMapData::has_chapter() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
 void CrashMapData::set_has_chapter() {
  _has_bits_[0] |= 0x00000010u;
}
 void CrashMapData::clear_has_chapter() {
  _has_bits_[0] &= ~0x00000010u;
}
 void CrashMapData::clear_chapter() {
  chapter_ = 0;
  clear_has_chapter();
}
 ::google::protobuf::int32 CrashMapData::chapter() const {
  // @@protoc_insertion_point(field_get:message.CrashMapData.Chapter)
  return chapter_;
}
 void CrashMapData::set_chapter(::google::protobuf::int32 value) {
  set_has_chapter();
  chapter_ = value;
  // @@protoc_insertion_point(field_set:message.CrashMapData.Chapter)
}

// required uint64 create_time = 6;
 bool CrashMapData::has_create_time() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
 void CrashMapData::set_has_create_time() {
  _has_bits_[0] |= 0x00000020u;
}
 void CrashMapData::clear_has_create_time() {
  _has_bits_[0] &= ~0x00000020u;
}
 void CrashMapData::clear_create_time() {
  create_time_ = GOOGLE_ULONGLONG(0);
  clear_has_create_time();
}
 ::google::protobuf::uint64 CrashMapData::create_time() const {
  // @@protoc_insertion_point(field_get:message.CrashMapData.create_time)
  return create_time_;
}
 void CrashMapData::set_create_time(::google::protobuf::uint64 value) {
  set_has_create_time();
  create_time_ = value;
  // @@protoc_insertion_point(field_set:message.CrashMapData.create_time)
}

// required int32 gold = 7;
 bool CrashMapData::has_gold() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
 void CrashMapData::set_has_gold() {
  _has_bits_[0] |= 0x00000040u;
}
 void CrashMapData::clear_has_gold() {
  _has_bits_[0] &= ~0x00000040u;
}
 void CrashMapData::clear_gold() {
  gold_ = 0;
  clear_has_gold();
}
 ::google::protobuf::int32 CrashMapData::gold() const {
  // @@protoc_insertion_point(field_get:message.CrashMapData.gold)
  return gold_;
}
 void CrashMapData::set_gold(::google::protobuf::int32 value) {
  set_has_gold();
  gold_ = value;
  // @@protoc_insertion_point(field_set:message.CrashMapData.gold)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int TaskInfo::kTaskIdFieldNumber;
const int TaskInfo::kArgu1FieldNumber;
const int TaskInfo::kArgu2FieldNumber;
const int TaskInfo::kArgu3FieldNumber;
#endif  // !_MSC_VER

TaskInfo::TaskInfo()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.TaskInfo)
}

void TaskInfo::InitAsDefaultInstance() {
}

TaskInfo::TaskInfo(const TaskInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message.TaskInfo)
}

void TaskInfo::SharedCtor() {
  _cached_size_ = 0;
  task_id_ = 0;
  argu_1_ = 0;
  argu_2_ = 0;
  argu_3_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TaskInfo::~TaskInfo() {
  // @@protoc_insertion_point(destructor:message.TaskInfo)
  SharedDtor();
}

void TaskInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TaskInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TaskInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TaskInfo_descriptor_;
}

const TaskInfo& TaskInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_2eproto();
  return *default_instance_;
}

TaskInfo* TaskInfo::default_instance_ = NULL;

TaskInfo* TaskInfo::New(::google::protobuf::Arena* arena) const {
  TaskInfo* n = new TaskInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TaskInfo::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<TaskInfo*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(task_id_, argu_3_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool TaskInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.TaskInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 task_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &task_id_)));
          set_has_task_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_argu_1;
        break;
      }

      // required int32 argu_1 = 2;
      case 2: {
        if (tag == 16) {
         parse_argu_1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &argu_1_)));
          set_has_argu_1();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_argu_2;
        break;
      }

      // required int32 argu_2 = 3;
      case 3: {
        if (tag == 24) {
         parse_argu_2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &argu_2_)));
          set_has_argu_2();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_argu_3;
        break;
      }

      // required int32 argu_3 = 4;
      case 4: {
        if (tag == 32) {
         parse_argu_3:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &argu_3_)));
          set_has_argu_3();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.TaskInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.TaskInfo)
  return false;
#undef DO_
}

void TaskInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.TaskInfo)
  // required int32 task_id = 1;
  if (has_task_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->task_id(), output);
  }

  // required int32 argu_1 = 2;
  if (has_argu_1()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->argu_1(), output);
  }

  // required int32 argu_2 = 3;
  if (has_argu_2()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->argu_2(), output);
  }

  // required int32 argu_3 = 4;
  if (has_argu_3()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->argu_3(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.TaskInfo)
}

::google::protobuf::uint8* TaskInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.TaskInfo)
  // required int32 task_id = 1;
  if (has_task_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->task_id(), target);
  }

  // required int32 argu_1 = 2;
  if (has_argu_1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->argu_1(), target);
  }

  // required int32 argu_2 = 3;
  if (has_argu_2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->argu_2(), target);
  }

  // required int32 argu_3 = 4;
  if (has_argu_3()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->argu_3(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.TaskInfo)
  return target;
}

int TaskInfo::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_task_id()) {
    // required int32 task_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->task_id());
  }

  if (has_argu_1()) {
    // required int32 argu_1 = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->argu_1());
  }

  if (has_argu_2()) {
    // required int32 argu_2 = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->argu_2());
  }

  if (has_argu_3()) {
    // required int32 argu_3 = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->argu_3());
  }

  return total_size;
}
int TaskInfo::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required int32 task_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->task_id());

    // required int32 argu_1 = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->argu_1());

    // required int32 argu_2 = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->argu_2());

    // required int32 argu_3 = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->argu_3());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TaskInfo::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TaskInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TaskInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TaskInfo::MergeFrom(const TaskInfo& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_task_id()) {
      set_task_id(from.task_id());
    }
    if (from.has_argu_1()) {
      set_argu_1(from.argu_1());
    }
    if (from.has_argu_2()) {
      set_argu_2(from.argu_2());
    }
    if (from.has_argu_3()) {
      set_argu_3(from.argu_3());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void TaskInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TaskInfo::CopyFrom(const TaskInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TaskInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  return true;
}

void TaskInfo::Swap(TaskInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TaskInfo::InternalSwap(TaskInfo* other) {
  std::swap(task_id_, other->task_id_);
  std::swap(argu_1_, other->argu_1_);
  std::swap(argu_2_, other->argu_2_);
  std::swap(argu_3_, other->argu_3_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TaskInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TaskInfo_descriptor_;
  metadata.reflection = TaskInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TaskInfo

// required int32 task_id = 1;
 bool TaskInfo::has_task_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void TaskInfo::set_has_task_id() {
  _has_bits_[0] |= 0x00000001u;
}
 void TaskInfo::clear_has_task_id() {
  _has_bits_[0] &= ~0x00000001u;
}
 void TaskInfo::clear_task_id() {
  task_id_ = 0;
  clear_has_task_id();
}
 ::google::protobuf::int32 TaskInfo::task_id() const {
  // @@protoc_insertion_point(field_get:message.TaskInfo.task_id)
  return task_id_;
}
 void TaskInfo::set_task_id(::google::protobuf::int32 value) {
  set_has_task_id();
  task_id_ = value;
  // @@protoc_insertion_point(field_set:message.TaskInfo.task_id)
}

// required int32 argu_1 = 2;
 bool TaskInfo::has_argu_1() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
 void TaskInfo::set_has_argu_1() {
  _has_bits_[0] |= 0x00000002u;
}
 void TaskInfo::clear_has_argu_1() {
  _has_bits_[0] &= ~0x00000002u;
}
 void TaskInfo::clear_argu_1() {
  argu_1_ = 0;
  clear_has_argu_1();
}
 ::google::protobuf::int32 TaskInfo::argu_1() const {
  // @@protoc_insertion_point(field_get:message.TaskInfo.argu_1)
  return argu_1_;
}
 void TaskInfo::set_argu_1(::google::protobuf::int32 value) {
  set_has_argu_1();
  argu_1_ = value;
  // @@protoc_insertion_point(field_set:message.TaskInfo.argu_1)
}

// required int32 argu_2 = 3;
 bool TaskInfo::has_argu_2() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
 void TaskInfo::set_has_argu_2() {
  _has_bits_[0] |= 0x00000004u;
}
 void TaskInfo::clear_has_argu_2() {
  _has_bits_[0] &= ~0x00000004u;
}
 void TaskInfo::clear_argu_2() {
  argu_2_ = 0;
  clear_has_argu_2();
}
 ::google::protobuf::int32 TaskInfo::argu_2() const {
  // @@protoc_insertion_point(field_get:message.TaskInfo.argu_2)
  return argu_2_;
}
 void TaskInfo::set_argu_2(::google::protobuf::int32 value) {
  set_has_argu_2();
  argu_2_ = value;
  // @@protoc_insertion_point(field_set:message.TaskInfo.argu_2)
}

// required int32 argu_3 = 4;
 bool TaskInfo::has_argu_3() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
 void TaskInfo::set_has_argu_3() {
  _has_bits_[0] |= 0x00000008u;
}
 void TaskInfo::clear_has_argu_3() {
  _has_bits_[0] &= ~0x00000008u;
}
 void TaskInfo::clear_argu_3() {
  argu_3_ = 0;
  clear_has_argu_3();
}
 ::google::protobuf::int32 TaskInfo::argu_3() const {
  // @@protoc_insertion_point(field_get:message.TaskInfo.argu_3)
  return argu_3_;
}
 void TaskInfo::set_argu_3(::google::protobuf::int32 value) {
  set_has_argu_3();
  argu_3_ = value;
  // @@protoc_insertion_point(field_set:message.TaskInfo.argu_3)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int RankMapBlogEntry::kAccFieldNumber;
const int RankMapBlogEntry::kNameFieldNumber;
const int RankMapBlogEntry::kSuggesFieldNumber;
const int RankMapBlogEntry::kTimeFieldNumber;
#endif  // !_MSC_VER

RankMapBlogEntry::RankMapBlogEntry()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.RankMapBlogEntry)
}

void RankMapBlogEntry::InitAsDefaultInstance() {
}

RankMapBlogEntry::RankMapBlogEntry(const RankMapBlogEntry& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message.RankMapBlogEntry)
}

void RankMapBlogEntry::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  acc_ = GOOGLE_ULONGLONG(0);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sugges__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  time_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RankMapBlogEntry::~RankMapBlogEntry() {
  // @@protoc_insertion_point(destructor:message.RankMapBlogEntry)
  SharedDtor();
}

void RankMapBlogEntry::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sugges__.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void RankMapBlogEntry::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RankMapBlogEntry::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RankMapBlogEntry_descriptor_;
}

const RankMapBlogEntry& RankMapBlogEntry::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_2eproto();
  return *default_instance_;
}

RankMapBlogEntry* RankMapBlogEntry::default_instance_ = NULL;

RankMapBlogEntry* RankMapBlogEntry::New(::google::protobuf::Arena* arena) const {
  RankMapBlogEntry* n = new RankMapBlogEntry;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RankMapBlogEntry::Clear() {
  if (_has_bits_[0 / 32] & 15) {
    acc_ = GOOGLE_ULONGLONG(0);
    if (has_name()) {
      name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_sugges_()) {
      sugges__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    time_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool RankMapBlogEntry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.RankMapBlogEntry)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 acc = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &acc_)));
          set_has_acc();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // required string name = 2;
      case 2: {
        if (tag == 18) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "message.RankMapBlogEntry.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_sugges_;
        break;
      }

      // required string sugges_ = 3;
      case 3: {
        if (tag == 26) {
         parse_sugges_:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sugges_()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sugges_().data(), this->sugges_().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "message.RankMapBlogEntry.sugges_");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_time;
        break;
      }

      // required int32 time = 4;
      case 4: {
        if (tag == 32) {
         parse_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &time_)));
          set_has_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.RankMapBlogEntry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.RankMapBlogEntry)
  return false;
#undef DO_
}

void RankMapBlogEntry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.RankMapBlogEntry)
  // required uint64 acc = 1;
  if (has_acc()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->acc(), output);
  }

  // required string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "message.RankMapBlogEntry.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // required string sugges_ = 3;
  if (has_sugges_()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sugges_().data(), this->sugges_().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "message.RankMapBlogEntry.sugges_");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->sugges_(), output);
  }

  // required int32 time = 4;
  if (has_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->time(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.RankMapBlogEntry)
}

::google::protobuf::uint8* RankMapBlogEntry::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.RankMapBlogEntry)
  // required uint64 acc = 1;
  if (has_acc()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->acc(), target);
  }

  // required string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "message.RankMapBlogEntry.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // required string sugges_ = 3;
  if (has_sugges_()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sugges_().data(), this->sugges_().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "message.RankMapBlogEntry.sugges_");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->sugges_(), target);
  }

  // required int32 time = 4;
  if (has_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->time(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.RankMapBlogEntry)
  return target;
}

int RankMapBlogEntry::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_acc()) {
    // required uint64 acc = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->acc());
  }

  if (has_name()) {
    // required string name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  if (has_sugges_()) {
    // required string sugges_ = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sugges_());
  }

  if (has_time()) {
    // required int32 time = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->time());
  }

  return total_size;
}
int RankMapBlogEntry::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required uint64 acc = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->acc());

    // required string name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

    // required string sugges_ = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sugges_());

    // required int32 time = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->time());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RankMapBlogEntry::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const RankMapBlogEntry* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RankMapBlogEntry*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RankMapBlogEntry::MergeFrom(const RankMapBlogEntry& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_acc()) {
      set_acc(from.acc());
    }
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (from.has_sugges_()) {
      set_has_sugges_();
      sugges__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sugges__);
    }
    if (from.has_time()) {
      set_time(from.time());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void RankMapBlogEntry::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RankMapBlogEntry::CopyFrom(const RankMapBlogEntry& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RankMapBlogEntry::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  return true;
}

void RankMapBlogEntry::Swap(RankMapBlogEntry* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RankMapBlogEntry::InternalSwap(RankMapBlogEntry* other) {
  std::swap(acc_, other->acc_);
  name_.Swap(&other->name_);
  sugges__.Swap(&other->sugges__);
  std::swap(time_, other->time_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RankMapBlogEntry::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RankMapBlogEntry_descriptor_;
  metadata.reflection = RankMapBlogEntry_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RankMapBlogEntry

// required uint64 acc = 1;
 bool RankMapBlogEntry::has_acc() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void RankMapBlogEntry::set_has_acc() {
  _has_bits_[0] |= 0x00000001u;
}
 void RankMapBlogEntry::clear_has_acc() {
  _has_bits_[0] &= ~0x00000001u;
}
 void RankMapBlogEntry::clear_acc() {
  acc_ = GOOGLE_ULONGLONG(0);
  clear_has_acc();
}
 ::google::protobuf::uint64 RankMapBlogEntry::acc() const {
  // @@protoc_insertion_point(field_get:message.RankMapBlogEntry.acc)
  return acc_;
}
 void RankMapBlogEntry::set_acc(::google::protobuf::uint64 value) {
  set_has_acc();
  acc_ = value;
  // @@protoc_insertion_point(field_set:message.RankMapBlogEntry.acc)
}

// required string name = 2;
 bool RankMapBlogEntry::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
 void RankMapBlogEntry::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
 void RankMapBlogEntry::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
 void RankMapBlogEntry::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
 const ::std::string& RankMapBlogEntry::name() const {
  // @@protoc_insertion_point(field_get:message.RankMapBlogEntry.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void RankMapBlogEntry::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message.RankMapBlogEntry.name)
}
 void RankMapBlogEntry::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.RankMapBlogEntry.name)
}
 void RankMapBlogEntry::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.RankMapBlogEntry.name)
}
 ::std::string* RankMapBlogEntry::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:message.RankMapBlogEntry.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* RankMapBlogEntry::release_name() {
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void RankMapBlogEntry::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:message.RankMapBlogEntry.name)
}

// required string sugges_ = 3;
 bool RankMapBlogEntry::has_sugges_() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
 void RankMapBlogEntry::set_has_sugges_() {
  _has_bits_[0] |= 0x00000004u;
}
 void RankMapBlogEntry::clear_has_sugges_() {
  _has_bits_[0] &= ~0x00000004u;
}
 void RankMapBlogEntry::clear_sugges_() {
  sugges__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sugges_();
}
 const ::std::string& RankMapBlogEntry::sugges_() const {
  // @@protoc_insertion_point(field_get:message.RankMapBlogEntry.sugges_)
  return sugges__.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void RankMapBlogEntry::set_sugges_(const ::std::string& value) {
  set_has_sugges_();
  sugges__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message.RankMapBlogEntry.sugges_)
}
 void RankMapBlogEntry::set_sugges_(const char* value) {
  set_has_sugges_();
  sugges__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.RankMapBlogEntry.sugges_)
}
 void RankMapBlogEntry::set_sugges_(const char* value, size_t size) {
  set_has_sugges_();
  sugges__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.RankMapBlogEntry.sugges_)
}
 ::std::string* RankMapBlogEntry::mutable_sugges_() {
  set_has_sugges_();
  // @@protoc_insertion_point(field_mutable:message.RankMapBlogEntry.sugges_)
  return sugges__.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* RankMapBlogEntry::release_sugges_() {
  clear_has_sugges_();
  return sugges__.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void RankMapBlogEntry::set_allocated_sugges_(::std::string* sugges_) {
  if (sugges_ != NULL) {
    set_has_sugges_();
  } else {
    clear_has_sugges_();
  }
  sugges__.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sugges_);
  // @@protoc_insertion_point(field_set_allocated:message.RankMapBlogEntry.sugges_)
}

// required int32 time = 4;
 bool RankMapBlogEntry::has_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
 void RankMapBlogEntry::set_has_time() {
  _has_bits_[0] |= 0x00000008u;
}
 void RankMapBlogEntry::clear_has_time() {
  _has_bits_[0] &= ~0x00000008u;
}
 void RankMapBlogEntry::clear_time() {
  time_ = 0;
  clear_has_time();
}
 ::google::protobuf::int32 RankMapBlogEntry::time() const {
  // @@protoc_insertion_point(field_get:message.RankMapBlogEntry.time)
  return time_;
}
 void RankMapBlogEntry::set_time(::google::protobuf::int32 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:message.RankMapBlogEntry.time)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int CrashPlayerPublishMap::kCrashmapFieldNumber;
const int CrashPlayerPublishMap::kPublishTimeFieldNumber;
const int CrashPlayerPublishMap::kChallengeTimesFieldNumber;
const int CrashPlayerPublishMap::kFailedOfChallengeTimesFieldNumber;
const int CrashPlayerPublishMap::kMapRankFieldNumber;
const int CrashPlayerPublishMap::kMapBlogFieldNumber;
#endif  // !_MSC_VER

CrashPlayerPublishMap::CrashPlayerPublishMap()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.CrashPlayerPublishMap)
}

void CrashPlayerPublishMap::InitAsDefaultInstance() {
  crashmap_ = const_cast< ::message::CrashMapData*>(&::message::CrashMapData::default_instance());
}

CrashPlayerPublishMap::CrashPlayerPublishMap(const CrashPlayerPublishMap& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message.CrashPlayerPublishMap)
}

void CrashPlayerPublishMap::SharedCtor() {
  _cached_size_ = 0;
  crashmap_ = NULL;
  publish_time_ = GOOGLE_ULONGLONG(0);
  challenge_times_ = 0;
  failed_of_challenge_times_ = 0;
  map_rank_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CrashPlayerPublishMap::~CrashPlayerPublishMap() {
  // @@protoc_insertion_point(destructor:message.CrashPlayerPublishMap)
  SharedDtor();
}

void CrashPlayerPublishMap::SharedDtor() {
  if (this != default_instance_) {
    delete crashmap_;
  }
}

void CrashPlayerPublishMap::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CrashPlayerPublishMap::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CrashPlayerPublishMap_descriptor_;
}

const CrashPlayerPublishMap& CrashPlayerPublishMap::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_2eproto();
  return *default_instance_;
}

CrashPlayerPublishMap* CrashPlayerPublishMap::default_instance_ = NULL;

CrashPlayerPublishMap* CrashPlayerPublishMap::New(::google::protobuf::Arena* arena) const {
  CrashPlayerPublishMap* n = new CrashPlayerPublishMap;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CrashPlayerPublishMap::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CrashPlayerPublishMap*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 31) {
    ZR_(publish_time_, failed_of_challenge_times_);
    if (has_crashmap()) {
      if (crashmap_ != NULL) crashmap_->::message::CrashMapData::Clear();
    }
    map_rank_ = 0;
  }

#undef ZR_HELPER_
#undef ZR_

  map_blog_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CrashPlayerPublishMap::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.CrashPlayerPublishMap)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .message.CrashMapData crashmap = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_crashmap()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_publish_time;
        break;
      }

      // required uint64 publish_time = 2;
      case 2: {
        if (tag == 16) {
         parse_publish_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &publish_time_)));
          set_has_publish_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_challenge_times;
        break;
      }

      // required int32 challenge_times = 3;
      case 3: {
        if (tag == 24) {
         parse_challenge_times:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &challenge_times_)));
          set_has_challenge_times();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_failed_of_challenge_times;
        break;
      }

      // required int32 failed_of_challenge_times = 4;
      case 4: {
        if (tag == 32) {
         parse_failed_of_challenge_times:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &failed_of_challenge_times_)));
          set_has_failed_of_challenge_times();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_map_rank;
        break;
      }

      // required int32 map_rank = 5;
      case 5: {
        if (tag == 40) {
         parse_map_rank:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &map_rank_)));
          set_has_map_rank();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_map_blog;
        break;
      }

      // repeated .message.RankMapBlogEntry map_blog = 6;
      case 6: {
        if (tag == 50) {
         parse_map_blog:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_map_blog()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_map_blog;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.CrashPlayerPublishMap)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.CrashPlayerPublishMap)
  return false;
#undef DO_
}

void CrashPlayerPublishMap::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.CrashPlayerPublishMap)
  // required .message.CrashMapData crashmap = 1;
  if (has_crashmap()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->crashmap_, output);
  }

  // required uint64 publish_time = 2;
  if (has_publish_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->publish_time(), output);
  }

  // required int32 challenge_times = 3;
  if (has_challenge_times()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->challenge_times(), output);
  }

  // required int32 failed_of_challenge_times = 4;
  if (has_failed_of_challenge_times()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->failed_of_challenge_times(), output);
  }

  // required int32 map_rank = 5;
  if (has_map_rank()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->map_rank(), output);
  }

  // repeated .message.RankMapBlogEntry map_blog = 6;
  for (unsigned int i = 0, n = this->map_blog_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->map_blog(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.CrashPlayerPublishMap)
}

::google::protobuf::uint8* CrashPlayerPublishMap::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.CrashPlayerPublishMap)
  // required .message.CrashMapData crashmap = 1;
  if (has_crashmap()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, *this->crashmap_, target);
  }

  // required uint64 publish_time = 2;
  if (has_publish_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->publish_time(), target);
  }

  // required int32 challenge_times = 3;
  if (has_challenge_times()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->challenge_times(), target);
  }

  // required int32 failed_of_challenge_times = 4;
  if (has_failed_of_challenge_times()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->failed_of_challenge_times(), target);
  }

  // required int32 map_rank = 5;
  if (has_map_rank()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->map_rank(), target);
  }

  // repeated .message.RankMapBlogEntry map_blog = 6;
  for (unsigned int i = 0, n = this->map_blog_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->map_blog(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.CrashPlayerPublishMap)
  return target;
}

int CrashPlayerPublishMap::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_crashmap()) {
    // required .message.CrashMapData crashmap = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->crashmap_);
  }

  if (has_publish_time()) {
    // required uint64 publish_time = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->publish_time());
  }

  if (has_challenge_times()) {
    // required int32 challenge_times = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->challenge_times());
  }

  if (has_failed_of_challenge_times()) {
    // required int32 failed_of_challenge_times = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->failed_of_challenge_times());
  }

  if (has_map_rank()) {
    // required int32 map_rank = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->map_rank());
  }

  return total_size;
}
int CrashPlayerPublishMap::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x0000001f) ^ 0x0000001f) == 0) {  // All required fields are present.
    // required .message.CrashMapData crashmap = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->crashmap_);

    // required uint64 publish_time = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->publish_time());

    // required int32 challenge_times = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->challenge_times());

    // required int32 failed_of_challenge_times = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->failed_of_challenge_times());

    // required int32 map_rank = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->map_rank());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .message.RankMapBlogEntry map_blog = 6;
  total_size += 1 * this->map_blog_size();
  for (int i = 0; i < this->map_blog_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->map_blog(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CrashPlayerPublishMap::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CrashPlayerPublishMap* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CrashPlayerPublishMap*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CrashPlayerPublishMap::MergeFrom(const CrashPlayerPublishMap& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  map_blog_.MergeFrom(from.map_blog_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_crashmap()) {
      mutable_crashmap()->::message::CrashMapData::MergeFrom(from.crashmap());
    }
    if (from.has_publish_time()) {
      set_publish_time(from.publish_time());
    }
    if (from.has_challenge_times()) {
      set_challenge_times(from.challenge_times());
    }
    if (from.has_failed_of_challenge_times()) {
      set_failed_of_challenge_times(from.failed_of_challenge_times());
    }
    if (from.has_map_rank()) {
      set_map_rank(from.map_rank());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CrashPlayerPublishMap::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CrashPlayerPublishMap::CopyFrom(const CrashPlayerPublishMap& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CrashPlayerPublishMap::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;

  if (has_crashmap()) {
    if (!this->crashmap_->IsInitialized()) return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(this->map_blog())) return false;
  return true;
}

void CrashPlayerPublishMap::Swap(CrashPlayerPublishMap* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CrashPlayerPublishMap::InternalSwap(CrashPlayerPublishMap* other) {
  std::swap(crashmap_, other->crashmap_);
  std::swap(publish_time_, other->publish_time_);
  std::swap(challenge_times_, other->challenge_times_);
  std::swap(failed_of_challenge_times_, other->failed_of_challenge_times_);
  std::swap(map_rank_, other->map_rank_);
  map_blog_.UnsafeArenaSwap(&other->map_blog_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CrashPlayerPublishMap::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CrashPlayerPublishMap_descriptor_;
  metadata.reflection = CrashPlayerPublishMap_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CrashPlayerPublishMap

// required .message.CrashMapData crashmap = 1;
 bool CrashPlayerPublishMap::has_crashmap() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void CrashPlayerPublishMap::set_has_crashmap() {
  _has_bits_[0] |= 0x00000001u;
}
 void CrashPlayerPublishMap::clear_has_crashmap() {
  _has_bits_[0] &= ~0x00000001u;
}
 void CrashPlayerPublishMap::clear_crashmap() {
  if (crashmap_ != NULL) crashmap_->::message::CrashMapData::Clear();
  clear_has_crashmap();
}
 const ::message::CrashMapData& CrashPlayerPublishMap::crashmap() const {
  // @@protoc_insertion_point(field_get:message.CrashPlayerPublishMap.crashmap)
  return crashmap_ != NULL ? *crashmap_ : *default_instance_->crashmap_;
}
 ::message::CrashMapData* CrashPlayerPublishMap::mutable_crashmap() {
  set_has_crashmap();
  if (crashmap_ == NULL) {
    crashmap_ = new ::message::CrashMapData;
  }
  // @@protoc_insertion_point(field_mutable:message.CrashPlayerPublishMap.crashmap)
  return crashmap_;
}
 ::message::CrashMapData* CrashPlayerPublishMap::release_crashmap() {
  clear_has_crashmap();
  ::message::CrashMapData* temp = crashmap_;
  crashmap_ = NULL;
  return temp;
}
 void CrashPlayerPublishMap::set_allocated_crashmap(::message::CrashMapData* crashmap) {
  delete crashmap_;
  crashmap_ = crashmap;
  if (crashmap) {
    set_has_crashmap();
  } else {
    clear_has_crashmap();
  }
  // @@protoc_insertion_point(field_set_allocated:message.CrashPlayerPublishMap.crashmap)
}

// required uint64 publish_time = 2;
 bool CrashPlayerPublishMap::has_publish_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
 void CrashPlayerPublishMap::set_has_publish_time() {
  _has_bits_[0] |= 0x00000002u;
}
 void CrashPlayerPublishMap::clear_has_publish_time() {
  _has_bits_[0] &= ~0x00000002u;
}
 void CrashPlayerPublishMap::clear_publish_time() {
  publish_time_ = GOOGLE_ULONGLONG(0);
  clear_has_publish_time();
}
 ::google::protobuf::uint64 CrashPlayerPublishMap::publish_time() const {
  // @@protoc_insertion_point(field_get:message.CrashPlayerPublishMap.publish_time)
  return publish_time_;
}
 void CrashPlayerPublishMap::set_publish_time(::google::protobuf::uint64 value) {
  set_has_publish_time();
  publish_time_ = value;
  // @@protoc_insertion_point(field_set:message.CrashPlayerPublishMap.publish_time)
}

// required int32 challenge_times = 3;
 bool CrashPlayerPublishMap::has_challenge_times() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
 void CrashPlayerPublishMap::set_has_challenge_times() {
  _has_bits_[0] |= 0x00000004u;
}
 void CrashPlayerPublishMap::clear_has_challenge_times() {
  _has_bits_[0] &= ~0x00000004u;
}
 void CrashPlayerPublishMap::clear_challenge_times() {
  challenge_times_ = 0;
  clear_has_challenge_times();
}
 ::google::protobuf::int32 CrashPlayerPublishMap::challenge_times() const {
  // @@protoc_insertion_point(field_get:message.CrashPlayerPublishMap.challenge_times)
  return challenge_times_;
}
 void CrashPlayerPublishMap::set_challenge_times(::google::protobuf::int32 value) {
  set_has_challenge_times();
  challenge_times_ = value;
  // @@protoc_insertion_point(field_set:message.CrashPlayerPublishMap.challenge_times)
}

// required int32 failed_of_challenge_times = 4;
 bool CrashPlayerPublishMap::has_failed_of_challenge_times() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
 void CrashPlayerPublishMap::set_has_failed_of_challenge_times() {
  _has_bits_[0] |= 0x00000008u;
}
 void CrashPlayerPublishMap::clear_has_failed_of_challenge_times() {
  _has_bits_[0] &= ~0x00000008u;
}
 void CrashPlayerPublishMap::clear_failed_of_challenge_times() {
  failed_of_challenge_times_ = 0;
  clear_has_failed_of_challenge_times();
}
 ::google::protobuf::int32 CrashPlayerPublishMap::failed_of_challenge_times() const {
  // @@protoc_insertion_point(field_get:message.CrashPlayerPublishMap.failed_of_challenge_times)
  return failed_of_challenge_times_;
}
 void CrashPlayerPublishMap::set_failed_of_challenge_times(::google::protobuf::int32 value) {
  set_has_failed_of_challenge_times();
  failed_of_challenge_times_ = value;
  // @@protoc_insertion_point(field_set:message.CrashPlayerPublishMap.failed_of_challenge_times)
}

// required int32 map_rank = 5;
 bool CrashPlayerPublishMap::has_map_rank() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
 void CrashPlayerPublishMap::set_has_map_rank() {
  _has_bits_[0] |= 0x00000010u;
}
 void CrashPlayerPublishMap::clear_has_map_rank() {
  _has_bits_[0] &= ~0x00000010u;
}
 void CrashPlayerPublishMap::clear_map_rank() {
  map_rank_ = 0;
  clear_has_map_rank();
}
 ::google::protobuf::int32 CrashPlayerPublishMap::map_rank() const {
  // @@protoc_insertion_point(field_get:message.CrashPlayerPublishMap.map_rank)
  return map_rank_;
}
 void CrashPlayerPublishMap::set_map_rank(::google::protobuf::int32 value) {
  set_has_map_rank();
  map_rank_ = value;
  // @@protoc_insertion_point(field_set:message.CrashPlayerPublishMap.map_rank)
}

// repeated .message.RankMapBlogEntry map_blog = 6;
 int CrashPlayerPublishMap::map_blog_size() const {
  return map_blog_.size();
}
 void CrashPlayerPublishMap::clear_map_blog() {
  map_blog_.Clear();
}
 const ::message::RankMapBlogEntry& CrashPlayerPublishMap::map_blog(int index) const {
  // @@protoc_insertion_point(field_get:message.CrashPlayerPublishMap.map_blog)
  return map_blog_.Get(index);
}
 ::message::RankMapBlogEntry* CrashPlayerPublishMap::mutable_map_blog(int index) {
  // @@protoc_insertion_point(field_mutable:message.CrashPlayerPublishMap.map_blog)
  return map_blog_.Mutable(index);
}
 ::message::RankMapBlogEntry* CrashPlayerPublishMap::add_map_blog() {
  // @@protoc_insertion_point(field_add:message.CrashPlayerPublishMap.map_blog)
  return map_blog_.Add();
}
 const ::google::protobuf::RepeatedPtrField< ::message::RankMapBlogEntry >&
CrashPlayerPublishMap::map_blog() const {
  // @@protoc_insertion_point(field_list:message.CrashPlayerPublishMap.map_blog)
  return map_blog_;
}
 ::google::protobuf::RepeatedPtrField< ::message::RankMapBlogEntry >*
CrashPlayerPublishMap::mutable_map_blog() {
  // @@protoc_insertion_point(field_mutable_list:message.CrashPlayerPublishMap.map_blog)
  return &map_blog_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int intPair::kNumber1FieldNumber;
const int intPair::kNumber2FieldNumber;
#endif  // !_MSC_VER

intPair::intPair()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.intPair)
}

void intPair::InitAsDefaultInstance() {
}

intPair::intPair(const intPair& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message.intPair)
}

void intPair::SharedCtor() {
  _cached_size_ = 0;
  number_1_ = 0;
  number_2_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

intPair::~intPair() {
  // @@protoc_insertion_point(destructor:message.intPair)
  SharedDtor();
}

void intPair::SharedDtor() {
  if (this != default_instance_) {
  }
}

void intPair::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* intPair::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return intPair_descriptor_;
}

const intPair& intPair::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_2eproto();
  return *default_instance_;
}

intPair* intPair::default_instance_ = NULL;

intPair* intPair::New(::google::protobuf::Arena* arena) const {
  intPair* n = new intPair;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void intPair::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<intPair*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(number_1_, number_2_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool intPair::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.intPair)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 number_1 = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &number_1_)));
          set_has_number_1();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_number_2;
        break;
      }

      // required int32 number_2 = 2;
      case 2: {
        if (tag == 16) {
         parse_number_2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &number_2_)));
          set_has_number_2();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.intPair)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.intPair)
  return false;
#undef DO_
}

void intPair::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.intPair)
  // required int32 number_1 = 1;
  if (has_number_1()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->number_1(), output);
  }

  // required int32 number_2 = 2;
  if (has_number_2()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->number_2(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.intPair)
}

::google::protobuf::uint8* intPair::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.intPair)
  // required int32 number_1 = 1;
  if (has_number_1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->number_1(), target);
  }

  // required int32 number_2 = 2;
  if (has_number_2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->number_2(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.intPair)
  return target;
}

int intPair::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_number_1()) {
    // required int32 number_1 = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->number_1());
  }

  if (has_number_2()) {
    // required int32 number_2 = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->number_2());
  }

  return total_size;
}
int intPair::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 number_1 = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->number_1());

    // required int32 number_2 = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->number_2());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void intPair::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const intPair* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const intPair*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void intPair::MergeFrom(const intPair& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_number_1()) {
      set_number_1(from.number_1());
    }
    if (from.has_number_2()) {
      set_number_2(from.number_2());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void intPair::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void intPair::CopyFrom(const intPair& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool intPair::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void intPair::Swap(intPair* other) {
  if (other == this) return;
  InternalSwap(other);
}
void intPair::InternalSwap(intPair* other) {
  std::swap(number_1_, other->number_1_);
  std::swap(number_2_, other->number_2_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata intPair::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = intPair_descriptor_;
  metadata.reflection = intPair_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// intPair

// required int32 number_1 = 1;
 bool intPair::has_number_1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void intPair::set_has_number_1() {
  _has_bits_[0] |= 0x00000001u;
}
 void intPair::clear_has_number_1() {
  _has_bits_[0] &= ~0x00000001u;
}
 void intPair::clear_number_1() {
  number_1_ = 0;
  clear_has_number_1();
}
 ::google::protobuf::int32 intPair::number_1() const {
  // @@protoc_insertion_point(field_get:message.intPair.number_1)
  return number_1_;
}
 void intPair::set_number_1(::google::protobuf::int32 value) {
  set_has_number_1();
  number_1_ = value;
  // @@protoc_insertion_point(field_set:message.intPair.number_1)
}

// required int32 number_2 = 2;
 bool intPair::has_number_2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
 void intPair::set_has_number_2() {
  _has_bits_[0] |= 0x00000002u;
}
 void intPair::clear_has_number_2() {
  _has_bits_[0] &= ~0x00000002u;
}
 void intPair::clear_number_2() {
  number_2_ = 0;
  clear_has_number_2();
}
 ::google::protobuf::int32 intPair::number_2() const {
  // @@protoc_insertion_point(field_get:message.intPair.number_2)
  return number_2_;
}
 void intPair::set_number_2(::google::protobuf::int32 value) {
  set_has_number_2();
  number_2_ = value;
  // @@protoc_insertion_point(field_set:message.intPair.number_2)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int CrashPlayerInfo::kAccountFieldNumber;
const int CrashPlayerInfo::kPassedRecordFieldNumber;
const int CrashPlayerInfo::kNameFieldNumber;
const int CrashPlayerInfo::kIncompleteMapFieldNumber;
const int CrashPlayerInfo::kCompleteMapFieldNumber;
const int CrashPlayerInfo::kIsadminFieldNumber;
const int CrashPlayerInfo::kResourcesFieldNumber;
const int CrashPlayerInfo::kMapWidthFieldNumber;
const int CrashPlayerInfo::kMapHeightFieldNumber;
const int CrashPlayerInfo::kMapCountFieldNumber;
const int CrashPlayerInfo::kGoldFieldNumber;
const int CrashPlayerInfo::kCurrentTaskFieldNumber;
#endif  // !_MSC_VER

CrashPlayerInfo::CrashPlayerInfo()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.CrashPlayerInfo)
}

void CrashPlayerInfo::InitAsDefaultInstance() {
}

CrashPlayerInfo::CrashPlayerInfo(const CrashPlayerInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message.CrashPlayerInfo)
}

void CrashPlayerInfo::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  account_ = GOOGLE_ULONGLONG(0);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  isadmin_ = false;
  map_width_ = 0;
  map_height_ = 0;
  map_count_ = 0;
  gold_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CrashPlayerInfo::~CrashPlayerInfo() {
  // @@protoc_insertion_point(destructor:message.CrashPlayerInfo)
  SharedDtor();
}

void CrashPlayerInfo::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CrashPlayerInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CrashPlayerInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CrashPlayerInfo_descriptor_;
}

const CrashPlayerInfo& CrashPlayerInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_2eproto();
  return *default_instance_;
}

CrashPlayerInfo* CrashPlayerInfo::default_instance_ = NULL;

CrashPlayerInfo* CrashPlayerInfo::New(::google::protobuf::Arena* arena) const {
  CrashPlayerInfo* n = new CrashPlayerInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CrashPlayerInfo::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CrashPlayerInfo*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 165) {
    ZR_(isadmin_, map_width_);
    account_ = GOOGLE_ULONGLONG(0);
    if (has_name()) {
      name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  if (_has_bits_[8 / 32] & 1792) {
    ZR_(map_height_, map_count_);
    gold_ = 0;
  }

#undef ZR_HELPER_
#undef ZR_

  passed_record_.Clear();
  incompletemap_.Clear();
  completemap_.Clear();
  resources_.Clear();
  current_task_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CrashPlayerInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.CrashPlayerInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 account = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &account_)));
          set_has_account();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_passed_record;
        break;
      }

      // repeated .message.intPair passed_record = 2;
      case 2: {
        if (tag == 18) {
         parse_passed_record:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_passed_record()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_passed_record;
        if (input->ExpectTag(26)) goto parse_name;
        break;
      }

      // required string name = 3;
      case 3: {
        if (tag == 26) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "message.CrashPlayerInfo.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_IncompleteMap;
        break;
      }

      // repeated .message.CrashMapData IncompleteMap = 4;
      case 4: {
        if (tag == 34) {
         parse_IncompleteMap:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_incompletemap()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_IncompleteMap;
        if (input->ExpectTag(42)) goto parse_CompleteMap;
        break;
      }

      // repeated .message.CrashMapData CompleteMap = 5;
      case 5: {
        if (tag == 42) {
         parse_CompleteMap:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_completemap()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_CompleteMap;
        if (input->ExpectTag(48)) goto parse_isadmin;
        break;
      }

      // required bool isadmin = 6;
      case 6: {
        if (tag == 48) {
         parse_isadmin:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isadmin_)));
          set_has_isadmin();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_resources;
        break;
      }

      // repeated .message.intPair resources = 7;
      case 7: {
        if (tag == 58) {
         parse_resources:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_resources()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_resources;
        if (input->ExpectTag(64)) goto parse_map_width;
        break;
      }

      // required int32 map_width = 8;
      case 8: {
        if (tag == 64) {
         parse_map_width:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &map_width_)));
          set_has_map_width();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_map_height;
        break;
      }

      // required int32 map_height = 9;
      case 9: {
        if (tag == 72) {
         parse_map_height:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &map_height_)));
          set_has_map_height();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_map_count;
        break;
      }

      // required int32 map_count = 10;
      case 10: {
        if (tag == 80) {
         parse_map_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &map_count_)));
          set_has_map_count();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_gold;
        break;
      }

      // required int32 gold = 11;
      case 11: {
        if (tag == 88) {
         parse_gold:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gold_)));
          set_has_gold();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_current_task;
        break;
      }

      // repeated .message.TaskInfo current_task = 12;
      case 12: {
        if (tag == 98) {
         parse_current_task:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_current_task()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_current_task;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.CrashPlayerInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.CrashPlayerInfo)
  return false;
#undef DO_
}

void CrashPlayerInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.CrashPlayerInfo)
  // required uint64 account = 1;
  if (has_account()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->account(), output);
  }

  // repeated .message.intPair passed_record = 2;
  for (unsigned int i = 0, n = this->passed_record_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->passed_record(i), output);
  }

  // required string name = 3;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "message.CrashPlayerInfo.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  // repeated .message.CrashMapData IncompleteMap = 4;
  for (unsigned int i = 0, n = this->incompletemap_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->incompletemap(i), output);
  }

  // repeated .message.CrashMapData CompleteMap = 5;
  for (unsigned int i = 0, n = this->completemap_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->completemap(i), output);
  }

  // required bool isadmin = 6;
  if (has_isadmin()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->isadmin(), output);
  }

  // repeated .message.intPair resources = 7;
  for (unsigned int i = 0, n = this->resources_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->resources(i), output);
  }

  // required int32 map_width = 8;
  if (has_map_width()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->map_width(), output);
  }

  // required int32 map_height = 9;
  if (has_map_height()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->map_height(), output);
  }

  // required int32 map_count = 10;
  if (has_map_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->map_count(), output);
  }

  // required int32 gold = 11;
  if (has_gold()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->gold(), output);
  }

  // repeated .message.TaskInfo current_task = 12;
  for (unsigned int i = 0, n = this->current_task_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->current_task(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.CrashPlayerInfo)
}

::google::protobuf::uint8* CrashPlayerInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.CrashPlayerInfo)
  // required uint64 account = 1;
  if (has_account()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->account(), target);
  }

  // repeated .message.intPair passed_record = 2;
  for (unsigned int i = 0, n = this->passed_record_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->passed_record(i), target);
  }

  // required string name = 3;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "message.CrashPlayerInfo.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  // repeated .message.CrashMapData IncompleteMap = 4;
  for (unsigned int i = 0, n = this->incompletemap_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->incompletemap(i), target);
  }

  // repeated .message.CrashMapData CompleteMap = 5;
  for (unsigned int i = 0, n = this->completemap_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->completemap(i), target);
  }

  // required bool isadmin = 6;
  if (has_isadmin()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->isadmin(), target);
  }

  // repeated .message.intPair resources = 7;
  for (unsigned int i = 0, n = this->resources_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->resources(i), target);
  }

  // required int32 map_width = 8;
  if (has_map_width()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->map_width(), target);
  }

  // required int32 map_height = 9;
  if (has_map_height()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->map_height(), target);
  }

  // required int32 map_count = 10;
  if (has_map_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->map_count(), target);
  }

  // required int32 gold = 11;
  if (has_gold()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->gold(), target);
  }

  // repeated .message.TaskInfo current_task = 12;
  for (unsigned int i = 0, n = this->current_task_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        12, this->current_task(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.CrashPlayerInfo)
  return target;
}

int CrashPlayerInfo::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_account()) {
    // required uint64 account = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->account());
  }

  if (has_name()) {
    // required string name = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  if (has_isadmin()) {
    // required bool isadmin = 6;
    total_size += 1 + 1;
  }

  if (has_map_width()) {
    // required int32 map_width = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->map_width());
  }

  if (has_map_height()) {
    // required int32 map_height = 9;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->map_height());
  }

  if (has_map_count()) {
    // required int32 map_count = 10;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->map_count());
  }

  if (has_gold()) {
    // required int32 gold = 11;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->gold());
  }

  return total_size;
}
int CrashPlayerInfo::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x000007a5) ^ 0x000007a5) == 0) {  // All required fields are present.
    // required uint64 account = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->account());

    // required string name = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

    // required bool isadmin = 6;
    total_size += 1 + 1;

    // required int32 map_width = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->map_width());

    // required int32 map_height = 9;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->map_height());

    // required int32 map_count = 10;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->map_count());

    // required int32 gold = 11;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->gold());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .message.intPair passed_record = 2;
  total_size += 1 * this->passed_record_size();
  for (int i = 0; i < this->passed_record_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->passed_record(i));
  }

  // repeated .message.CrashMapData IncompleteMap = 4;
  total_size += 1 * this->incompletemap_size();
  for (int i = 0; i < this->incompletemap_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->incompletemap(i));
  }

  // repeated .message.CrashMapData CompleteMap = 5;
  total_size += 1 * this->completemap_size();
  for (int i = 0; i < this->completemap_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->completemap(i));
  }

  // repeated .message.intPair resources = 7;
  total_size += 1 * this->resources_size();
  for (int i = 0; i < this->resources_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->resources(i));
  }

  // repeated .message.TaskInfo current_task = 12;
  total_size += 1 * this->current_task_size();
  for (int i = 0; i < this->current_task_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->current_task(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CrashPlayerInfo::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CrashPlayerInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CrashPlayerInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CrashPlayerInfo::MergeFrom(const CrashPlayerInfo& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  passed_record_.MergeFrom(from.passed_record_);
  incompletemap_.MergeFrom(from.incompletemap_);
  completemap_.MergeFrom(from.completemap_);
  resources_.MergeFrom(from.resources_);
  current_task_.MergeFrom(from.current_task_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_account()) {
      set_account(from.account());
    }
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (from.has_isadmin()) {
      set_isadmin(from.isadmin());
    }
    if (from.has_map_width()) {
      set_map_width(from.map_width());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_map_height()) {
      set_map_height(from.map_height());
    }
    if (from.has_map_count()) {
      set_map_count(from.map_count());
    }
    if (from.has_gold()) {
      set_gold(from.gold());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CrashPlayerInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CrashPlayerInfo::CopyFrom(const CrashPlayerInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CrashPlayerInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x000007a5) != 0x000007a5) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->passed_record())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->incompletemap())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->completemap())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->resources())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->current_task())) return false;
  return true;
}

void CrashPlayerInfo::Swap(CrashPlayerInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CrashPlayerInfo::InternalSwap(CrashPlayerInfo* other) {
  std::swap(account_, other->account_);
  passed_record_.UnsafeArenaSwap(&other->passed_record_);
  name_.Swap(&other->name_);
  incompletemap_.UnsafeArenaSwap(&other->incompletemap_);
  completemap_.UnsafeArenaSwap(&other->completemap_);
  std::swap(isadmin_, other->isadmin_);
  resources_.UnsafeArenaSwap(&other->resources_);
  std::swap(map_width_, other->map_width_);
  std::swap(map_height_, other->map_height_);
  std::swap(map_count_, other->map_count_);
  std::swap(gold_, other->gold_);
  current_task_.UnsafeArenaSwap(&other->current_task_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CrashPlayerInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CrashPlayerInfo_descriptor_;
  metadata.reflection = CrashPlayerInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CrashPlayerInfo

// required uint64 account = 1;
 bool CrashPlayerInfo::has_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void CrashPlayerInfo::set_has_account() {
  _has_bits_[0] |= 0x00000001u;
}
 void CrashPlayerInfo::clear_has_account() {
  _has_bits_[0] &= ~0x00000001u;
}
 void CrashPlayerInfo::clear_account() {
  account_ = GOOGLE_ULONGLONG(0);
  clear_has_account();
}
 ::google::protobuf::uint64 CrashPlayerInfo::account() const {
  // @@protoc_insertion_point(field_get:message.CrashPlayerInfo.account)
  return account_;
}
 void CrashPlayerInfo::set_account(::google::protobuf::uint64 value) {
  set_has_account();
  account_ = value;
  // @@protoc_insertion_point(field_set:message.CrashPlayerInfo.account)
}

// repeated .message.intPair passed_record = 2;
 int CrashPlayerInfo::passed_record_size() const {
  return passed_record_.size();
}
 void CrashPlayerInfo::clear_passed_record() {
  passed_record_.Clear();
}
 const ::message::intPair& CrashPlayerInfo::passed_record(int index) const {
  // @@protoc_insertion_point(field_get:message.CrashPlayerInfo.passed_record)
  return passed_record_.Get(index);
}
 ::message::intPair* CrashPlayerInfo::mutable_passed_record(int index) {
  // @@protoc_insertion_point(field_mutable:message.CrashPlayerInfo.passed_record)
  return passed_record_.Mutable(index);
}
 ::message::intPair* CrashPlayerInfo::add_passed_record() {
  // @@protoc_insertion_point(field_add:message.CrashPlayerInfo.passed_record)
  return passed_record_.Add();
}
 const ::google::protobuf::RepeatedPtrField< ::message::intPair >&
CrashPlayerInfo::passed_record() const {
  // @@protoc_insertion_point(field_list:message.CrashPlayerInfo.passed_record)
  return passed_record_;
}
 ::google::protobuf::RepeatedPtrField< ::message::intPair >*
CrashPlayerInfo::mutable_passed_record() {
  // @@protoc_insertion_point(field_mutable_list:message.CrashPlayerInfo.passed_record)
  return &passed_record_;
}

// required string name = 3;
 bool CrashPlayerInfo::has_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
 void CrashPlayerInfo::set_has_name() {
  _has_bits_[0] |= 0x00000004u;
}
 void CrashPlayerInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000004u;
}
 void CrashPlayerInfo::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
 const ::std::string& CrashPlayerInfo::name() const {
  // @@protoc_insertion_point(field_get:message.CrashPlayerInfo.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CrashPlayerInfo::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message.CrashPlayerInfo.name)
}
 void CrashPlayerInfo::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.CrashPlayerInfo.name)
}
 void CrashPlayerInfo::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.CrashPlayerInfo.name)
}
 ::std::string* CrashPlayerInfo::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:message.CrashPlayerInfo.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CrashPlayerInfo::release_name() {
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CrashPlayerInfo::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:message.CrashPlayerInfo.name)
}

// repeated .message.CrashMapData IncompleteMap = 4;
 int CrashPlayerInfo::incompletemap_size() const {
  return incompletemap_.size();
}
 void CrashPlayerInfo::clear_incompletemap() {
  incompletemap_.Clear();
}
 const ::message::CrashMapData& CrashPlayerInfo::incompletemap(int index) const {
  // @@protoc_insertion_point(field_get:message.CrashPlayerInfo.IncompleteMap)
  return incompletemap_.Get(index);
}
 ::message::CrashMapData* CrashPlayerInfo::mutable_incompletemap(int index) {
  // @@protoc_insertion_point(field_mutable:message.CrashPlayerInfo.IncompleteMap)
  return incompletemap_.Mutable(index);
}
 ::message::CrashMapData* CrashPlayerInfo::add_incompletemap() {
  // @@protoc_insertion_point(field_add:message.CrashPlayerInfo.IncompleteMap)
  return incompletemap_.Add();
}
 const ::google::protobuf::RepeatedPtrField< ::message::CrashMapData >&
CrashPlayerInfo::incompletemap() const {
  // @@protoc_insertion_point(field_list:message.CrashPlayerInfo.IncompleteMap)
  return incompletemap_;
}
 ::google::protobuf::RepeatedPtrField< ::message::CrashMapData >*
CrashPlayerInfo::mutable_incompletemap() {
  // @@protoc_insertion_point(field_mutable_list:message.CrashPlayerInfo.IncompleteMap)
  return &incompletemap_;
}

// repeated .message.CrashMapData CompleteMap = 5;
 int CrashPlayerInfo::completemap_size() const {
  return completemap_.size();
}
 void CrashPlayerInfo::clear_completemap() {
  completemap_.Clear();
}
 const ::message::CrashMapData& CrashPlayerInfo::completemap(int index) const {
  // @@protoc_insertion_point(field_get:message.CrashPlayerInfo.CompleteMap)
  return completemap_.Get(index);
}
 ::message::CrashMapData* CrashPlayerInfo::mutable_completemap(int index) {
  // @@protoc_insertion_point(field_mutable:message.CrashPlayerInfo.CompleteMap)
  return completemap_.Mutable(index);
}
 ::message::CrashMapData* CrashPlayerInfo::add_completemap() {
  // @@protoc_insertion_point(field_add:message.CrashPlayerInfo.CompleteMap)
  return completemap_.Add();
}
 const ::google::protobuf::RepeatedPtrField< ::message::CrashMapData >&
CrashPlayerInfo::completemap() const {
  // @@protoc_insertion_point(field_list:message.CrashPlayerInfo.CompleteMap)
  return completemap_;
}
 ::google::protobuf::RepeatedPtrField< ::message::CrashMapData >*
CrashPlayerInfo::mutable_completemap() {
  // @@protoc_insertion_point(field_mutable_list:message.CrashPlayerInfo.CompleteMap)
  return &completemap_;
}

// required bool isadmin = 6;
 bool CrashPlayerInfo::has_isadmin() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
 void CrashPlayerInfo::set_has_isadmin() {
  _has_bits_[0] |= 0x00000020u;
}
 void CrashPlayerInfo::clear_has_isadmin() {
  _has_bits_[0] &= ~0x00000020u;
}
 void CrashPlayerInfo::clear_isadmin() {
  isadmin_ = false;
  clear_has_isadmin();
}
 bool CrashPlayerInfo::isadmin() const {
  // @@protoc_insertion_point(field_get:message.CrashPlayerInfo.isadmin)
  return isadmin_;
}
 void CrashPlayerInfo::set_isadmin(bool value) {
  set_has_isadmin();
  isadmin_ = value;
  // @@protoc_insertion_point(field_set:message.CrashPlayerInfo.isadmin)
}

// repeated .message.intPair resources = 7;
 int CrashPlayerInfo::resources_size() const {
  return resources_.size();
}
 void CrashPlayerInfo::clear_resources() {
  resources_.Clear();
}
 const ::message::intPair& CrashPlayerInfo::resources(int index) const {
  // @@protoc_insertion_point(field_get:message.CrashPlayerInfo.resources)
  return resources_.Get(index);
}
 ::message::intPair* CrashPlayerInfo::mutable_resources(int index) {
  // @@protoc_insertion_point(field_mutable:message.CrashPlayerInfo.resources)
  return resources_.Mutable(index);
}
 ::message::intPair* CrashPlayerInfo::add_resources() {
  // @@protoc_insertion_point(field_add:message.CrashPlayerInfo.resources)
  return resources_.Add();
}
 const ::google::protobuf::RepeatedPtrField< ::message::intPair >&
CrashPlayerInfo::resources() const {
  // @@protoc_insertion_point(field_list:message.CrashPlayerInfo.resources)
  return resources_;
}
 ::google::protobuf::RepeatedPtrField< ::message::intPair >*
CrashPlayerInfo::mutable_resources() {
  // @@protoc_insertion_point(field_mutable_list:message.CrashPlayerInfo.resources)
  return &resources_;
}

// required int32 map_width = 8;
 bool CrashPlayerInfo::has_map_width() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
 void CrashPlayerInfo::set_has_map_width() {
  _has_bits_[0] |= 0x00000080u;
}
 void CrashPlayerInfo::clear_has_map_width() {
  _has_bits_[0] &= ~0x00000080u;
}
 void CrashPlayerInfo::clear_map_width() {
  map_width_ = 0;
  clear_has_map_width();
}
 ::google::protobuf::int32 CrashPlayerInfo::map_width() const {
  // @@protoc_insertion_point(field_get:message.CrashPlayerInfo.map_width)
  return map_width_;
}
 void CrashPlayerInfo::set_map_width(::google::protobuf::int32 value) {
  set_has_map_width();
  map_width_ = value;
  // @@protoc_insertion_point(field_set:message.CrashPlayerInfo.map_width)
}

// required int32 map_height = 9;
 bool CrashPlayerInfo::has_map_height() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
 void CrashPlayerInfo::set_has_map_height() {
  _has_bits_[0] |= 0x00000100u;
}
 void CrashPlayerInfo::clear_has_map_height() {
  _has_bits_[0] &= ~0x00000100u;
}
 void CrashPlayerInfo::clear_map_height() {
  map_height_ = 0;
  clear_has_map_height();
}
 ::google::protobuf::int32 CrashPlayerInfo::map_height() const {
  // @@protoc_insertion_point(field_get:message.CrashPlayerInfo.map_height)
  return map_height_;
}
 void CrashPlayerInfo::set_map_height(::google::protobuf::int32 value) {
  set_has_map_height();
  map_height_ = value;
  // @@protoc_insertion_point(field_set:message.CrashPlayerInfo.map_height)
}

// required int32 map_count = 10;
 bool CrashPlayerInfo::has_map_count() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
 void CrashPlayerInfo::set_has_map_count() {
  _has_bits_[0] |= 0x00000200u;
}
 void CrashPlayerInfo::clear_has_map_count() {
  _has_bits_[0] &= ~0x00000200u;
}
 void CrashPlayerInfo::clear_map_count() {
  map_count_ = 0;
  clear_has_map_count();
}
 ::google::protobuf::int32 CrashPlayerInfo::map_count() const {
  // @@protoc_insertion_point(field_get:message.CrashPlayerInfo.map_count)
  return map_count_;
}
 void CrashPlayerInfo::set_map_count(::google::protobuf::int32 value) {
  set_has_map_count();
  map_count_ = value;
  // @@protoc_insertion_point(field_set:message.CrashPlayerInfo.map_count)
}

// required int32 gold = 11;
 bool CrashPlayerInfo::has_gold() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
 void CrashPlayerInfo::set_has_gold() {
  _has_bits_[0] |= 0x00000400u;
}
 void CrashPlayerInfo::clear_has_gold() {
  _has_bits_[0] &= ~0x00000400u;
}
 void CrashPlayerInfo::clear_gold() {
  gold_ = 0;
  clear_has_gold();
}
 ::google::protobuf::int32 CrashPlayerInfo::gold() const {
  // @@protoc_insertion_point(field_get:message.CrashPlayerInfo.gold)
  return gold_;
}
 void CrashPlayerInfo::set_gold(::google::protobuf::int32 value) {
  set_has_gold();
  gold_ = value;
  // @@protoc_insertion_point(field_set:message.CrashPlayerInfo.gold)
}

// repeated .message.TaskInfo current_task = 12;
 int CrashPlayerInfo::current_task_size() const {
  return current_task_.size();
}
 void CrashPlayerInfo::clear_current_task() {
  current_task_.Clear();
}
 const ::message::TaskInfo& CrashPlayerInfo::current_task(int index) const {
  // @@protoc_insertion_point(field_get:message.CrashPlayerInfo.current_task)
  return current_task_.Get(index);
}
 ::message::TaskInfo* CrashPlayerInfo::mutable_current_task(int index) {
  // @@protoc_insertion_point(field_mutable:message.CrashPlayerInfo.current_task)
  return current_task_.Mutable(index);
}
 ::message::TaskInfo* CrashPlayerInfo::add_current_task() {
  // @@protoc_insertion_point(field_add:message.CrashPlayerInfo.current_task)
  return current_task_.Add();
}
 const ::google::protobuf::RepeatedPtrField< ::message::TaskInfo >&
CrashPlayerInfo::current_task() const {
  // @@protoc_insertion_point(field_list:message.CrashPlayerInfo.current_task)
  return current_task_;
}
 ::google::protobuf::RepeatedPtrField< ::message::TaskInfo >*
CrashPlayerInfo::mutable_current_task() {
  // @@protoc_insertion_point(field_mutable_list:message.CrashPlayerInfo.current_task)
  return &current_task_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int TaskConditionTypeConfig::kConditionFieldNumber;
const int TaskConditionTypeConfig::kArgu1FieldNumber;
const int TaskConditionTypeConfig::kArgu2FieldNumber;
#endif  // !_MSC_VER

TaskConditionTypeConfig::TaskConditionTypeConfig()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.TaskConditionTypeConfig)
}

void TaskConditionTypeConfig::InitAsDefaultInstance() {
}

TaskConditionTypeConfig::TaskConditionTypeConfig(const TaskConditionTypeConfig& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message.TaskConditionTypeConfig)
}

void TaskConditionTypeConfig::SharedCtor() {
  _cached_size_ = 0;
  condition_ = 0;
  argu_1_ = 0;
  argu_2_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TaskConditionTypeConfig::~TaskConditionTypeConfig() {
  // @@protoc_insertion_point(destructor:message.TaskConditionTypeConfig)
  SharedDtor();
}

void TaskConditionTypeConfig::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TaskConditionTypeConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TaskConditionTypeConfig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TaskConditionTypeConfig_descriptor_;
}

const TaskConditionTypeConfig& TaskConditionTypeConfig::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_2eproto();
  return *default_instance_;
}

TaskConditionTypeConfig* TaskConditionTypeConfig::default_instance_ = NULL;

TaskConditionTypeConfig* TaskConditionTypeConfig::New(::google::protobuf::Arena* arena) const {
  TaskConditionTypeConfig* n = new TaskConditionTypeConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TaskConditionTypeConfig::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<TaskConditionTypeConfig*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(condition_, argu_2_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool TaskConditionTypeConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.TaskConditionTypeConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .message.ConditionType condition = 1 [default = ConditionType_NULL];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::message::ConditionType_IsValid(value)) {
            set_condition(static_cast< ::message::ConditionType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_argu_1;
        break;
      }

      // required int32 argu_1 = 2;
      case 2: {
        if (tag == 16) {
         parse_argu_1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &argu_1_)));
          set_has_argu_1();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_argu_2;
        break;
      }

      // required int32 argu_2 = 3;
      case 3: {
        if (tag == 24) {
         parse_argu_2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &argu_2_)));
          set_has_argu_2();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.TaskConditionTypeConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.TaskConditionTypeConfig)
  return false;
#undef DO_
}

void TaskConditionTypeConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.TaskConditionTypeConfig)
  // required .message.ConditionType condition = 1 [default = ConditionType_NULL];
  if (has_condition()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->condition(), output);
  }

  // required int32 argu_1 = 2;
  if (has_argu_1()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->argu_1(), output);
  }

  // required int32 argu_2 = 3;
  if (has_argu_2()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->argu_2(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.TaskConditionTypeConfig)
}

::google::protobuf::uint8* TaskConditionTypeConfig::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.TaskConditionTypeConfig)
  // required .message.ConditionType condition = 1 [default = ConditionType_NULL];
  if (has_condition()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->condition(), target);
  }

  // required int32 argu_1 = 2;
  if (has_argu_1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->argu_1(), target);
  }

  // required int32 argu_2 = 3;
  if (has_argu_2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->argu_2(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.TaskConditionTypeConfig)
  return target;
}

int TaskConditionTypeConfig::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_condition()) {
    // required .message.ConditionType condition = 1 [default = ConditionType_NULL];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->condition());
  }

  if (has_argu_1()) {
    // required int32 argu_1 = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->argu_1());
  }

  if (has_argu_2()) {
    // required int32 argu_2 = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->argu_2());
  }

  return total_size;
}
int TaskConditionTypeConfig::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required .message.ConditionType condition = 1 [default = ConditionType_NULL];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->condition());

    // required int32 argu_1 = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->argu_1());

    // required int32 argu_2 = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->argu_2());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TaskConditionTypeConfig::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TaskConditionTypeConfig* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TaskConditionTypeConfig*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TaskConditionTypeConfig::MergeFrom(const TaskConditionTypeConfig& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_condition()) {
      set_condition(from.condition());
    }
    if (from.has_argu_1()) {
      set_argu_1(from.argu_1());
    }
    if (from.has_argu_2()) {
      set_argu_2(from.argu_2());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void TaskConditionTypeConfig::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TaskConditionTypeConfig::CopyFrom(const TaskConditionTypeConfig& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TaskConditionTypeConfig::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void TaskConditionTypeConfig::Swap(TaskConditionTypeConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TaskConditionTypeConfig::InternalSwap(TaskConditionTypeConfig* other) {
  std::swap(condition_, other->condition_);
  std::swap(argu_1_, other->argu_1_);
  std::swap(argu_2_, other->argu_2_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TaskConditionTypeConfig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TaskConditionTypeConfig_descriptor_;
  metadata.reflection = TaskConditionTypeConfig_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TaskConditionTypeConfig

// required .message.ConditionType condition = 1 [default = ConditionType_NULL];
 bool TaskConditionTypeConfig::has_condition() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void TaskConditionTypeConfig::set_has_condition() {
  _has_bits_[0] |= 0x00000001u;
}
 void TaskConditionTypeConfig::clear_has_condition() {
  _has_bits_[0] &= ~0x00000001u;
}
 void TaskConditionTypeConfig::clear_condition() {
  condition_ = 0;
  clear_has_condition();
}
 ::message::ConditionType TaskConditionTypeConfig::condition() const {
  // @@protoc_insertion_point(field_get:message.TaskConditionTypeConfig.condition)
  return static_cast< ::message::ConditionType >(condition_);
}
 void TaskConditionTypeConfig::set_condition(::message::ConditionType value) {
  assert(::message::ConditionType_IsValid(value));
  set_has_condition();
  condition_ = value;
  // @@protoc_insertion_point(field_set:message.TaskConditionTypeConfig.condition)
}

// required int32 argu_1 = 2;
 bool TaskConditionTypeConfig::has_argu_1() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
 void TaskConditionTypeConfig::set_has_argu_1() {
  _has_bits_[0] |= 0x00000002u;
}
 void TaskConditionTypeConfig::clear_has_argu_1() {
  _has_bits_[0] &= ~0x00000002u;
}
 void TaskConditionTypeConfig::clear_argu_1() {
  argu_1_ = 0;
  clear_has_argu_1();
}
 ::google::protobuf::int32 TaskConditionTypeConfig::argu_1() const {
  // @@protoc_insertion_point(field_get:message.TaskConditionTypeConfig.argu_1)
  return argu_1_;
}
 void TaskConditionTypeConfig::set_argu_1(::google::protobuf::int32 value) {
  set_has_argu_1();
  argu_1_ = value;
  // @@protoc_insertion_point(field_set:message.TaskConditionTypeConfig.argu_1)
}

// required int32 argu_2 = 3;
 bool TaskConditionTypeConfig::has_argu_2() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
 void TaskConditionTypeConfig::set_has_argu_2() {
  _has_bits_[0] |= 0x00000004u;
}
 void TaskConditionTypeConfig::clear_has_argu_2() {
  _has_bits_[0] &= ~0x00000004u;
}
 void TaskConditionTypeConfig::clear_argu_2() {
  argu_2_ = 0;
  clear_has_argu_2();
}
 ::google::protobuf::int32 TaskConditionTypeConfig::argu_2() const {
  // @@protoc_insertion_point(field_get:message.TaskConditionTypeConfig.argu_2)
  return argu_2_;
}
 void TaskConditionTypeConfig::set_argu_2(::google::protobuf::int32 value) {
  set_has_argu_2();
  argu_2_ = value;
  // @@protoc_insertion_point(field_set:message.TaskConditionTypeConfig.argu_2)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int TaskRewardConfig::kResourceTypeFieldNumber;
const int TaskRewardConfig::kCountFieldNumber;
#endif  // !_MSC_VER

TaskRewardConfig::TaskRewardConfig()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.TaskRewardConfig)
}

void TaskRewardConfig::InitAsDefaultInstance() {
}

TaskRewardConfig::TaskRewardConfig(const TaskRewardConfig& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message.TaskRewardConfig)
}

void TaskRewardConfig::SharedCtor() {
  _cached_size_ = 0;
  resource_type_ = 0;
  count_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TaskRewardConfig::~TaskRewardConfig() {
  // @@protoc_insertion_point(destructor:message.TaskRewardConfig)
  SharedDtor();
}

void TaskRewardConfig::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TaskRewardConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TaskRewardConfig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TaskRewardConfig_descriptor_;
}

const TaskRewardConfig& TaskRewardConfig::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_2eproto();
  return *default_instance_;
}

TaskRewardConfig* TaskRewardConfig::default_instance_ = NULL;

TaskRewardConfig* TaskRewardConfig::New(::google::protobuf::Arena* arena) const {
  TaskRewardConfig* n = new TaskRewardConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TaskRewardConfig::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<TaskRewardConfig*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(resource_type_, count_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool TaskRewardConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.TaskRewardConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .message.ResourceType resource_type = 1 [default = ResourceType_NULL];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::message::ResourceType_IsValid(value)) {
            set_resource_type(static_cast< ::message::ResourceType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_count;
        break;
      }

      // required int32 count = 2;
      case 2: {
        if (tag == 16) {
         parse_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &count_)));
          set_has_count();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.TaskRewardConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.TaskRewardConfig)
  return false;
#undef DO_
}

void TaskRewardConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.TaskRewardConfig)
  // required .message.ResourceType resource_type = 1 [default = ResourceType_NULL];
  if (has_resource_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->resource_type(), output);
  }

  // required int32 count = 2;
  if (has_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->count(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.TaskRewardConfig)
}

::google::protobuf::uint8* TaskRewardConfig::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.TaskRewardConfig)
  // required .message.ResourceType resource_type = 1 [default = ResourceType_NULL];
  if (has_resource_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->resource_type(), target);
  }

  // required int32 count = 2;
  if (has_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->count(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.TaskRewardConfig)
  return target;
}

int TaskRewardConfig::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_resource_type()) {
    // required .message.ResourceType resource_type = 1 [default = ResourceType_NULL];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->resource_type());
  }

  if (has_count()) {
    // required int32 count = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->count());
  }

  return total_size;
}
int TaskRewardConfig::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .message.ResourceType resource_type = 1 [default = ResourceType_NULL];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->resource_type());

    // required int32 count = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->count());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TaskRewardConfig::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TaskRewardConfig* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TaskRewardConfig*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TaskRewardConfig::MergeFrom(const TaskRewardConfig& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_resource_type()) {
      set_resource_type(from.resource_type());
    }
    if (from.has_count()) {
      set_count(from.count());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void TaskRewardConfig::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TaskRewardConfig::CopyFrom(const TaskRewardConfig& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TaskRewardConfig::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void TaskRewardConfig::Swap(TaskRewardConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TaskRewardConfig::InternalSwap(TaskRewardConfig* other) {
  std::swap(resource_type_, other->resource_type_);
  std::swap(count_, other->count_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TaskRewardConfig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TaskRewardConfig_descriptor_;
  metadata.reflection = TaskRewardConfig_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TaskRewardConfig

// required .message.ResourceType resource_type = 1 [default = ResourceType_NULL];
 bool TaskRewardConfig::has_resource_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void TaskRewardConfig::set_has_resource_type() {
  _has_bits_[0] |= 0x00000001u;
}
 void TaskRewardConfig::clear_has_resource_type() {
  _has_bits_[0] &= ~0x00000001u;
}
 void TaskRewardConfig::clear_resource_type() {
  resource_type_ = 0;
  clear_has_resource_type();
}
 ::message::ResourceType TaskRewardConfig::resource_type() const {
  // @@protoc_insertion_point(field_get:message.TaskRewardConfig.resource_type)
  return static_cast< ::message::ResourceType >(resource_type_);
}
 void TaskRewardConfig::set_resource_type(::message::ResourceType value) {
  assert(::message::ResourceType_IsValid(value));
  set_has_resource_type();
  resource_type_ = value;
  // @@protoc_insertion_point(field_set:message.TaskRewardConfig.resource_type)
}

// required int32 count = 2;
 bool TaskRewardConfig::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
 void TaskRewardConfig::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
 void TaskRewardConfig::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
 void TaskRewardConfig::clear_count() {
  count_ = 0;
  clear_has_count();
}
 ::google::protobuf::int32 TaskRewardConfig::count() const {
  // @@protoc_insertion_point(field_get:message.TaskRewardConfig.count)
  return count_;
}
 void TaskRewardConfig::set_count(::google::protobuf::int32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:message.TaskRewardConfig.count)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int TaskInfoConfig::kTaskIdFieldNumber;
const int TaskInfoConfig::kNameFieldNumber;
const int TaskInfoConfig::kDescribeFieldNumber;
const int TaskInfoConfig::kConditionsFieldNumber;
const int TaskInfoConfig::kRewardsFieldNumber;
const int TaskInfoConfig::kRequiredPassChapterIdFieldNumber;
const int TaskInfoConfig::kRequiredPassSectionIdFieldNumber;
const int TaskInfoConfig::kRequiredCompleteTaskCountFieldNumber;
#endif  // !_MSC_VER

TaskInfoConfig::TaskInfoConfig()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.TaskInfoConfig)
}

void TaskInfoConfig::InitAsDefaultInstance() {
}

TaskInfoConfig::TaskInfoConfig(const TaskInfoConfig& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message.TaskInfoConfig)
}

void TaskInfoConfig::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  task_id_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  describe_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  required_pass_chapter_id_ = 0;
  required_pass_section_id_ = 0;
  required_complete_task_count_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TaskInfoConfig::~TaskInfoConfig() {
  // @@protoc_insertion_point(destructor:message.TaskInfoConfig)
  SharedDtor();
}

void TaskInfoConfig::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  describe_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void TaskInfoConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TaskInfoConfig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TaskInfoConfig_descriptor_;
}

const TaskInfoConfig& TaskInfoConfig::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_2eproto();
  return *default_instance_;
}

TaskInfoConfig* TaskInfoConfig::default_instance_ = NULL;

TaskInfoConfig* TaskInfoConfig::New(::google::protobuf::Arena* arena) const {
  TaskInfoConfig* n = new TaskInfoConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TaskInfoConfig::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<TaskInfoConfig*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 231) {
    ZR_(task_id_, required_pass_chapter_id_);
    ZR_(required_pass_section_id_, required_complete_task_count_);
    if (has_name()) {
      name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_describe()) {
      describe_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  conditions_.Clear();
  rewards_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool TaskInfoConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.TaskInfoConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 task_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &task_id_)));
          set_has_task_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // required string name = 2;
      case 2: {
        if (tag == 18) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "message.TaskInfoConfig.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_describe;
        break;
      }

      // required string describe = 3;
      case 3: {
        if (tag == 26) {
         parse_describe:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_describe()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->describe().data(), this->describe().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "message.TaskInfoConfig.describe");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_conditions;
        break;
      }

      // repeated .message.TaskConditionTypeConfig conditions = 4;
      case 4: {
        if (tag == 34) {
         parse_conditions:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_conditions()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_conditions;
        if (input->ExpectTag(42)) goto parse_rewards;
        break;
      }

      // repeated .message.TaskRewardConfig rewards = 5;
      case 5: {
        if (tag == 42) {
         parse_rewards:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rewards()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_rewards;
        if (input->ExpectTag(48)) goto parse_required_pass_chapter_id;
        break;
      }

      // required int32 required_pass_chapter_id = 6;
      case 6: {
        if (tag == 48) {
         parse_required_pass_chapter_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &required_pass_chapter_id_)));
          set_has_required_pass_chapter_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_required_pass_section_id;
        break;
      }

      // required int32 required_pass_section_id = 7;
      case 7: {
        if (tag == 56) {
         parse_required_pass_section_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &required_pass_section_id_)));
          set_has_required_pass_section_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_required_complete_task_count;
        break;
      }

      // required int32 required_complete_task_count = 8;
      case 8: {
        if (tag == 64) {
         parse_required_complete_task_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &required_complete_task_count_)));
          set_has_required_complete_task_count();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.TaskInfoConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.TaskInfoConfig)
  return false;
#undef DO_
}

void TaskInfoConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.TaskInfoConfig)
  // required int32 task_id = 1;
  if (has_task_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->task_id(), output);
  }

  // required string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "message.TaskInfoConfig.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // required string describe = 3;
  if (has_describe()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->describe().data(), this->describe().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "message.TaskInfoConfig.describe");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->describe(), output);
  }

  // repeated .message.TaskConditionTypeConfig conditions = 4;
  for (unsigned int i = 0, n = this->conditions_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->conditions(i), output);
  }

  // repeated .message.TaskRewardConfig rewards = 5;
  for (unsigned int i = 0, n = this->rewards_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->rewards(i), output);
  }

  // required int32 required_pass_chapter_id = 6;
  if (has_required_pass_chapter_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->required_pass_chapter_id(), output);
  }

  // required int32 required_pass_section_id = 7;
  if (has_required_pass_section_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->required_pass_section_id(), output);
  }

  // required int32 required_complete_task_count = 8;
  if (has_required_complete_task_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->required_complete_task_count(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.TaskInfoConfig)
}

::google::protobuf::uint8* TaskInfoConfig::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.TaskInfoConfig)
  // required int32 task_id = 1;
  if (has_task_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->task_id(), target);
  }

  // required string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "message.TaskInfoConfig.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // required string describe = 3;
  if (has_describe()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->describe().data(), this->describe().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "message.TaskInfoConfig.describe");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->describe(), target);
  }

  // repeated .message.TaskConditionTypeConfig conditions = 4;
  for (unsigned int i = 0, n = this->conditions_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->conditions(i), target);
  }

  // repeated .message.TaskRewardConfig rewards = 5;
  for (unsigned int i = 0, n = this->rewards_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->rewards(i), target);
  }

  // required int32 required_pass_chapter_id = 6;
  if (has_required_pass_chapter_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->required_pass_chapter_id(), target);
  }

  // required int32 required_pass_section_id = 7;
  if (has_required_pass_section_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->required_pass_section_id(), target);
  }

  // required int32 required_complete_task_count = 8;
  if (has_required_complete_task_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->required_complete_task_count(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.TaskInfoConfig)
  return target;
}

int TaskInfoConfig::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_task_id()) {
    // required int32 task_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->task_id());
  }

  if (has_name()) {
    // required string name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  if (has_describe()) {
    // required string describe = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->describe());
  }

  if (has_required_pass_chapter_id()) {
    // required int32 required_pass_chapter_id = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->required_pass_chapter_id());
  }

  if (has_required_pass_section_id()) {
    // required int32 required_pass_section_id = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->required_pass_section_id());
  }

  if (has_required_complete_task_count()) {
    // required int32 required_complete_task_count = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->required_complete_task_count());
  }

  return total_size;
}
int TaskInfoConfig::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x000000e7) ^ 0x000000e7) == 0) {  // All required fields are present.
    // required int32 task_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->task_id());

    // required string name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

    // required string describe = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->describe());

    // required int32 required_pass_chapter_id = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->required_pass_chapter_id());

    // required int32 required_pass_section_id = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->required_pass_section_id());

    // required int32 required_complete_task_count = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->required_complete_task_count());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .message.TaskConditionTypeConfig conditions = 4;
  total_size += 1 * this->conditions_size();
  for (int i = 0; i < this->conditions_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->conditions(i));
  }

  // repeated .message.TaskRewardConfig rewards = 5;
  total_size += 1 * this->rewards_size();
  for (int i = 0; i < this->rewards_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rewards(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TaskInfoConfig::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TaskInfoConfig* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TaskInfoConfig*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TaskInfoConfig::MergeFrom(const TaskInfoConfig& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  conditions_.MergeFrom(from.conditions_);
  rewards_.MergeFrom(from.rewards_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_task_id()) {
      set_task_id(from.task_id());
    }
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (from.has_describe()) {
      set_has_describe();
      describe_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.describe_);
    }
    if (from.has_required_pass_chapter_id()) {
      set_required_pass_chapter_id(from.required_pass_chapter_id());
    }
    if (from.has_required_pass_section_id()) {
      set_required_pass_section_id(from.required_pass_section_id());
    }
    if (from.has_required_complete_task_count()) {
      set_required_complete_task_count(from.required_complete_task_count());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void TaskInfoConfig::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TaskInfoConfig::CopyFrom(const TaskInfoConfig& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TaskInfoConfig::IsInitialized() const {
  if ((_has_bits_[0] & 0x000000e7) != 0x000000e7) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->conditions())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->rewards())) return false;
  return true;
}

void TaskInfoConfig::Swap(TaskInfoConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TaskInfoConfig::InternalSwap(TaskInfoConfig* other) {
  std::swap(task_id_, other->task_id_);
  name_.Swap(&other->name_);
  describe_.Swap(&other->describe_);
  conditions_.UnsafeArenaSwap(&other->conditions_);
  rewards_.UnsafeArenaSwap(&other->rewards_);
  std::swap(required_pass_chapter_id_, other->required_pass_chapter_id_);
  std::swap(required_pass_section_id_, other->required_pass_section_id_);
  std::swap(required_complete_task_count_, other->required_complete_task_count_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TaskInfoConfig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TaskInfoConfig_descriptor_;
  metadata.reflection = TaskInfoConfig_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TaskInfoConfig

// required int32 task_id = 1;
 bool TaskInfoConfig::has_task_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void TaskInfoConfig::set_has_task_id() {
  _has_bits_[0] |= 0x00000001u;
}
 void TaskInfoConfig::clear_has_task_id() {
  _has_bits_[0] &= ~0x00000001u;
}
 void TaskInfoConfig::clear_task_id() {
  task_id_ = 0;
  clear_has_task_id();
}
 ::google::protobuf::int32 TaskInfoConfig::task_id() const {
  // @@protoc_insertion_point(field_get:message.TaskInfoConfig.task_id)
  return task_id_;
}
 void TaskInfoConfig::set_task_id(::google::protobuf::int32 value) {
  set_has_task_id();
  task_id_ = value;
  // @@protoc_insertion_point(field_set:message.TaskInfoConfig.task_id)
}

// required string name = 2;
 bool TaskInfoConfig::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
 void TaskInfoConfig::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
 void TaskInfoConfig::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
 void TaskInfoConfig::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
 const ::std::string& TaskInfoConfig::name() const {
  // @@protoc_insertion_point(field_get:message.TaskInfoConfig.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TaskInfoConfig::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message.TaskInfoConfig.name)
}
 void TaskInfoConfig::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.TaskInfoConfig.name)
}
 void TaskInfoConfig::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.TaskInfoConfig.name)
}
 ::std::string* TaskInfoConfig::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:message.TaskInfoConfig.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* TaskInfoConfig::release_name() {
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TaskInfoConfig::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:message.TaskInfoConfig.name)
}

// required string describe = 3;
 bool TaskInfoConfig::has_describe() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
 void TaskInfoConfig::set_has_describe() {
  _has_bits_[0] |= 0x00000004u;
}
 void TaskInfoConfig::clear_has_describe() {
  _has_bits_[0] &= ~0x00000004u;
}
 void TaskInfoConfig::clear_describe() {
  describe_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_describe();
}
 const ::std::string& TaskInfoConfig::describe() const {
  // @@protoc_insertion_point(field_get:message.TaskInfoConfig.describe)
  return describe_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TaskInfoConfig::set_describe(const ::std::string& value) {
  set_has_describe();
  describe_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message.TaskInfoConfig.describe)
}
 void TaskInfoConfig::set_describe(const char* value) {
  set_has_describe();
  describe_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.TaskInfoConfig.describe)
}
 void TaskInfoConfig::set_describe(const char* value, size_t size) {
  set_has_describe();
  describe_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.TaskInfoConfig.describe)
}
 ::std::string* TaskInfoConfig::mutable_describe() {
  set_has_describe();
  // @@protoc_insertion_point(field_mutable:message.TaskInfoConfig.describe)
  return describe_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* TaskInfoConfig::release_describe() {
  clear_has_describe();
  return describe_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TaskInfoConfig::set_allocated_describe(::std::string* describe) {
  if (describe != NULL) {
    set_has_describe();
  } else {
    clear_has_describe();
  }
  describe_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), describe);
  // @@protoc_insertion_point(field_set_allocated:message.TaskInfoConfig.describe)
}

// repeated .message.TaskConditionTypeConfig conditions = 4;
 int TaskInfoConfig::conditions_size() const {
  return conditions_.size();
}
 void TaskInfoConfig::clear_conditions() {
  conditions_.Clear();
}
 const ::message::TaskConditionTypeConfig& TaskInfoConfig::conditions(int index) const {
  // @@protoc_insertion_point(field_get:message.TaskInfoConfig.conditions)
  return conditions_.Get(index);
}
 ::message::TaskConditionTypeConfig* TaskInfoConfig::mutable_conditions(int index) {
  // @@protoc_insertion_point(field_mutable:message.TaskInfoConfig.conditions)
  return conditions_.Mutable(index);
}
 ::message::TaskConditionTypeConfig* TaskInfoConfig::add_conditions() {
  // @@protoc_insertion_point(field_add:message.TaskInfoConfig.conditions)
  return conditions_.Add();
}
 const ::google::protobuf::RepeatedPtrField< ::message::TaskConditionTypeConfig >&
TaskInfoConfig::conditions() const {
  // @@protoc_insertion_point(field_list:message.TaskInfoConfig.conditions)
  return conditions_;
}
 ::google::protobuf::RepeatedPtrField< ::message::TaskConditionTypeConfig >*
TaskInfoConfig::mutable_conditions() {
  // @@protoc_insertion_point(field_mutable_list:message.TaskInfoConfig.conditions)
  return &conditions_;
}

// repeated .message.TaskRewardConfig rewards = 5;
 int TaskInfoConfig::rewards_size() const {
  return rewards_.size();
}
 void TaskInfoConfig::clear_rewards() {
  rewards_.Clear();
}
 const ::message::TaskRewardConfig& TaskInfoConfig::rewards(int index) const {
  // @@protoc_insertion_point(field_get:message.TaskInfoConfig.rewards)
  return rewards_.Get(index);
}
 ::message::TaskRewardConfig* TaskInfoConfig::mutable_rewards(int index) {
  // @@protoc_insertion_point(field_mutable:message.TaskInfoConfig.rewards)
  return rewards_.Mutable(index);
}
 ::message::TaskRewardConfig* TaskInfoConfig::add_rewards() {
  // @@protoc_insertion_point(field_add:message.TaskInfoConfig.rewards)
  return rewards_.Add();
}
 const ::google::protobuf::RepeatedPtrField< ::message::TaskRewardConfig >&
TaskInfoConfig::rewards() const {
  // @@protoc_insertion_point(field_list:message.TaskInfoConfig.rewards)
  return rewards_;
}
 ::google::protobuf::RepeatedPtrField< ::message::TaskRewardConfig >*
TaskInfoConfig::mutable_rewards() {
  // @@protoc_insertion_point(field_mutable_list:message.TaskInfoConfig.rewards)
  return &rewards_;
}

// required int32 required_pass_chapter_id = 6;
 bool TaskInfoConfig::has_required_pass_chapter_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
 void TaskInfoConfig::set_has_required_pass_chapter_id() {
  _has_bits_[0] |= 0x00000020u;
}
 void TaskInfoConfig::clear_has_required_pass_chapter_id() {
  _has_bits_[0] &= ~0x00000020u;
}
 void TaskInfoConfig::clear_required_pass_chapter_id() {
  required_pass_chapter_id_ = 0;
  clear_has_required_pass_chapter_id();
}
 ::google::protobuf::int32 TaskInfoConfig::required_pass_chapter_id() const {
  // @@protoc_insertion_point(field_get:message.TaskInfoConfig.required_pass_chapter_id)
  return required_pass_chapter_id_;
}
 void TaskInfoConfig::set_required_pass_chapter_id(::google::protobuf::int32 value) {
  set_has_required_pass_chapter_id();
  required_pass_chapter_id_ = value;
  // @@protoc_insertion_point(field_set:message.TaskInfoConfig.required_pass_chapter_id)
}

// required int32 required_pass_section_id = 7;
 bool TaskInfoConfig::has_required_pass_section_id() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
 void TaskInfoConfig::set_has_required_pass_section_id() {
  _has_bits_[0] |= 0x00000040u;
}
 void TaskInfoConfig::clear_has_required_pass_section_id() {
  _has_bits_[0] &= ~0x00000040u;
}
 void TaskInfoConfig::clear_required_pass_section_id() {
  required_pass_section_id_ = 0;
  clear_has_required_pass_section_id();
}
 ::google::protobuf::int32 TaskInfoConfig::required_pass_section_id() const {
  // @@protoc_insertion_point(field_get:message.TaskInfoConfig.required_pass_section_id)
  return required_pass_section_id_;
}
 void TaskInfoConfig::set_required_pass_section_id(::google::protobuf::int32 value) {
  set_has_required_pass_section_id();
  required_pass_section_id_ = value;
  // @@protoc_insertion_point(field_set:message.TaskInfoConfig.required_pass_section_id)
}

// required int32 required_complete_task_count = 8;
 bool TaskInfoConfig::has_required_complete_task_count() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
 void TaskInfoConfig::set_has_required_complete_task_count() {
  _has_bits_[0] |= 0x00000080u;
}
 void TaskInfoConfig::clear_has_required_complete_task_count() {
  _has_bits_[0] &= ~0x00000080u;
}
 void TaskInfoConfig::clear_required_complete_task_count() {
  required_complete_task_count_ = 0;
  clear_has_required_complete_task_count();
}
 ::google::protobuf::int32 TaskInfoConfig::required_complete_task_count() const {
  // @@protoc_insertion_point(field_get:message.TaskInfoConfig.required_complete_task_count)
  return required_complete_task_count_;
}
 void TaskInfoConfig::set_required_complete_task_count(::google::protobuf::int32 value) {
  set_has_required_complete_task_count();
  required_complete_task_count_ = value;
  // @@protoc_insertion_point(field_set:message.TaskInfoConfig.required_complete_task_count)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace message

// @@protoc_insertion_point(global_scope)
