// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: msg_game_db.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "msg_game_db.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace message {

namespace {

const ::google::protobuf::Descriptor* ApplyCharacterDataReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ApplyCharacterDataReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* NeedCreateCharacter_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NeedCreateCharacter_reflection_ = NULL;
const ::google::protobuf::Descriptor* CharacterDataACK_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CharacterDataACK_reflection_ = NULL;
const ::google::protobuf::Descriptor* ReqSaveCharacterData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReqSaveCharacterData_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_msg_5fgame_5fdb_2eproto() {
  protobuf_AddDesc_msg_5fgame_5fdb_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "msg_game_db.proto");
  GOOGLE_CHECK(file != NULL);
  ApplyCharacterDataReq_descriptor_ = file->message_type(0);
  static const int ApplyCharacterDataReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ApplyCharacterDataReq, account_),
  };
  ApplyCharacterDataReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ApplyCharacterDataReq_descriptor_,
      ApplyCharacterDataReq::default_instance_,
      ApplyCharacterDataReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ApplyCharacterDataReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(ApplyCharacterDataReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ApplyCharacterDataReq, _internal_metadata_),
      -1);
  NeedCreateCharacter_descriptor_ = file->message_type(1);
  static const int NeedCreateCharacter_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NeedCreateCharacter, account_),
  };
  NeedCreateCharacter_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      NeedCreateCharacter_descriptor_,
      NeedCreateCharacter::default_instance_,
      NeedCreateCharacter_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NeedCreateCharacter, _has_bits_[0]),
      -1,
      -1,
      sizeof(NeedCreateCharacter),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NeedCreateCharacter, _internal_metadata_),
      -1);
  CharacterDataACK_descriptor_ = file->message_type(2);
  static const int CharacterDataACK_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CharacterDataACK, data_),
  };
  CharacterDataACK_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CharacterDataACK_descriptor_,
      CharacterDataACK::default_instance_,
      CharacterDataACK_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CharacterDataACK, _has_bits_[0]),
      -1,
      -1,
      sizeof(CharacterDataACK),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CharacterDataACK, _internal_metadata_),
      -1);
  ReqSaveCharacterData_descriptor_ = file->message_type(3);
  static const int ReqSaveCharacterData_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqSaveCharacterData, data_),
  };
  ReqSaveCharacterData_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ReqSaveCharacterData_descriptor_,
      ReqSaveCharacterData::default_instance_,
      ReqSaveCharacterData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqSaveCharacterData, _has_bits_[0]),
      -1,
      -1,
      sizeof(ReqSaveCharacterData),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqSaveCharacterData, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_msg_5fgame_5fdb_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ApplyCharacterDataReq_descriptor_, &ApplyCharacterDataReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      NeedCreateCharacter_descriptor_, &NeedCreateCharacter::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CharacterDataACK_descriptor_, &CharacterDataACK::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ReqSaveCharacterData_descriptor_, &ReqSaveCharacterData::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_msg_5fgame_5fdb_2eproto() {
  delete ApplyCharacterDataReq::default_instance_;
  delete ApplyCharacterDataReq_reflection_;
  delete NeedCreateCharacter::default_instance_;
  delete NeedCreateCharacter_reflection_;
  delete CharacterDataACK::default_instance_;
  delete CharacterDataACK_reflection_;
  delete ReqSaveCharacterData::default_instance_;
  delete ReqSaveCharacterData_reflection_;
}

void protobuf_AddDesc_msg_5fgame_5fdb_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::message::protobuf_AddDesc_common_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\021msg_game_db.proto\022\007message\032\014common.pro"
    "to\"(\n\025ApplyCharacterDataReq\022\017\n\007account\030\001"
    " \002(\004\"&\n\023NeedCreateCharacter\022\017\n\007account\030\001"
    " \002(\004\":\n\020CharacterDataACK\022&\n\004data\030\001 \002(\0132\030"
    ".message.CrashPlayerInfo\">\n\024ReqSaveChara"
    "cterData\022&\n\004data\030\001 \002(\0132\030.message.CrashPl"
    "ayerInfo", 248);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "msg_game_db.proto", &protobuf_RegisterTypes);
  ApplyCharacterDataReq::default_instance_ = new ApplyCharacterDataReq();
  NeedCreateCharacter::default_instance_ = new NeedCreateCharacter();
  CharacterDataACK::default_instance_ = new CharacterDataACK();
  ReqSaveCharacterData::default_instance_ = new ReqSaveCharacterData();
  ApplyCharacterDataReq::default_instance_->InitAsDefaultInstance();
  NeedCreateCharacter::default_instance_->InitAsDefaultInstance();
  CharacterDataACK::default_instance_->InitAsDefaultInstance();
  ReqSaveCharacterData::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_msg_5fgame_5fdb_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_msg_5fgame_5fdb_2eproto {
  StaticDescriptorInitializer_msg_5fgame_5fdb_2eproto() {
    protobuf_AddDesc_msg_5fgame_5fdb_2eproto();
  }
} static_descriptor_initializer_msg_5fgame_5fdb_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#ifndef _MSC_VER
const int ApplyCharacterDataReq::kAccountFieldNumber;
#endif  // !_MSC_VER

ApplyCharacterDataReq::ApplyCharacterDataReq()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.ApplyCharacterDataReq)
}

void ApplyCharacterDataReq::InitAsDefaultInstance() {
}

ApplyCharacterDataReq::ApplyCharacterDataReq(const ApplyCharacterDataReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message.ApplyCharacterDataReq)
}

void ApplyCharacterDataReq::SharedCtor() {
  _cached_size_ = 0;
  account_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ApplyCharacterDataReq::~ApplyCharacterDataReq() {
  // @@protoc_insertion_point(destructor:message.ApplyCharacterDataReq)
  SharedDtor();
}

void ApplyCharacterDataReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ApplyCharacterDataReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ApplyCharacterDataReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ApplyCharacterDataReq_descriptor_;
}

const ApplyCharacterDataReq& ApplyCharacterDataReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fgame_5fdb_2eproto();
  return *default_instance_;
}

ApplyCharacterDataReq* ApplyCharacterDataReq::default_instance_ = NULL;

ApplyCharacterDataReq* ApplyCharacterDataReq::New(::google::protobuf::Arena* arena) const {
  ApplyCharacterDataReq* n = new ApplyCharacterDataReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ApplyCharacterDataReq::Clear() {
  account_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ApplyCharacterDataReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.ApplyCharacterDataReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 account = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &account_)));
          set_has_account();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.ApplyCharacterDataReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.ApplyCharacterDataReq)
  return false;
#undef DO_
}

void ApplyCharacterDataReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.ApplyCharacterDataReq)
  // required uint64 account = 1;
  if (has_account()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->account(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.ApplyCharacterDataReq)
}

::google::protobuf::uint8* ApplyCharacterDataReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.ApplyCharacterDataReq)
  // required uint64 account = 1;
  if (has_account()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->account(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.ApplyCharacterDataReq)
  return target;
}

int ApplyCharacterDataReq::ByteSize() const {
  int total_size = 0;

  // required uint64 account = 1;
  if (has_account()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->account());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ApplyCharacterDataReq::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ApplyCharacterDataReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ApplyCharacterDataReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ApplyCharacterDataReq::MergeFrom(const ApplyCharacterDataReq& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_account()) {
      set_account(from.account());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ApplyCharacterDataReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ApplyCharacterDataReq::CopyFrom(const ApplyCharacterDataReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ApplyCharacterDataReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void ApplyCharacterDataReq::Swap(ApplyCharacterDataReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ApplyCharacterDataReq::InternalSwap(ApplyCharacterDataReq* other) {
  std::swap(account_, other->account_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ApplyCharacterDataReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ApplyCharacterDataReq_descriptor_;
  metadata.reflection = ApplyCharacterDataReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ApplyCharacterDataReq

// required uint64 account = 1;
 bool ApplyCharacterDataReq::has_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void ApplyCharacterDataReq::set_has_account() {
  _has_bits_[0] |= 0x00000001u;
}
 void ApplyCharacterDataReq::clear_has_account() {
  _has_bits_[0] &= ~0x00000001u;
}
 void ApplyCharacterDataReq::clear_account() {
  account_ = GOOGLE_ULONGLONG(0);
  clear_has_account();
}
 ::google::protobuf::uint64 ApplyCharacterDataReq::account() const {
  // @@protoc_insertion_point(field_get:message.ApplyCharacterDataReq.account)
  return account_;
}
 void ApplyCharacterDataReq::set_account(::google::protobuf::uint64 value) {
  set_has_account();
  account_ = value;
  // @@protoc_insertion_point(field_set:message.ApplyCharacterDataReq.account)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int NeedCreateCharacter::kAccountFieldNumber;
#endif  // !_MSC_VER

NeedCreateCharacter::NeedCreateCharacter()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.NeedCreateCharacter)
}

void NeedCreateCharacter::InitAsDefaultInstance() {
}

NeedCreateCharacter::NeedCreateCharacter(const NeedCreateCharacter& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message.NeedCreateCharacter)
}

void NeedCreateCharacter::SharedCtor() {
  _cached_size_ = 0;
  account_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NeedCreateCharacter::~NeedCreateCharacter() {
  // @@protoc_insertion_point(destructor:message.NeedCreateCharacter)
  SharedDtor();
}

void NeedCreateCharacter::SharedDtor() {
  if (this != default_instance_) {
  }
}

void NeedCreateCharacter::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NeedCreateCharacter::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NeedCreateCharacter_descriptor_;
}

const NeedCreateCharacter& NeedCreateCharacter::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fgame_5fdb_2eproto();
  return *default_instance_;
}

NeedCreateCharacter* NeedCreateCharacter::default_instance_ = NULL;

NeedCreateCharacter* NeedCreateCharacter::New(::google::protobuf::Arena* arena) const {
  NeedCreateCharacter* n = new NeedCreateCharacter;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NeedCreateCharacter::Clear() {
  account_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool NeedCreateCharacter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.NeedCreateCharacter)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 account = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &account_)));
          set_has_account();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.NeedCreateCharacter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.NeedCreateCharacter)
  return false;
#undef DO_
}

void NeedCreateCharacter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.NeedCreateCharacter)
  // required uint64 account = 1;
  if (has_account()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->account(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.NeedCreateCharacter)
}

::google::protobuf::uint8* NeedCreateCharacter::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.NeedCreateCharacter)
  // required uint64 account = 1;
  if (has_account()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->account(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.NeedCreateCharacter)
  return target;
}

int NeedCreateCharacter::ByteSize() const {
  int total_size = 0;

  // required uint64 account = 1;
  if (has_account()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->account());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NeedCreateCharacter::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const NeedCreateCharacter* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const NeedCreateCharacter*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NeedCreateCharacter::MergeFrom(const NeedCreateCharacter& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_account()) {
      set_account(from.account());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void NeedCreateCharacter::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NeedCreateCharacter::CopyFrom(const NeedCreateCharacter& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NeedCreateCharacter::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void NeedCreateCharacter::Swap(NeedCreateCharacter* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NeedCreateCharacter::InternalSwap(NeedCreateCharacter* other) {
  std::swap(account_, other->account_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NeedCreateCharacter::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NeedCreateCharacter_descriptor_;
  metadata.reflection = NeedCreateCharacter_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// NeedCreateCharacter

// required uint64 account = 1;
 bool NeedCreateCharacter::has_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void NeedCreateCharacter::set_has_account() {
  _has_bits_[0] |= 0x00000001u;
}
 void NeedCreateCharacter::clear_has_account() {
  _has_bits_[0] &= ~0x00000001u;
}
 void NeedCreateCharacter::clear_account() {
  account_ = GOOGLE_ULONGLONG(0);
  clear_has_account();
}
 ::google::protobuf::uint64 NeedCreateCharacter::account() const {
  // @@protoc_insertion_point(field_get:message.NeedCreateCharacter.account)
  return account_;
}
 void NeedCreateCharacter::set_account(::google::protobuf::uint64 value) {
  set_has_account();
  account_ = value;
  // @@protoc_insertion_point(field_set:message.NeedCreateCharacter.account)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int CharacterDataACK::kDataFieldNumber;
#endif  // !_MSC_VER

CharacterDataACK::CharacterDataACK()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.CharacterDataACK)
}

void CharacterDataACK::InitAsDefaultInstance() {
  data_ = const_cast< ::message::CrashPlayerInfo*>(&::message::CrashPlayerInfo::default_instance());
}

CharacterDataACK::CharacterDataACK(const CharacterDataACK& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message.CharacterDataACK)
}

void CharacterDataACK::SharedCtor() {
  _cached_size_ = 0;
  data_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CharacterDataACK::~CharacterDataACK() {
  // @@protoc_insertion_point(destructor:message.CharacterDataACK)
  SharedDtor();
}

void CharacterDataACK::SharedDtor() {
  if (this != default_instance_) {
    delete data_;
  }
}

void CharacterDataACK::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CharacterDataACK::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CharacterDataACK_descriptor_;
}

const CharacterDataACK& CharacterDataACK::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fgame_5fdb_2eproto();
  return *default_instance_;
}

CharacterDataACK* CharacterDataACK::default_instance_ = NULL;

CharacterDataACK* CharacterDataACK::New(::google::protobuf::Arena* arena) const {
  CharacterDataACK* n = new CharacterDataACK;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CharacterDataACK::Clear() {
  if (has_data()) {
    if (data_ != NULL) data_->::message::CrashPlayerInfo::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CharacterDataACK::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.CharacterDataACK)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .message.CrashPlayerInfo data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.CharacterDataACK)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.CharacterDataACK)
  return false;
#undef DO_
}

void CharacterDataACK::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.CharacterDataACK)
  // required .message.CrashPlayerInfo data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->data_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.CharacterDataACK)
}

::google::protobuf::uint8* CharacterDataACK::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.CharacterDataACK)
  // required .message.CrashPlayerInfo data = 1;
  if (has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, *this->data_, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.CharacterDataACK)
  return target;
}

int CharacterDataACK::ByteSize() const {
  int total_size = 0;

  // required .message.CrashPlayerInfo data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->data_);
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CharacterDataACK::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CharacterDataACK* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CharacterDataACK*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CharacterDataACK::MergeFrom(const CharacterDataACK& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      mutable_data()->::message::CrashPlayerInfo::MergeFrom(from.data());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CharacterDataACK::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CharacterDataACK::CopyFrom(const CharacterDataACK& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CharacterDataACK::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_data()) {
    if (!this->data_->IsInitialized()) return false;
  }
  return true;
}

void CharacterDataACK::Swap(CharacterDataACK* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CharacterDataACK::InternalSwap(CharacterDataACK* other) {
  std::swap(data_, other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CharacterDataACK::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CharacterDataACK_descriptor_;
  metadata.reflection = CharacterDataACK_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CharacterDataACK

// required .message.CrashPlayerInfo data = 1;
 bool CharacterDataACK::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void CharacterDataACK::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
 void CharacterDataACK::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
 void CharacterDataACK::clear_data() {
  if (data_ != NULL) data_->::message::CrashPlayerInfo::Clear();
  clear_has_data();
}
 const ::message::CrashPlayerInfo& CharacterDataACK::data() const {
  // @@protoc_insertion_point(field_get:message.CharacterDataACK.data)
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
 ::message::CrashPlayerInfo* CharacterDataACK::mutable_data() {
  set_has_data();
  if (data_ == NULL) {
    data_ = new ::message::CrashPlayerInfo;
  }
  // @@protoc_insertion_point(field_mutable:message.CharacterDataACK.data)
  return data_;
}
 ::message::CrashPlayerInfo* CharacterDataACK::release_data() {
  clear_has_data();
  ::message::CrashPlayerInfo* temp = data_;
  data_ = NULL;
  return temp;
}
 void CharacterDataACK::set_allocated_data(::message::CrashPlayerInfo* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
  // @@protoc_insertion_point(field_set_allocated:message.CharacterDataACK.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int ReqSaveCharacterData::kDataFieldNumber;
#endif  // !_MSC_VER

ReqSaveCharacterData::ReqSaveCharacterData()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.ReqSaveCharacterData)
}

void ReqSaveCharacterData::InitAsDefaultInstance() {
  data_ = const_cast< ::message::CrashPlayerInfo*>(&::message::CrashPlayerInfo::default_instance());
}

ReqSaveCharacterData::ReqSaveCharacterData(const ReqSaveCharacterData& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message.ReqSaveCharacterData)
}

void ReqSaveCharacterData::SharedCtor() {
  _cached_size_ = 0;
  data_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ReqSaveCharacterData::~ReqSaveCharacterData() {
  // @@protoc_insertion_point(destructor:message.ReqSaveCharacterData)
  SharedDtor();
}

void ReqSaveCharacterData::SharedDtor() {
  if (this != default_instance_) {
    delete data_;
  }
}

void ReqSaveCharacterData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReqSaveCharacterData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReqSaveCharacterData_descriptor_;
}

const ReqSaveCharacterData& ReqSaveCharacterData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fgame_5fdb_2eproto();
  return *default_instance_;
}

ReqSaveCharacterData* ReqSaveCharacterData::default_instance_ = NULL;

ReqSaveCharacterData* ReqSaveCharacterData::New(::google::protobuf::Arena* arena) const {
  ReqSaveCharacterData* n = new ReqSaveCharacterData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReqSaveCharacterData::Clear() {
  if (has_data()) {
    if (data_ != NULL) data_->::message::CrashPlayerInfo::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ReqSaveCharacterData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.ReqSaveCharacterData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .message.CrashPlayerInfo data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.ReqSaveCharacterData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.ReqSaveCharacterData)
  return false;
#undef DO_
}

void ReqSaveCharacterData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.ReqSaveCharacterData)
  // required .message.CrashPlayerInfo data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->data_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.ReqSaveCharacterData)
}

::google::protobuf::uint8* ReqSaveCharacterData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.ReqSaveCharacterData)
  // required .message.CrashPlayerInfo data = 1;
  if (has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, *this->data_, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.ReqSaveCharacterData)
  return target;
}

int ReqSaveCharacterData::ByteSize() const {
  int total_size = 0;

  // required .message.CrashPlayerInfo data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->data_);
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReqSaveCharacterData::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ReqSaveCharacterData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ReqSaveCharacterData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ReqSaveCharacterData::MergeFrom(const ReqSaveCharacterData& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      mutable_data()->::message::CrashPlayerInfo::MergeFrom(from.data());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ReqSaveCharacterData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqSaveCharacterData::CopyFrom(const ReqSaveCharacterData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqSaveCharacterData::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_data()) {
    if (!this->data_->IsInitialized()) return false;
  }
  return true;
}

void ReqSaveCharacterData::Swap(ReqSaveCharacterData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReqSaveCharacterData::InternalSwap(ReqSaveCharacterData* other) {
  std::swap(data_, other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReqSaveCharacterData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReqSaveCharacterData_descriptor_;
  metadata.reflection = ReqSaveCharacterData_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ReqSaveCharacterData

// required .message.CrashPlayerInfo data = 1;
 bool ReqSaveCharacterData::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void ReqSaveCharacterData::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
 void ReqSaveCharacterData::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
 void ReqSaveCharacterData::clear_data() {
  if (data_ != NULL) data_->::message::CrashPlayerInfo::Clear();
  clear_has_data();
}
 const ::message::CrashPlayerInfo& ReqSaveCharacterData::data() const {
  // @@protoc_insertion_point(field_get:message.ReqSaveCharacterData.data)
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
 ::message::CrashPlayerInfo* ReqSaveCharacterData::mutable_data() {
  set_has_data();
  if (data_ == NULL) {
    data_ = new ::message::CrashPlayerInfo;
  }
  // @@protoc_insertion_point(field_mutable:message.ReqSaveCharacterData.data)
  return data_;
}
 ::message::CrashPlayerInfo* ReqSaveCharacterData::release_data() {
  clear_has_data();
  ::message::CrashPlayerInfo* temp = data_;
  data_ = NULL;
  return temp;
}
 void ReqSaveCharacterData::set_allocated_data(::message::CrashPlayerInfo* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
  // @@protoc_insertion_point(field_set_allocated:message.ReqSaveCharacterData.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace message

// @@protoc_insertion_point(global_scope)
