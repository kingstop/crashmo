// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: msg_game_db.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "msg_game_db.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace message {

namespace {

const ::google::protobuf::Descriptor* ApplyCharacterDataReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ApplyCharacterDataReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* NeedCreateCharacter_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NeedCreateCharacter_reflection_ = NULL;
const ::google::protobuf::Descriptor* gs2dbDelOfficileReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  gs2dbDelOfficileReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* gs2dbSaveOfficileMapReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  gs2dbSaveOfficileMapReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* CharacterDataACK_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CharacterDataACK_reflection_ = NULL;
const ::google::protobuf::Descriptor* ReqSaveCharacterData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReqSaveCharacterData_reflection_ = NULL;
const ::google::protobuf::Descriptor* ReqSaveOfficilMap_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReqSaveOfficilMap_reflection_ = NULL;
const ::google::protobuf::Descriptor* ReqSaveOfficilSectionNames_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReqSaveOfficilSectionNames_reflection_ = NULL;
const ::google::protobuf::Descriptor* ReqSaveCharacterDBSql_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReqSaveCharacterDBSql_reflection_ = NULL;
const ::google::protobuf::Descriptor* gs2dbWorldDatabaseSql_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  gs2dbWorldDatabaseSql_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_msg_5fgame_5fdb_2eproto() {
  protobuf_AddDesc_msg_5fgame_5fdb_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "msg_game_db.proto");
  GOOGLE_CHECK(file != NULL);
  ApplyCharacterDataReq_descriptor_ = file->message_type(0);
  static const int ApplyCharacterDataReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ApplyCharacterDataReq, account_),
  };
  ApplyCharacterDataReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ApplyCharacterDataReq_descriptor_,
      ApplyCharacterDataReq::default_instance_,
      ApplyCharacterDataReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ApplyCharacterDataReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(ApplyCharacterDataReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ApplyCharacterDataReq, _internal_metadata_),
      -1);
  NeedCreateCharacter_descriptor_ = file->message_type(1);
  static const int NeedCreateCharacter_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NeedCreateCharacter, account_),
  };
  NeedCreateCharacter_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      NeedCreateCharacter_descriptor_,
      NeedCreateCharacter::default_instance_,
      NeedCreateCharacter_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NeedCreateCharacter, _has_bits_[0]),
      -1,
      -1,
      sizeof(NeedCreateCharacter),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NeedCreateCharacter, _internal_metadata_),
      -1);
  gs2dbDelOfficileReq_descriptor_ = file->message_type(2);
  static const int gs2dbDelOfficileReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(gs2dbDelOfficileReq, section_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(gs2dbDelOfficileReq, number_),
  };
  gs2dbDelOfficileReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      gs2dbDelOfficileReq_descriptor_,
      gs2dbDelOfficileReq::default_instance_,
      gs2dbDelOfficileReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(gs2dbDelOfficileReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(gs2dbDelOfficileReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(gs2dbDelOfficileReq, _internal_metadata_),
      -1);
  gs2dbSaveOfficileMapReq_descriptor_ = file->message_type(3);
  static const int gs2dbSaveOfficileMapReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(gs2dbSaveOfficileMapReq, data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(gs2dbSaveOfficileMapReq, account_),
  };
  gs2dbSaveOfficileMapReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      gs2dbSaveOfficileMapReq_descriptor_,
      gs2dbSaveOfficileMapReq::default_instance_,
      gs2dbSaveOfficileMapReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(gs2dbSaveOfficileMapReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(gs2dbSaveOfficileMapReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(gs2dbSaveOfficileMapReq, _internal_metadata_),
      -1);
  CharacterDataACK_descriptor_ = file->message_type(4);
  static const int CharacterDataACK_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CharacterDataACK, data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CharacterDataACK, maps_),
  };
  CharacterDataACK_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CharacterDataACK_descriptor_,
      CharacterDataACK::default_instance_,
      CharacterDataACK_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CharacterDataACK, _has_bits_[0]),
      -1,
      -1,
      sizeof(CharacterDataACK),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CharacterDataACK, _internal_metadata_),
      -1);
  ReqSaveCharacterData_descriptor_ = file->message_type(5);
  static const int ReqSaveCharacterData_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqSaveCharacterData, data_),
  };
  ReqSaveCharacterData_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ReqSaveCharacterData_descriptor_,
      ReqSaveCharacterData::default_instance_,
      ReqSaveCharacterData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqSaveCharacterData, _has_bits_[0]),
      -1,
      -1,
      sizeof(ReqSaveCharacterData),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqSaveCharacterData, _internal_metadata_),
      -1);
  ReqSaveOfficilMap_descriptor_ = file->message_type(6);
  static const int ReqSaveOfficilMap_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqSaveOfficilMap, sql_),
  };
  ReqSaveOfficilMap_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ReqSaveOfficilMap_descriptor_,
      ReqSaveOfficilMap::default_instance_,
      ReqSaveOfficilMap_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqSaveOfficilMap, _has_bits_[0]),
      -1,
      -1,
      sizeof(ReqSaveOfficilMap),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqSaveOfficilMap, _internal_metadata_),
      -1);
  ReqSaveOfficilSectionNames_descriptor_ = file->message_type(7);
  static const int ReqSaveOfficilSectionNames_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqSaveOfficilSectionNames, sql_),
  };
  ReqSaveOfficilSectionNames_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ReqSaveOfficilSectionNames_descriptor_,
      ReqSaveOfficilSectionNames::default_instance_,
      ReqSaveOfficilSectionNames_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqSaveOfficilSectionNames, _has_bits_[0]),
      -1,
      -1,
      sizeof(ReqSaveOfficilSectionNames),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqSaveOfficilSectionNames, _internal_metadata_),
      -1);
  ReqSaveCharacterDBSql_descriptor_ = file->message_type(8);
  static const int ReqSaveCharacterDBSql_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqSaveCharacterDBSql, sql_),
  };
  ReqSaveCharacterDBSql_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ReqSaveCharacterDBSql_descriptor_,
      ReqSaveCharacterDBSql::default_instance_,
      ReqSaveCharacterDBSql_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqSaveCharacterDBSql, _has_bits_[0]),
      -1,
      -1,
      sizeof(ReqSaveCharacterDBSql),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqSaveCharacterDBSql, _internal_metadata_),
      -1);
  gs2dbWorldDatabaseSql_descriptor_ = file->message_type(9);
  static const int gs2dbWorldDatabaseSql_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(gs2dbWorldDatabaseSql, sql_),
  };
  gs2dbWorldDatabaseSql_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      gs2dbWorldDatabaseSql_descriptor_,
      gs2dbWorldDatabaseSql::default_instance_,
      gs2dbWorldDatabaseSql_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(gs2dbWorldDatabaseSql, _has_bits_[0]),
      -1,
      -1,
      sizeof(gs2dbWorldDatabaseSql),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(gs2dbWorldDatabaseSql, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_msg_5fgame_5fdb_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ApplyCharacterDataReq_descriptor_, &ApplyCharacterDataReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      NeedCreateCharacter_descriptor_, &NeedCreateCharacter::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      gs2dbDelOfficileReq_descriptor_, &gs2dbDelOfficileReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      gs2dbSaveOfficileMapReq_descriptor_, &gs2dbSaveOfficileMapReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CharacterDataACK_descriptor_, &CharacterDataACK::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ReqSaveCharacterData_descriptor_, &ReqSaveCharacterData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ReqSaveOfficilMap_descriptor_, &ReqSaveOfficilMap::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ReqSaveOfficilSectionNames_descriptor_, &ReqSaveOfficilSectionNames::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ReqSaveCharacterDBSql_descriptor_, &ReqSaveCharacterDBSql::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      gs2dbWorldDatabaseSql_descriptor_, &gs2dbWorldDatabaseSql::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_msg_5fgame_5fdb_2eproto() {
  delete ApplyCharacterDataReq::default_instance_;
  delete ApplyCharacterDataReq_reflection_;
  delete NeedCreateCharacter::default_instance_;
  delete NeedCreateCharacter_reflection_;
  delete gs2dbDelOfficileReq::default_instance_;
  delete gs2dbDelOfficileReq_reflection_;
  delete gs2dbSaveOfficileMapReq::default_instance_;
  delete gs2dbSaveOfficileMapReq_reflection_;
  delete CharacterDataACK::default_instance_;
  delete CharacterDataACK_reflection_;
  delete ReqSaveCharacterData::default_instance_;
  delete ReqSaveCharacterData_reflection_;
  delete ReqSaveOfficilMap::default_instance_;
  delete ReqSaveOfficilMap_reflection_;
  delete ReqSaveOfficilSectionNames::default_instance_;
  delete ReqSaveOfficilSectionNames_reflection_;
  delete ReqSaveCharacterDBSql::default_instance_;
  delete ReqSaveCharacterDBSql_reflection_;
  delete gs2dbWorldDatabaseSql::default_instance_;
  delete gs2dbWorldDatabaseSql_reflection_;
}

void protobuf_AddDesc_msg_5fgame_5fdb_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::message::protobuf_AddDesc_common_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\021msg_game_db.proto\022\007message\032\014common.pro"
    "to\"(\n\025ApplyCharacterDataReq\022\017\n\007account\030\001"
    " \002(\004\"&\n\023NeedCreateCharacter\022\017\n\007account\030\001"
    " \002(\004\"6\n\023gs2dbDelOfficileReq\022\017\n\007section\030\001"
    " \002(\005\022\016\n\006number\030\002 \002(\005\"O\n\027gs2dbSaveOfficil"
    "eMapReq\022#\n\004data\030\001 \002(\0132\025.message.CrashMap"
    "Data\022\017\n\007account\030\002 \002(\004\"_\n\020CharacterDataAC"
    "K\022&\n\004data\030\001 \002(\0132\030.message.CrashPlayerInf"
    "o\022#\n\004maps\030\002 \003(\0132\025.message.CrashMapData\">"
    "\n\024ReqSaveCharacterData\022&\n\004data\030\001 \002(\0132\030.m"
    "essage.CrashPlayerInfo\" \n\021ReqSaveOfficil"
    "Map\022\013\n\003sql\030\001 \002(\t\")\n\032ReqSaveOfficilSectio"
    "nNames\022\013\n\003sql\030\001 \002(\t\"$\n\025ReqSaveCharacterD"
    "BSql\022\013\n\003sql\030\001 \002(\t\"$\n\025gs2dbWorldDatabaseS"
    "ql\022\013\n\003sql\030\001 \002(\t", 575);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "msg_game_db.proto", &protobuf_RegisterTypes);
  ApplyCharacterDataReq::default_instance_ = new ApplyCharacterDataReq();
  NeedCreateCharacter::default_instance_ = new NeedCreateCharacter();
  gs2dbDelOfficileReq::default_instance_ = new gs2dbDelOfficileReq();
  gs2dbSaveOfficileMapReq::default_instance_ = new gs2dbSaveOfficileMapReq();
  CharacterDataACK::default_instance_ = new CharacterDataACK();
  ReqSaveCharacterData::default_instance_ = new ReqSaveCharacterData();
  ReqSaveOfficilMap::default_instance_ = new ReqSaveOfficilMap();
  ReqSaveOfficilSectionNames::default_instance_ = new ReqSaveOfficilSectionNames();
  ReqSaveCharacterDBSql::default_instance_ = new ReqSaveCharacterDBSql();
  gs2dbWorldDatabaseSql::default_instance_ = new gs2dbWorldDatabaseSql();
  ApplyCharacterDataReq::default_instance_->InitAsDefaultInstance();
  NeedCreateCharacter::default_instance_->InitAsDefaultInstance();
  gs2dbDelOfficileReq::default_instance_->InitAsDefaultInstance();
  gs2dbSaveOfficileMapReq::default_instance_->InitAsDefaultInstance();
  CharacterDataACK::default_instance_->InitAsDefaultInstance();
  ReqSaveCharacterData::default_instance_->InitAsDefaultInstance();
  ReqSaveOfficilMap::default_instance_->InitAsDefaultInstance();
  ReqSaveOfficilSectionNames::default_instance_->InitAsDefaultInstance();
  ReqSaveCharacterDBSql::default_instance_->InitAsDefaultInstance();
  gs2dbWorldDatabaseSql::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_msg_5fgame_5fdb_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_msg_5fgame_5fdb_2eproto {
  StaticDescriptorInitializer_msg_5fgame_5fdb_2eproto() {
    protobuf_AddDesc_msg_5fgame_5fdb_2eproto();
  }
} static_descriptor_initializer_msg_5fgame_5fdb_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#ifndef _MSC_VER
const int ApplyCharacterDataReq::kAccountFieldNumber;
#endif  // !_MSC_VER

ApplyCharacterDataReq::ApplyCharacterDataReq()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.ApplyCharacterDataReq)
}

void ApplyCharacterDataReq::InitAsDefaultInstance() {
}

ApplyCharacterDataReq::ApplyCharacterDataReq(const ApplyCharacterDataReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message.ApplyCharacterDataReq)
}

void ApplyCharacterDataReq::SharedCtor() {
  _cached_size_ = 0;
  account_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ApplyCharacterDataReq::~ApplyCharacterDataReq() {
  // @@protoc_insertion_point(destructor:message.ApplyCharacterDataReq)
  SharedDtor();
}

void ApplyCharacterDataReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ApplyCharacterDataReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ApplyCharacterDataReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ApplyCharacterDataReq_descriptor_;
}

const ApplyCharacterDataReq& ApplyCharacterDataReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fgame_5fdb_2eproto();
  return *default_instance_;
}

ApplyCharacterDataReq* ApplyCharacterDataReq::default_instance_ = NULL;

ApplyCharacterDataReq* ApplyCharacterDataReq::New(::google::protobuf::Arena* arena) const {
  ApplyCharacterDataReq* n = new ApplyCharacterDataReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ApplyCharacterDataReq::Clear() {
  account_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ApplyCharacterDataReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.ApplyCharacterDataReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 account = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &account_)));
          set_has_account();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.ApplyCharacterDataReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.ApplyCharacterDataReq)
  return false;
#undef DO_
}

void ApplyCharacterDataReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.ApplyCharacterDataReq)
  // required uint64 account = 1;
  if (has_account()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->account(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.ApplyCharacterDataReq)
}

::google::protobuf::uint8* ApplyCharacterDataReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.ApplyCharacterDataReq)
  // required uint64 account = 1;
  if (has_account()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->account(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.ApplyCharacterDataReq)
  return target;
}

int ApplyCharacterDataReq::ByteSize() const {
  int total_size = 0;

  // required uint64 account = 1;
  if (has_account()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->account());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ApplyCharacterDataReq::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ApplyCharacterDataReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ApplyCharacterDataReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ApplyCharacterDataReq::MergeFrom(const ApplyCharacterDataReq& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_account()) {
      set_account(from.account());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ApplyCharacterDataReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ApplyCharacterDataReq::CopyFrom(const ApplyCharacterDataReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ApplyCharacterDataReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void ApplyCharacterDataReq::Swap(ApplyCharacterDataReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ApplyCharacterDataReq::InternalSwap(ApplyCharacterDataReq* other) {
  std::swap(account_, other->account_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ApplyCharacterDataReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ApplyCharacterDataReq_descriptor_;
  metadata.reflection = ApplyCharacterDataReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ApplyCharacterDataReq

// required uint64 account = 1;
 bool ApplyCharacterDataReq::has_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void ApplyCharacterDataReq::set_has_account() {
  _has_bits_[0] |= 0x00000001u;
}
 void ApplyCharacterDataReq::clear_has_account() {
  _has_bits_[0] &= ~0x00000001u;
}
 void ApplyCharacterDataReq::clear_account() {
  account_ = GOOGLE_ULONGLONG(0);
  clear_has_account();
}
 ::google::protobuf::uint64 ApplyCharacterDataReq::account() const {
  // @@protoc_insertion_point(field_get:message.ApplyCharacterDataReq.account)
  return account_;
}
 void ApplyCharacterDataReq::set_account(::google::protobuf::uint64 value) {
  set_has_account();
  account_ = value;
  // @@protoc_insertion_point(field_set:message.ApplyCharacterDataReq.account)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int NeedCreateCharacter::kAccountFieldNumber;
#endif  // !_MSC_VER

NeedCreateCharacter::NeedCreateCharacter()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.NeedCreateCharacter)
}

void NeedCreateCharacter::InitAsDefaultInstance() {
}

NeedCreateCharacter::NeedCreateCharacter(const NeedCreateCharacter& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message.NeedCreateCharacter)
}

void NeedCreateCharacter::SharedCtor() {
  _cached_size_ = 0;
  account_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NeedCreateCharacter::~NeedCreateCharacter() {
  // @@protoc_insertion_point(destructor:message.NeedCreateCharacter)
  SharedDtor();
}

void NeedCreateCharacter::SharedDtor() {
  if (this != default_instance_) {
  }
}

void NeedCreateCharacter::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NeedCreateCharacter::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NeedCreateCharacter_descriptor_;
}

const NeedCreateCharacter& NeedCreateCharacter::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fgame_5fdb_2eproto();
  return *default_instance_;
}

NeedCreateCharacter* NeedCreateCharacter::default_instance_ = NULL;

NeedCreateCharacter* NeedCreateCharacter::New(::google::protobuf::Arena* arena) const {
  NeedCreateCharacter* n = new NeedCreateCharacter;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NeedCreateCharacter::Clear() {
  account_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool NeedCreateCharacter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.NeedCreateCharacter)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 account = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &account_)));
          set_has_account();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.NeedCreateCharacter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.NeedCreateCharacter)
  return false;
#undef DO_
}

void NeedCreateCharacter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.NeedCreateCharacter)
  // required uint64 account = 1;
  if (has_account()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->account(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.NeedCreateCharacter)
}

::google::protobuf::uint8* NeedCreateCharacter::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.NeedCreateCharacter)
  // required uint64 account = 1;
  if (has_account()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->account(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.NeedCreateCharacter)
  return target;
}

int NeedCreateCharacter::ByteSize() const {
  int total_size = 0;

  // required uint64 account = 1;
  if (has_account()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->account());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NeedCreateCharacter::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const NeedCreateCharacter* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const NeedCreateCharacter*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NeedCreateCharacter::MergeFrom(const NeedCreateCharacter& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_account()) {
      set_account(from.account());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void NeedCreateCharacter::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NeedCreateCharacter::CopyFrom(const NeedCreateCharacter& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NeedCreateCharacter::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void NeedCreateCharacter::Swap(NeedCreateCharacter* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NeedCreateCharacter::InternalSwap(NeedCreateCharacter* other) {
  std::swap(account_, other->account_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NeedCreateCharacter::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NeedCreateCharacter_descriptor_;
  metadata.reflection = NeedCreateCharacter_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// NeedCreateCharacter

// required uint64 account = 1;
 bool NeedCreateCharacter::has_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void NeedCreateCharacter::set_has_account() {
  _has_bits_[0] |= 0x00000001u;
}
 void NeedCreateCharacter::clear_has_account() {
  _has_bits_[0] &= ~0x00000001u;
}
 void NeedCreateCharacter::clear_account() {
  account_ = GOOGLE_ULONGLONG(0);
  clear_has_account();
}
 ::google::protobuf::uint64 NeedCreateCharacter::account() const {
  // @@protoc_insertion_point(field_get:message.NeedCreateCharacter.account)
  return account_;
}
 void NeedCreateCharacter::set_account(::google::protobuf::uint64 value) {
  set_has_account();
  account_ = value;
  // @@protoc_insertion_point(field_set:message.NeedCreateCharacter.account)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int gs2dbDelOfficileReq::kSectionFieldNumber;
const int gs2dbDelOfficileReq::kNumberFieldNumber;
#endif  // !_MSC_VER

gs2dbDelOfficileReq::gs2dbDelOfficileReq()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.gs2dbDelOfficileReq)
}

void gs2dbDelOfficileReq::InitAsDefaultInstance() {
}

gs2dbDelOfficileReq::gs2dbDelOfficileReq(const gs2dbDelOfficileReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message.gs2dbDelOfficileReq)
}

void gs2dbDelOfficileReq::SharedCtor() {
  _cached_size_ = 0;
  section_ = 0;
  number_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

gs2dbDelOfficileReq::~gs2dbDelOfficileReq() {
  // @@protoc_insertion_point(destructor:message.gs2dbDelOfficileReq)
  SharedDtor();
}

void gs2dbDelOfficileReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void gs2dbDelOfficileReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* gs2dbDelOfficileReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return gs2dbDelOfficileReq_descriptor_;
}

const gs2dbDelOfficileReq& gs2dbDelOfficileReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fgame_5fdb_2eproto();
  return *default_instance_;
}

gs2dbDelOfficileReq* gs2dbDelOfficileReq::default_instance_ = NULL;

gs2dbDelOfficileReq* gs2dbDelOfficileReq::New(::google::protobuf::Arena* arena) const {
  gs2dbDelOfficileReq* n = new gs2dbDelOfficileReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void gs2dbDelOfficileReq::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<gs2dbDelOfficileReq*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(section_, number_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool gs2dbDelOfficileReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.gs2dbDelOfficileReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 section = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &section_)));
          set_has_section();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_number;
        break;
      }

      // required int32 number = 2;
      case 2: {
        if (tag == 16) {
         parse_number:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &number_)));
          set_has_number();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.gs2dbDelOfficileReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.gs2dbDelOfficileReq)
  return false;
#undef DO_
}

void gs2dbDelOfficileReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.gs2dbDelOfficileReq)
  // required int32 section = 1;
  if (has_section()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->section(), output);
  }

  // required int32 number = 2;
  if (has_number()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->number(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.gs2dbDelOfficileReq)
}

::google::protobuf::uint8* gs2dbDelOfficileReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.gs2dbDelOfficileReq)
  // required int32 section = 1;
  if (has_section()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->section(), target);
  }

  // required int32 number = 2;
  if (has_number()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->number(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.gs2dbDelOfficileReq)
  return target;
}

int gs2dbDelOfficileReq::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_section()) {
    // required int32 section = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->section());
  }

  if (has_number()) {
    // required int32 number = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->number());
  }

  return total_size;
}
int gs2dbDelOfficileReq::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 section = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->section());

    // required int32 number = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->number());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void gs2dbDelOfficileReq::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const gs2dbDelOfficileReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const gs2dbDelOfficileReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void gs2dbDelOfficileReq::MergeFrom(const gs2dbDelOfficileReq& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_section()) {
      set_section(from.section());
    }
    if (from.has_number()) {
      set_number(from.number());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void gs2dbDelOfficileReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void gs2dbDelOfficileReq::CopyFrom(const gs2dbDelOfficileReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool gs2dbDelOfficileReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void gs2dbDelOfficileReq::Swap(gs2dbDelOfficileReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void gs2dbDelOfficileReq::InternalSwap(gs2dbDelOfficileReq* other) {
  std::swap(section_, other->section_);
  std::swap(number_, other->number_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata gs2dbDelOfficileReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = gs2dbDelOfficileReq_descriptor_;
  metadata.reflection = gs2dbDelOfficileReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// gs2dbDelOfficileReq

// required int32 section = 1;
 bool gs2dbDelOfficileReq::has_section() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void gs2dbDelOfficileReq::set_has_section() {
  _has_bits_[0] |= 0x00000001u;
}
 void gs2dbDelOfficileReq::clear_has_section() {
  _has_bits_[0] &= ~0x00000001u;
}
 void gs2dbDelOfficileReq::clear_section() {
  section_ = 0;
  clear_has_section();
}
 ::google::protobuf::int32 gs2dbDelOfficileReq::section() const {
  // @@protoc_insertion_point(field_get:message.gs2dbDelOfficileReq.section)
  return section_;
}
 void gs2dbDelOfficileReq::set_section(::google::protobuf::int32 value) {
  set_has_section();
  section_ = value;
  // @@protoc_insertion_point(field_set:message.gs2dbDelOfficileReq.section)
}

// required int32 number = 2;
 bool gs2dbDelOfficileReq::has_number() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
 void gs2dbDelOfficileReq::set_has_number() {
  _has_bits_[0] |= 0x00000002u;
}
 void gs2dbDelOfficileReq::clear_has_number() {
  _has_bits_[0] &= ~0x00000002u;
}
 void gs2dbDelOfficileReq::clear_number() {
  number_ = 0;
  clear_has_number();
}
 ::google::protobuf::int32 gs2dbDelOfficileReq::number() const {
  // @@protoc_insertion_point(field_get:message.gs2dbDelOfficileReq.number)
  return number_;
}
 void gs2dbDelOfficileReq::set_number(::google::protobuf::int32 value) {
  set_has_number();
  number_ = value;
  // @@protoc_insertion_point(field_set:message.gs2dbDelOfficileReq.number)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int gs2dbSaveOfficileMapReq::kDataFieldNumber;
const int gs2dbSaveOfficileMapReq::kAccountFieldNumber;
#endif  // !_MSC_VER

gs2dbSaveOfficileMapReq::gs2dbSaveOfficileMapReq()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.gs2dbSaveOfficileMapReq)
}

void gs2dbSaveOfficileMapReq::InitAsDefaultInstance() {
  data_ = const_cast< ::message::CrashMapData*>(&::message::CrashMapData::default_instance());
}

gs2dbSaveOfficileMapReq::gs2dbSaveOfficileMapReq(const gs2dbSaveOfficileMapReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message.gs2dbSaveOfficileMapReq)
}

void gs2dbSaveOfficileMapReq::SharedCtor() {
  _cached_size_ = 0;
  data_ = NULL;
  account_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

gs2dbSaveOfficileMapReq::~gs2dbSaveOfficileMapReq() {
  // @@protoc_insertion_point(destructor:message.gs2dbSaveOfficileMapReq)
  SharedDtor();
}

void gs2dbSaveOfficileMapReq::SharedDtor() {
  if (this != default_instance_) {
    delete data_;
  }
}

void gs2dbSaveOfficileMapReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* gs2dbSaveOfficileMapReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return gs2dbSaveOfficileMapReq_descriptor_;
}

const gs2dbSaveOfficileMapReq& gs2dbSaveOfficileMapReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fgame_5fdb_2eproto();
  return *default_instance_;
}

gs2dbSaveOfficileMapReq* gs2dbSaveOfficileMapReq::default_instance_ = NULL;

gs2dbSaveOfficileMapReq* gs2dbSaveOfficileMapReq::New(::google::protobuf::Arena* arena) const {
  gs2dbSaveOfficileMapReq* n = new gs2dbSaveOfficileMapReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void gs2dbSaveOfficileMapReq::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_data()) {
      if (data_ != NULL) data_->::message::CrashMapData::Clear();
    }
    account_ = GOOGLE_ULONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool gs2dbSaveOfficileMapReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.gs2dbSaveOfficileMapReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .message.CrashMapData data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_account;
        break;
      }

      // required uint64 account = 2;
      case 2: {
        if (tag == 16) {
         parse_account:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &account_)));
          set_has_account();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.gs2dbSaveOfficileMapReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.gs2dbSaveOfficileMapReq)
  return false;
#undef DO_
}

void gs2dbSaveOfficileMapReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.gs2dbSaveOfficileMapReq)
  // required .message.CrashMapData data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->data_, output);
  }

  // required uint64 account = 2;
  if (has_account()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->account(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.gs2dbSaveOfficileMapReq)
}

::google::protobuf::uint8* gs2dbSaveOfficileMapReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.gs2dbSaveOfficileMapReq)
  // required .message.CrashMapData data = 1;
  if (has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, *this->data_, target);
  }

  // required uint64 account = 2;
  if (has_account()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->account(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.gs2dbSaveOfficileMapReq)
  return target;
}

int gs2dbSaveOfficileMapReq::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_data()) {
    // required .message.CrashMapData data = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->data_);
  }

  if (has_account()) {
    // required uint64 account = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->account());
  }

  return total_size;
}
int gs2dbSaveOfficileMapReq::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .message.CrashMapData data = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->data_);

    // required uint64 account = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->account());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void gs2dbSaveOfficileMapReq::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const gs2dbSaveOfficileMapReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const gs2dbSaveOfficileMapReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void gs2dbSaveOfficileMapReq::MergeFrom(const gs2dbSaveOfficileMapReq& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      mutable_data()->::message::CrashMapData::MergeFrom(from.data());
    }
    if (from.has_account()) {
      set_account(from.account());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void gs2dbSaveOfficileMapReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void gs2dbSaveOfficileMapReq::CopyFrom(const gs2dbSaveOfficileMapReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool gs2dbSaveOfficileMapReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_data()) {
    if (!this->data_->IsInitialized()) return false;
  }
  return true;
}

void gs2dbSaveOfficileMapReq::Swap(gs2dbSaveOfficileMapReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void gs2dbSaveOfficileMapReq::InternalSwap(gs2dbSaveOfficileMapReq* other) {
  std::swap(data_, other->data_);
  std::swap(account_, other->account_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata gs2dbSaveOfficileMapReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = gs2dbSaveOfficileMapReq_descriptor_;
  metadata.reflection = gs2dbSaveOfficileMapReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// gs2dbSaveOfficileMapReq

// required .message.CrashMapData data = 1;
 bool gs2dbSaveOfficileMapReq::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void gs2dbSaveOfficileMapReq::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
 void gs2dbSaveOfficileMapReq::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
 void gs2dbSaveOfficileMapReq::clear_data() {
  if (data_ != NULL) data_->::message::CrashMapData::Clear();
  clear_has_data();
}
 const ::message::CrashMapData& gs2dbSaveOfficileMapReq::data() const {
  // @@protoc_insertion_point(field_get:message.gs2dbSaveOfficileMapReq.data)
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
 ::message::CrashMapData* gs2dbSaveOfficileMapReq::mutable_data() {
  set_has_data();
  if (data_ == NULL) {
    data_ = new ::message::CrashMapData;
  }
  // @@protoc_insertion_point(field_mutable:message.gs2dbSaveOfficileMapReq.data)
  return data_;
}
 ::message::CrashMapData* gs2dbSaveOfficileMapReq::release_data() {
  clear_has_data();
  ::message::CrashMapData* temp = data_;
  data_ = NULL;
  return temp;
}
 void gs2dbSaveOfficileMapReq::set_allocated_data(::message::CrashMapData* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
  // @@protoc_insertion_point(field_set_allocated:message.gs2dbSaveOfficileMapReq.data)
}

// required uint64 account = 2;
 bool gs2dbSaveOfficileMapReq::has_account() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
 void gs2dbSaveOfficileMapReq::set_has_account() {
  _has_bits_[0] |= 0x00000002u;
}
 void gs2dbSaveOfficileMapReq::clear_has_account() {
  _has_bits_[0] &= ~0x00000002u;
}
 void gs2dbSaveOfficileMapReq::clear_account() {
  account_ = GOOGLE_ULONGLONG(0);
  clear_has_account();
}
 ::google::protobuf::uint64 gs2dbSaveOfficileMapReq::account() const {
  // @@protoc_insertion_point(field_get:message.gs2dbSaveOfficileMapReq.account)
  return account_;
}
 void gs2dbSaveOfficileMapReq::set_account(::google::protobuf::uint64 value) {
  set_has_account();
  account_ = value;
  // @@protoc_insertion_point(field_set:message.gs2dbSaveOfficileMapReq.account)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int CharacterDataACK::kDataFieldNumber;
const int CharacterDataACK::kMapsFieldNumber;
#endif  // !_MSC_VER

CharacterDataACK::CharacterDataACK()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.CharacterDataACK)
}

void CharacterDataACK::InitAsDefaultInstance() {
  data_ = const_cast< ::message::CrashPlayerInfo*>(&::message::CrashPlayerInfo::default_instance());
}

CharacterDataACK::CharacterDataACK(const CharacterDataACK& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message.CharacterDataACK)
}

void CharacterDataACK::SharedCtor() {
  _cached_size_ = 0;
  data_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CharacterDataACK::~CharacterDataACK() {
  // @@protoc_insertion_point(destructor:message.CharacterDataACK)
  SharedDtor();
}

void CharacterDataACK::SharedDtor() {
  if (this != default_instance_) {
    delete data_;
  }
}

void CharacterDataACK::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CharacterDataACK::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CharacterDataACK_descriptor_;
}

const CharacterDataACK& CharacterDataACK::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fgame_5fdb_2eproto();
  return *default_instance_;
}

CharacterDataACK* CharacterDataACK::default_instance_ = NULL;

CharacterDataACK* CharacterDataACK::New(::google::protobuf::Arena* arena) const {
  CharacterDataACK* n = new CharacterDataACK;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CharacterDataACK::Clear() {
  if (has_data()) {
    if (data_ != NULL) data_->::message::CrashPlayerInfo::Clear();
  }
  maps_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CharacterDataACK::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.CharacterDataACK)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .message.CrashPlayerInfo data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_maps;
        break;
      }

      // repeated .message.CrashMapData maps = 2;
      case 2: {
        if (tag == 18) {
         parse_maps:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_maps()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_maps;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.CharacterDataACK)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.CharacterDataACK)
  return false;
#undef DO_
}

void CharacterDataACK::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.CharacterDataACK)
  // required .message.CrashPlayerInfo data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->data_, output);
  }

  // repeated .message.CrashMapData maps = 2;
  for (unsigned int i = 0, n = this->maps_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->maps(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.CharacterDataACK)
}

::google::protobuf::uint8* CharacterDataACK::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.CharacterDataACK)
  // required .message.CrashPlayerInfo data = 1;
  if (has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, *this->data_, target);
  }

  // repeated .message.CrashMapData maps = 2;
  for (unsigned int i = 0, n = this->maps_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->maps(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.CharacterDataACK)
  return target;
}

int CharacterDataACK::ByteSize() const {
  int total_size = 0;

  // required .message.CrashPlayerInfo data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->data_);
  }
  // repeated .message.CrashMapData maps = 2;
  total_size += 1 * this->maps_size();
  for (int i = 0; i < this->maps_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->maps(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CharacterDataACK::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CharacterDataACK* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CharacterDataACK*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CharacterDataACK::MergeFrom(const CharacterDataACK& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  maps_.MergeFrom(from.maps_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      mutable_data()->::message::CrashPlayerInfo::MergeFrom(from.data());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CharacterDataACK::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CharacterDataACK::CopyFrom(const CharacterDataACK& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CharacterDataACK::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_data()) {
    if (!this->data_->IsInitialized()) return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(this->maps())) return false;
  return true;
}

void CharacterDataACK::Swap(CharacterDataACK* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CharacterDataACK::InternalSwap(CharacterDataACK* other) {
  std::swap(data_, other->data_);
  maps_.UnsafeArenaSwap(&other->maps_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CharacterDataACK::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CharacterDataACK_descriptor_;
  metadata.reflection = CharacterDataACK_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CharacterDataACK

// required .message.CrashPlayerInfo data = 1;
 bool CharacterDataACK::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void CharacterDataACK::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
 void CharacterDataACK::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
 void CharacterDataACK::clear_data() {
  if (data_ != NULL) data_->::message::CrashPlayerInfo::Clear();
  clear_has_data();
}
 const ::message::CrashPlayerInfo& CharacterDataACK::data() const {
  // @@protoc_insertion_point(field_get:message.CharacterDataACK.data)
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
 ::message::CrashPlayerInfo* CharacterDataACK::mutable_data() {
  set_has_data();
  if (data_ == NULL) {
    data_ = new ::message::CrashPlayerInfo;
  }
  // @@protoc_insertion_point(field_mutable:message.CharacterDataACK.data)
  return data_;
}
 ::message::CrashPlayerInfo* CharacterDataACK::release_data() {
  clear_has_data();
  ::message::CrashPlayerInfo* temp = data_;
  data_ = NULL;
  return temp;
}
 void CharacterDataACK::set_allocated_data(::message::CrashPlayerInfo* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
  // @@protoc_insertion_point(field_set_allocated:message.CharacterDataACK.data)
}

// repeated .message.CrashMapData maps = 2;
 int CharacterDataACK::maps_size() const {
  return maps_.size();
}
 void CharacterDataACK::clear_maps() {
  maps_.Clear();
}
 const ::message::CrashMapData& CharacterDataACK::maps(int index) const {
  // @@protoc_insertion_point(field_get:message.CharacterDataACK.maps)
  return maps_.Get(index);
}
 ::message::CrashMapData* CharacterDataACK::mutable_maps(int index) {
  // @@protoc_insertion_point(field_mutable:message.CharacterDataACK.maps)
  return maps_.Mutable(index);
}
 ::message::CrashMapData* CharacterDataACK::add_maps() {
  // @@protoc_insertion_point(field_add:message.CharacterDataACK.maps)
  return maps_.Add();
}
 const ::google::protobuf::RepeatedPtrField< ::message::CrashMapData >&
CharacterDataACK::maps() const {
  // @@protoc_insertion_point(field_list:message.CharacterDataACK.maps)
  return maps_;
}
 ::google::protobuf::RepeatedPtrField< ::message::CrashMapData >*
CharacterDataACK::mutable_maps() {
  // @@protoc_insertion_point(field_mutable_list:message.CharacterDataACK.maps)
  return &maps_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int ReqSaveCharacterData::kDataFieldNumber;
#endif  // !_MSC_VER

ReqSaveCharacterData::ReqSaveCharacterData()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.ReqSaveCharacterData)
}

void ReqSaveCharacterData::InitAsDefaultInstance() {
  data_ = const_cast< ::message::CrashPlayerInfo*>(&::message::CrashPlayerInfo::default_instance());
}

ReqSaveCharacterData::ReqSaveCharacterData(const ReqSaveCharacterData& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message.ReqSaveCharacterData)
}

void ReqSaveCharacterData::SharedCtor() {
  _cached_size_ = 0;
  data_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ReqSaveCharacterData::~ReqSaveCharacterData() {
  // @@protoc_insertion_point(destructor:message.ReqSaveCharacterData)
  SharedDtor();
}

void ReqSaveCharacterData::SharedDtor() {
  if (this != default_instance_) {
    delete data_;
  }
}

void ReqSaveCharacterData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReqSaveCharacterData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReqSaveCharacterData_descriptor_;
}

const ReqSaveCharacterData& ReqSaveCharacterData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fgame_5fdb_2eproto();
  return *default_instance_;
}

ReqSaveCharacterData* ReqSaveCharacterData::default_instance_ = NULL;

ReqSaveCharacterData* ReqSaveCharacterData::New(::google::protobuf::Arena* arena) const {
  ReqSaveCharacterData* n = new ReqSaveCharacterData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReqSaveCharacterData::Clear() {
  if (has_data()) {
    if (data_ != NULL) data_->::message::CrashPlayerInfo::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ReqSaveCharacterData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.ReqSaveCharacterData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .message.CrashPlayerInfo data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.ReqSaveCharacterData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.ReqSaveCharacterData)
  return false;
#undef DO_
}

void ReqSaveCharacterData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.ReqSaveCharacterData)
  // required .message.CrashPlayerInfo data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->data_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.ReqSaveCharacterData)
}

::google::protobuf::uint8* ReqSaveCharacterData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.ReqSaveCharacterData)
  // required .message.CrashPlayerInfo data = 1;
  if (has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, *this->data_, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.ReqSaveCharacterData)
  return target;
}

int ReqSaveCharacterData::ByteSize() const {
  int total_size = 0;

  // required .message.CrashPlayerInfo data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->data_);
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReqSaveCharacterData::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ReqSaveCharacterData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ReqSaveCharacterData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ReqSaveCharacterData::MergeFrom(const ReqSaveCharacterData& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      mutable_data()->::message::CrashPlayerInfo::MergeFrom(from.data());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ReqSaveCharacterData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqSaveCharacterData::CopyFrom(const ReqSaveCharacterData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqSaveCharacterData::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_data()) {
    if (!this->data_->IsInitialized()) return false;
  }
  return true;
}

void ReqSaveCharacterData::Swap(ReqSaveCharacterData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReqSaveCharacterData::InternalSwap(ReqSaveCharacterData* other) {
  std::swap(data_, other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReqSaveCharacterData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReqSaveCharacterData_descriptor_;
  metadata.reflection = ReqSaveCharacterData_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ReqSaveCharacterData

// required .message.CrashPlayerInfo data = 1;
 bool ReqSaveCharacterData::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void ReqSaveCharacterData::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
 void ReqSaveCharacterData::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
 void ReqSaveCharacterData::clear_data() {
  if (data_ != NULL) data_->::message::CrashPlayerInfo::Clear();
  clear_has_data();
}
 const ::message::CrashPlayerInfo& ReqSaveCharacterData::data() const {
  // @@protoc_insertion_point(field_get:message.ReqSaveCharacterData.data)
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
 ::message::CrashPlayerInfo* ReqSaveCharacterData::mutable_data() {
  set_has_data();
  if (data_ == NULL) {
    data_ = new ::message::CrashPlayerInfo;
  }
  // @@protoc_insertion_point(field_mutable:message.ReqSaveCharacterData.data)
  return data_;
}
 ::message::CrashPlayerInfo* ReqSaveCharacterData::release_data() {
  clear_has_data();
  ::message::CrashPlayerInfo* temp = data_;
  data_ = NULL;
  return temp;
}
 void ReqSaveCharacterData::set_allocated_data(::message::CrashPlayerInfo* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
  // @@protoc_insertion_point(field_set_allocated:message.ReqSaveCharacterData.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int ReqSaveOfficilMap::kSqlFieldNumber;
#endif  // !_MSC_VER

ReqSaveOfficilMap::ReqSaveOfficilMap()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.ReqSaveOfficilMap)
}

void ReqSaveOfficilMap::InitAsDefaultInstance() {
}

ReqSaveOfficilMap::ReqSaveOfficilMap(const ReqSaveOfficilMap& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message.ReqSaveOfficilMap)
}

void ReqSaveOfficilMap::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  sql_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ReqSaveOfficilMap::~ReqSaveOfficilMap() {
  // @@protoc_insertion_point(destructor:message.ReqSaveOfficilMap)
  SharedDtor();
}

void ReqSaveOfficilMap::SharedDtor() {
  sql_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void ReqSaveOfficilMap::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReqSaveOfficilMap::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReqSaveOfficilMap_descriptor_;
}

const ReqSaveOfficilMap& ReqSaveOfficilMap::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fgame_5fdb_2eproto();
  return *default_instance_;
}

ReqSaveOfficilMap* ReqSaveOfficilMap::default_instance_ = NULL;

ReqSaveOfficilMap* ReqSaveOfficilMap::New(::google::protobuf::Arena* arena) const {
  ReqSaveOfficilMap* n = new ReqSaveOfficilMap;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReqSaveOfficilMap::Clear() {
  if (has_sql()) {
    sql_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ReqSaveOfficilMap::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.ReqSaveOfficilMap)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string sql = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sql()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sql().data(), this->sql().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "message.ReqSaveOfficilMap.sql");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.ReqSaveOfficilMap)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.ReqSaveOfficilMap)
  return false;
#undef DO_
}

void ReqSaveOfficilMap::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.ReqSaveOfficilMap)
  // required string sql = 1;
  if (has_sql()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sql().data(), this->sql().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "message.ReqSaveOfficilMap.sql");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sql(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.ReqSaveOfficilMap)
}

::google::protobuf::uint8* ReqSaveOfficilMap::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.ReqSaveOfficilMap)
  // required string sql = 1;
  if (has_sql()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sql().data(), this->sql().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "message.ReqSaveOfficilMap.sql");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->sql(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.ReqSaveOfficilMap)
  return target;
}

int ReqSaveOfficilMap::ByteSize() const {
  int total_size = 0;

  // required string sql = 1;
  if (has_sql()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sql());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReqSaveOfficilMap::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ReqSaveOfficilMap* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ReqSaveOfficilMap*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ReqSaveOfficilMap::MergeFrom(const ReqSaveOfficilMap& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_sql()) {
      set_has_sql();
      sql_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sql_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ReqSaveOfficilMap::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqSaveOfficilMap::CopyFrom(const ReqSaveOfficilMap& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqSaveOfficilMap::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void ReqSaveOfficilMap::Swap(ReqSaveOfficilMap* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReqSaveOfficilMap::InternalSwap(ReqSaveOfficilMap* other) {
  sql_.Swap(&other->sql_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReqSaveOfficilMap::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReqSaveOfficilMap_descriptor_;
  metadata.reflection = ReqSaveOfficilMap_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ReqSaveOfficilMap

// required string sql = 1;
 bool ReqSaveOfficilMap::has_sql() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void ReqSaveOfficilMap::set_has_sql() {
  _has_bits_[0] |= 0x00000001u;
}
 void ReqSaveOfficilMap::clear_has_sql() {
  _has_bits_[0] &= ~0x00000001u;
}
 void ReqSaveOfficilMap::clear_sql() {
  sql_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sql();
}
 const ::std::string& ReqSaveOfficilMap::sql() const {
  // @@protoc_insertion_point(field_get:message.ReqSaveOfficilMap.sql)
  return sql_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ReqSaveOfficilMap::set_sql(const ::std::string& value) {
  set_has_sql();
  sql_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message.ReqSaveOfficilMap.sql)
}
 void ReqSaveOfficilMap::set_sql(const char* value) {
  set_has_sql();
  sql_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.ReqSaveOfficilMap.sql)
}
 void ReqSaveOfficilMap::set_sql(const char* value, size_t size) {
  set_has_sql();
  sql_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.ReqSaveOfficilMap.sql)
}
 ::std::string* ReqSaveOfficilMap::mutable_sql() {
  set_has_sql();
  // @@protoc_insertion_point(field_mutable:message.ReqSaveOfficilMap.sql)
  return sql_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ReqSaveOfficilMap::release_sql() {
  clear_has_sql();
  return sql_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ReqSaveOfficilMap::set_allocated_sql(::std::string* sql) {
  if (sql != NULL) {
    set_has_sql();
  } else {
    clear_has_sql();
  }
  sql_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sql);
  // @@protoc_insertion_point(field_set_allocated:message.ReqSaveOfficilMap.sql)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int ReqSaveOfficilSectionNames::kSqlFieldNumber;
#endif  // !_MSC_VER

ReqSaveOfficilSectionNames::ReqSaveOfficilSectionNames()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.ReqSaveOfficilSectionNames)
}

void ReqSaveOfficilSectionNames::InitAsDefaultInstance() {
}

ReqSaveOfficilSectionNames::ReqSaveOfficilSectionNames(const ReqSaveOfficilSectionNames& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message.ReqSaveOfficilSectionNames)
}

void ReqSaveOfficilSectionNames::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  sql_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ReqSaveOfficilSectionNames::~ReqSaveOfficilSectionNames() {
  // @@protoc_insertion_point(destructor:message.ReqSaveOfficilSectionNames)
  SharedDtor();
}

void ReqSaveOfficilSectionNames::SharedDtor() {
  sql_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void ReqSaveOfficilSectionNames::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReqSaveOfficilSectionNames::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReqSaveOfficilSectionNames_descriptor_;
}

const ReqSaveOfficilSectionNames& ReqSaveOfficilSectionNames::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fgame_5fdb_2eproto();
  return *default_instance_;
}

ReqSaveOfficilSectionNames* ReqSaveOfficilSectionNames::default_instance_ = NULL;

ReqSaveOfficilSectionNames* ReqSaveOfficilSectionNames::New(::google::protobuf::Arena* arena) const {
  ReqSaveOfficilSectionNames* n = new ReqSaveOfficilSectionNames;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReqSaveOfficilSectionNames::Clear() {
  if (has_sql()) {
    sql_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ReqSaveOfficilSectionNames::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.ReqSaveOfficilSectionNames)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string sql = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sql()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sql().data(), this->sql().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "message.ReqSaveOfficilSectionNames.sql");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.ReqSaveOfficilSectionNames)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.ReqSaveOfficilSectionNames)
  return false;
#undef DO_
}

void ReqSaveOfficilSectionNames::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.ReqSaveOfficilSectionNames)
  // required string sql = 1;
  if (has_sql()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sql().data(), this->sql().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "message.ReqSaveOfficilSectionNames.sql");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sql(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.ReqSaveOfficilSectionNames)
}

::google::protobuf::uint8* ReqSaveOfficilSectionNames::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.ReqSaveOfficilSectionNames)
  // required string sql = 1;
  if (has_sql()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sql().data(), this->sql().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "message.ReqSaveOfficilSectionNames.sql");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->sql(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.ReqSaveOfficilSectionNames)
  return target;
}

int ReqSaveOfficilSectionNames::ByteSize() const {
  int total_size = 0;

  // required string sql = 1;
  if (has_sql()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sql());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReqSaveOfficilSectionNames::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ReqSaveOfficilSectionNames* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ReqSaveOfficilSectionNames*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ReqSaveOfficilSectionNames::MergeFrom(const ReqSaveOfficilSectionNames& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_sql()) {
      set_has_sql();
      sql_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sql_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ReqSaveOfficilSectionNames::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqSaveOfficilSectionNames::CopyFrom(const ReqSaveOfficilSectionNames& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqSaveOfficilSectionNames::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void ReqSaveOfficilSectionNames::Swap(ReqSaveOfficilSectionNames* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReqSaveOfficilSectionNames::InternalSwap(ReqSaveOfficilSectionNames* other) {
  sql_.Swap(&other->sql_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReqSaveOfficilSectionNames::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReqSaveOfficilSectionNames_descriptor_;
  metadata.reflection = ReqSaveOfficilSectionNames_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ReqSaveOfficilSectionNames

// required string sql = 1;
 bool ReqSaveOfficilSectionNames::has_sql() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void ReqSaveOfficilSectionNames::set_has_sql() {
  _has_bits_[0] |= 0x00000001u;
}
 void ReqSaveOfficilSectionNames::clear_has_sql() {
  _has_bits_[0] &= ~0x00000001u;
}
 void ReqSaveOfficilSectionNames::clear_sql() {
  sql_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sql();
}
 const ::std::string& ReqSaveOfficilSectionNames::sql() const {
  // @@protoc_insertion_point(field_get:message.ReqSaveOfficilSectionNames.sql)
  return sql_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ReqSaveOfficilSectionNames::set_sql(const ::std::string& value) {
  set_has_sql();
  sql_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message.ReqSaveOfficilSectionNames.sql)
}
 void ReqSaveOfficilSectionNames::set_sql(const char* value) {
  set_has_sql();
  sql_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.ReqSaveOfficilSectionNames.sql)
}
 void ReqSaveOfficilSectionNames::set_sql(const char* value, size_t size) {
  set_has_sql();
  sql_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.ReqSaveOfficilSectionNames.sql)
}
 ::std::string* ReqSaveOfficilSectionNames::mutable_sql() {
  set_has_sql();
  // @@protoc_insertion_point(field_mutable:message.ReqSaveOfficilSectionNames.sql)
  return sql_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ReqSaveOfficilSectionNames::release_sql() {
  clear_has_sql();
  return sql_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ReqSaveOfficilSectionNames::set_allocated_sql(::std::string* sql) {
  if (sql != NULL) {
    set_has_sql();
  } else {
    clear_has_sql();
  }
  sql_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sql);
  // @@protoc_insertion_point(field_set_allocated:message.ReqSaveOfficilSectionNames.sql)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int ReqSaveCharacterDBSql::kSqlFieldNumber;
#endif  // !_MSC_VER

ReqSaveCharacterDBSql::ReqSaveCharacterDBSql()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.ReqSaveCharacterDBSql)
}

void ReqSaveCharacterDBSql::InitAsDefaultInstance() {
}

ReqSaveCharacterDBSql::ReqSaveCharacterDBSql(const ReqSaveCharacterDBSql& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message.ReqSaveCharacterDBSql)
}

void ReqSaveCharacterDBSql::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  sql_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ReqSaveCharacterDBSql::~ReqSaveCharacterDBSql() {
  // @@protoc_insertion_point(destructor:message.ReqSaveCharacterDBSql)
  SharedDtor();
}

void ReqSaveCharacterDBSql::SharedDtor() {
  sql_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void ReqSaveCharacterDBSql::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReqSaveCharacterDBSql::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReqSaveCharacterDBSql_descriptor_;
}

const ReqSaveCharacterDBSql& ReqSaveCharacterDBSql::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fgame_5fdb_2eproto();
  return *default_instance_;
}

ReqSaveCharacterDBSql* ReqSaveCharacterDBSql::default_instance_ = NULL;

ReqSaveCharacterDBSql* ReqSaveCharacterDBSql::New(::google::protobuf::Arena* arena) const {
  ReqSaveCharacterDBSql* n = new ReqSaveCharacterDBSql;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReqSaveCharacterDBSql::Clear() {
  if (has_sql()) {
    sql_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ReqSaveCharacterDBSql::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.ReqSaveCharacterDBSql)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string sql = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sql()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sql().data(), this->sql().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "message.ReqSaveCharacterDBSql.sql");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.ReqSaveCharacterDBSql)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.ReqSaveCharacterDBSql)
  return false;
#undef DO_
}

void ReqSaveCharacterDBSql::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.ReqSaveCharacterDBSql)
  // required string sql = 1;
  if (has_sql()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sql().data(), this->sql().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "message.ReqSaveCharacterDBSql.sql");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sql(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.ReqSaveCharacterDBSql)
}

::google::protobuf::uint8* ReqSaveCharacterDBSql::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.ReqSaveCharacterDBSql)
  // required string sql = 1;
  if (has_sql()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sql().data(), this->sql().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "message.ReqSaveCharacterDBSql.sql");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->sql(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.ReqSaveCharacterDBSql)
  return target;
}

int ReqSaveCharacterDBSql::ByteSize() const {
  int total_size = 0;

  // required string sql = 1;
  if (has_sql()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sql());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReqSaveCharacterDBSql::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ReqSaveCharacterDBSql* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ReqSaveCharacterDBSql*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ReqSaveCharacterDBSql::MergeFrom(const ReqSaveCharacterDBSql& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_sql()) {
      set_has_sql();
      sql_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sql_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ReqSaveCharacterDBSql::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqSaveCharacterDBSql::CopyFrom(const ReqSaveCharacterDBSql& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqSaveCharacterDBSql::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void ReqSaveCharacterDBSql::Swap(ReqSaveCharacterDBSql* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReqSaveCharacterDBSql::InternalSwap(ReqSaveCharacterDBSql* other) {
  sql_.Swap(&other->sql_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReqSaveCharacterDBSql::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReqSaveCharacterDBSql_descriptor_;
  metadata.reflection = ReqSaveCharacterDBSql_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ReqSaveCharacterDBSql

// required string sql = 1;
 bool ReqSaveCharacterDBSql::has_sql() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void ReqSaveCharacterDBSql::set_has_sql() {
  _has_bits_[0] |= 0x00000001u;
}
 void ReqSaveCharacterDBSql::clear_has_sql() {
  _has_bits_[0] &= ~0x00000001u;
}
 void ReqSaveCharacterDBSql::clear_sql() {
  sql_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sql();
}
 const ::std::string& ReqSaveCharacterDBSql::sql() const {
  // @@protoc_insertion_point(field_get:message.ReqSaveCharacterDBSql.sql)
  return sql_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ReqSaveCharacterDBSql::set_sql(const ::std::string& value) {
  set_has_sql();
  sql_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message.ReqSaveCharacterDBSql.sql)
}
 void ReqSaveCharacterDBSql::set_sql(const char* value) {
  set_has_sql();
  sql_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.ReqSaveCharacterDBSql.sql)
}
 void ReqSaveCharacterDBSql::set_sql(const char* value, size_t size) {
  set_has_sql();
  sql_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.ReqSaveCharacterDBSql.sql)
}
 ::std::string* ReqSaveCharacterDBSql::mutable_sql() {
  set_has_sql();
  // @@protoc_insertion_point(field_mutable:message.ReqSaveCharacterDBSql.sql)
  return sql_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ReqSaveCharacterDBSql::release_sql() {
  clear_has_sql();
  return sql_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ReqSaveCharacterDBSql::set_allocated_sql(::std::string* sql) {
  if (sql != NULL) {
    set_has_sql();
  } else {
    clear_has_sql();
  }
  sql_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sql);
  // @@protoc_insertion_point(field_set_allocated:message.ReqSaveCharacterDBSql.sql)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int gs2dbWorldDatabaseSql::kSqlFieldNumber;
#endif  // !_MSC_VER

gs2dbWorldDatabaseSql::gs2dbWorldDatabaseSql()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.gs2dbWorldDatabaseSql)
}

void gs2dbWorldDatabaseSql::InitAsDefaultInstance() {
}

gs2dbWorldDatabaseSql::gs2dbWorldDatabaseSql(const gs2dbWorldDatabaseSql& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message.gs2dbWorldDatabaseSql)
}

void gs2dbWorldDatabaseSql::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  sql_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

gs2dbWorldDatabaseSql::~gs2dbWorldDatabaseSql() {
  // @@protoc_insertion_point(destructor:message.gs2dbWorldDatabaseSql)
  SharedDtor();
}

void gs2dbWorldDatabaseSql::SharedDtor() {
  sql_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void gs2dbWorldDatabaseSql::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* gs2dbWorldDatabaseSql::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return gs2dbWorldDatabaseSql_descriptor_;
}

const gs2dbWorldDatabaseSql& gs2dbWorldDatabaseSql::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fgame_5fdb_2eproto();
  return *default_instance_;
}

gs2dbWorldDatabaseSql* gs2dbWorldDatabaseSql::default_instance_ = NULL;

gs2dbWorldDatabaseSql* gs2dbWorldDatabaseSql::New(::google::protobuf::Arena* arena) const {
  gs2dbWorldDatabaseSql* n = new gs2dbWorldDatabaseSql;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void gs2dbWorldDatabaseSql::Clear() {
  if (has_sql()) {
    sql_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool gs2dbWorldDatabaseSql::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.gs2dbWorldDatabaseSql)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string sql = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sql()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sql().data(), this->sql().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "message.gs2dbWorldDatabaseSql.sql");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.gs2dbWorldDatabaseSql)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.gs2dbWorldDatabaseSql)
  return false;
#undef DO_
}

void gs2dbWorldDatabaseSql::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.gs2dbWorldDatabaseSql)
  // required string sql = 1;
  if (has_sql()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sql().data(), this->sql().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "message.gs2dbWorldDatabaseSql.sql");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sql(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.gs2dbWorldDatabaseSql)
}

::google::protobuf::uint8* gs2dbWorldDatabaseSql::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.gs2dbWorldDatabaseSql)
  // required string sql = 1;
  if (has_sql()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sql().data(), this->sql().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "message.gs2dbWorldDatabaseSql.sql");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->sql(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.gs2dbWorldDatabaseSql)
  return target;
}

int gs2dbWorldDatabaseSql::ByteSize() const {
  int total_size = 0;

  // required string sql = 1;
  if (has_sql()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sql());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void gs2dbWorldDatabaseSql::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const gs2dbWorldDatabaseSql* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const gs2dbWorldDatabaseSql*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void gs2dbWorldDatabaseSql::MergeFrom(const gs2dbWorldDatabaseSql& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_sql()) {
      set_has_sql();
      sql_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sql_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void gs2dbWorldDatabaseSql::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void gs2dbWorldDatabaseSql::CopyFrom(const gs2dbWorldDatabaseSql& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool gs2dbWorldDatabaseSql::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void gs2dbWorldDatabaseSql::Swap(gs2dbWorldDatabaseSql* other) {
  if (other == this) return;
  InternalSwap(other);
}
void gs2dbWorldDatabaseSql::InternalSwap(gs2dbWorldDatabaseSql* other) {
  sql_.Swap(&other->sql_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata gs2dbWorldDatabaseSql::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = gs2dbWorldDatabaseSql_descriptor_;
  metadata.reflection = gs2dbWorldDatabaseSql_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// gs2dbWorldDatabaseSql

// required string sql = 1;
 bool gs2dbWorldDatabaseSql::has_sql() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void gs2dbWorldDatabaseSql::set_has_sql() {
  _has_bits_[0] |= 0x00000001u;
}
 void gs2dbWorldDatabaseSql::clear_has_sql() {
  _has_bits_[0] &= ~0x00000001u;
}
 void gs2dbWorldDatabaseSql::clear_sql() {
  sql_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sql();
}
 const ::std::string& gs2dbWorldDatabaseSql::sql() const {
  // @@protoc_insertion_point(field_get:message.gs2dbWorldDatabaseSql.sql)
  return sql_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void gs2dbWorldDatabaseSql::set_sql(const ::std::string& value) {
  set_has_sql();
  sql_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message.gs2dbWorldDatabaseSql.sql)
}
 void gs2dbWorldDatabaseSql::set_sql(const char* value) {
  set_has_sql();
  sql_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.gs2dbWorldDatabaseSql.sql)
}
 void gs2dbWorldDatabaseSql::set_sql(const char* value, size_t size) {
  set_has_sql();
  sql_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.gs2dbWorldDatabaseSql.sql)
}
 ::std::string* gs2dbWorldDatabaseSql::mutable_sql() {
  set_has_sql();
  // @@protoc_insertion_point(field_mutable:message.gs2dbWorldDatabaseSql.sql)
  return sql_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* gs2dbWorldDatabaseSql::release_sql() {
  clear_has_sql();
  return sql_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void gs2dbWorldDatabaseSql::set_allocated_sql(::std::string* sql) {
  if (sql != NULL) {
    set_has_sql();
  } else {
    clear_has_sql();
  }
  sql_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sql);
  // @@protoc_insertion_point(field_set_allocated:message.gs2dbWorldDatabaseSql.sql)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace message

// @@protoc_insertion_point(global_scope)
