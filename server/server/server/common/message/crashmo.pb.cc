// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: crashmo.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "crashmo.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace message {

namespace {

const ::google::protobuf::Descriptor* SaveOfficeMapData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SaveOfficeMapData_reflection_ = NULL;
const ::google::protobuf::Descriptor* SaveIncompleteMap_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SaveIncompleteMap_reflection_ = NULL;
const ::google::protobuf::Descriptor* SaveCompleteMap_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SaveCompleteMap_reflection_ = NULL;
const ::google::protobuf::Descriptor* CrashmoClientInit_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CrashmoClientInit_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_crashmo_2eproto() {
  protobuf_AddDesc_crashmo_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "crashmo.proto");
  GOOGLE_CHECK(file != NULL);
  SaveOfficeMapData_descriptor_ = file->message_type(0);
  static const int SaveOfficeMapData_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SaveOfficeMapData, map_),
  };
  SaveOfficeMapData_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SaveOfficeMapData_descriptor_,
      SaveOfficeMapData::default_instance_,
      SaveOfficeMapData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SaveOfficeMapData, _has_bits_[0]),
      -1,
      -1,
      sizeof(SaveOfficeMapData),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SaveOfficeMapData, _internal_metadata_),
      -1);
  SaveIncompleteMap_descriptor_ = file->message_type(1);
  static const int SaveIncompleteMap_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SaveIncompleteMap, map_),
  };
  SaveIncompleteMap_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SaveIncompleteMap_descriptor_,
      SaveIncompleteMap::default_instance_,
      SaveIncompleteMap_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SaveIncompleteMap, _has_bits_[0]),
      -1,
      -1,
      sizeof(SaveIncompleteMap),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SaveIncompleteMap, _internal_metadata_),
      -1);
  SaveCompleteMap_descriptor_ = file->message_type(2);
  static const int SaveCompleteMap_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SaveCompleteMap, map_),
  };
  SaveCompleteMap_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SaveCompleteMap_descriptor_,
      SaveCompleteMap::default_instance_,
      SaveCompleteMap_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SaveCompleteMap, _has_bits_[0]),
      -1,
      -1,
      sizeof(SaveCompleteMap),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SaveCompleteMap, _internal_metadata_),
      -1);
  CrashmoClientInit_descriptor_ = file->message_type(3);
  static const int CrashmoClientInit_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CrashmoClientInit, info_),
  };
  CrashmoClientInit_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CrashmoClientInit_descriptor_,
      CrashmoClientInit::default_instance_,
      CrashmoClientInit_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CrashmoClientInit, _has_bits_[0]),
      -1,
      -1,
      sizeof(CrashmoClientInit),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CrashmoClientInit, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_crashmo_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SaveOfficeMapData_descriptor_, &SaveOfficeMapData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SaveIncompleteMap_descriptor_, &SaveIncompleteMap::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SaveCompleteMap_descriptor_, &SaveCompleteMap::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CrashmoClientInit_descriptor_, &CrashmoClientInit::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_crashmo_2eproto() {
  delete SaveOfficeMapData::default_instance_;
  delete SaveOfficeMapData_reflection_;
  delete SaveIncompleteMap::default_instance_;
  delete SaveIncompleteMap_reflection_;
  delete SaveCompleteMap::default_instance_;
  delete SaveCompleteMap_reflection_;
  delete CrashmoClientInit::default_instance_;
  delete CrashmoClientInit_reflection_;
}

void protobuf_AddDesc_crashmo_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::message::protobuf_AddDesc_common_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\rcrashmo.proto\022\007message\032\014common.proto\"7"
    "\n\021SaveOfficeMapData\022\"\n\003map\030\001 \002(\0132\025.messa"
    "ge.CrashMapData\"7\n\021SaveIncompleteMap\022\"\n\003"
    "map\030\001 \002(\0132\025.message.CrashMapData\"5\n\017Save"
    "CompleteMap\022\"\n\003map\030\001 \002(\0132\025.message.Crash"
    "MapData\";\n\021CrashmoClientInit\022&\n\004info\030\001 \002"
    "(\0132\030.message.CrashPlayerInfo", 268);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "crashmo.proto", &protobuf_RegisterTypes);
  SaveOfficeMapData::default_instance_ = new SaveOfficeMapData();
  SaveIncompleteMap::default_instance_ = new SaveIncompleteMap();
  SaveCompleteMap::default_instance_ = new SaveCompleteMap();
  CrashmoClientInit::default_instance_ = new CrashmoClientInit();
  SaveOfficeMapData::default_instance_->InitAsDefaultInstance();
  SaveIncompleteMap::default_instance_->InitAsDefaultInstance();
  SaveCompleteMap::default_instance_->InitAsDefaultInstance();
  CrashmoClientInit::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_crashmo_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_crashmo_2eproto {
  StaticDescriptorInitializer_crashmo_2eproto() {
    protobuf_AddDesc_crashmo_2eproto();
  }
} static_descriptor_initializer_crashmo_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#ifndef _MSC_VER
const int SaveOfficeMapData::kMapFieldNumber;
#endif  // !_MSC_VER

SaveOfficeMapData::SaveOfficeMapData()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.SaveOfficeMapData)
}

void SaveOfficeMapData::InitAsDefaultInstance() {
  map_ = const_cast< ::message::CrashMapData*>(&::message::CrashMapData::default_instance());
}

SaveOfficeMapData::SaveOfficeMapData(const SaveOfficeMapData& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message.SaveOfficeMapData)
}

void SaveOfficeMapData::SharedCtor() {
  _cached_size_ = 0;
  map_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SaveOfficeMapData::~SaveOfficeMapData() {
  // @@protoc_insertion_point(destructor:message.SaveOfficeMapData)
  SharedDtor();
}

void SaveOfficeMapData::SharedDtor() {
  if (this != default_instance_) {
    delete map_;
  }
}

void SaveOfficeMapData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SaveOfficeMapData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SaveOfficeMapData_descriptor_;
}

const SaveOfficeMapData& SaveOfficeMapData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_crashmo_2eproto();
  return *default_instance_;
}

SaveOfficeMapData* SaveOfficeMapData::default_instance_ = NULL;

SaveOfficeMapData* SaveOfficeMapData::New(::google::protobuf::Arena* arena) const {
  SaveOfficeMapData* n = new SaveOfficeMapData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SaveOfficeMapData::Clear() {
  if (has_map()) {
    if (map_ != NULL) map_->::message::CrashMapData::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool SaveOfficeMapData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.SaveOfficeMapData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .message.CrashMapData map = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_map()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.SaveOfficeMapData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.SaveOfficeMapData)
  return false;
#undef DO_
}

void SaveOfficeMapData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.SaveOfficeMapData)
  // required .message.CrashMapData map = 1;
  if (has_map()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->map_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.SaveOfficeMapData)
}

::google::protobuf::uint8* SaveOfficeMapData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.SaveOfficeMapData)
  // required .message.CrashMapData map = 1;
  if (has_map()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, *this->map_, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.SaveOfficeMapData)
  return target;
}

int SaveOfficeMapData::ByteSize() const {
  int total_size = 0;

  // required .message.CrashMapData map = 1;
  if (has_map()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->map_);
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SaveOfficeMapData::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const SaveOfficeMapData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SaveOfficeMapData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SaveOfficeMapData::MergeFrom(const SaveOfficeMapData& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_map()) {
      mutable_map()->::message::CrashMapData::MergeFrom(from.map());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void SaveOfficeMapData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SaveOfficeMapData::CopyFrom(const SaveOfficeMapData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SaveOfficeMapData::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_map()) {
    if (!this->map_->IsInitialized()) return false;
  }
  return true;
}

void SaveOfficeMapData::Swap(SaveOfficeMapData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SaveOfficeMapData::InternalSwap(SaveOfficeMapData* other) {
  std::swap(map_, other->map_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SaveOfficeMapData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SaveOfficeMapData_descriptor_;
  metadata.reflection = SaveOfficeMapData_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SaveOfficeMapData

// required .message.CrashMapData map = 1;
 bool SaveOfficeMapData::has_map() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void SaveOfficeMapData::set_has_map() {
  _has_bits_[0] |= 0x00000001u;
}
 void SaveOfficeMapData::clear_has_map() {
  _has_bits_[0] &= ~0x00000001u;
}
 void SaveOfficeMapData::clear_map() {
  if (map_ != NULL) map_->::message::CrashMapData::Clear();
  clear_has_map();
}
 const ::message::CrashMapData& SaveOfficeMapData::map() const {
  // @@protoc_insertion_point(field_get:message.SaveOfficeMapData.map)
  return map_ != NULL ? *map_ : *default_instance_->map_;
}
 ::message::CrashMapData* SaveOfficeMapData::mutable_map() {
  set_has_map();
  if (map_ == NULL) {
    map_ = new ::message::CrashMapData;
  }
  // @@protoc_insertion_point(field_mutable:message.SaveOfficeMapData.map)
  return map_;
}
 ::message::CrashMapData* SaveOfficeMapData::release_map() {
  clear_has_map();
  ::message::CrashMapData* temp = map_;
  map_ = NULL;
  return temp;
}
 void SaveOfficeMapData::set_allocated_map(::message::CrashMapData* map) {
  delete map_;
  map_ = map;
  if (map) {
    set_has_map();
  } else {
    clear_has_map();
  }
  // @@protoc_insertion_point(field_set_allocated:message.SaveOfficeMapData.map)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int SaveIncompleteMap::kMapFieldNumber;
#endif  // !_MSC_VER

SaveIncompleteMap::SaveIncompleteMap()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.SaveIncompleteMap)
}

void SaveIncompleteMap::InitAsDefaultInstance() {
  map_ = const_cast< ::message::CrashMapData*>(&::message::CrashMapData::default_instance());
}

SaveIncompleteMap::SaveIncompleteMap(const SaveIncompleteMap& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message.SaveIncompleteMap)
}

void SaveIncompleteMap::SharedCtor() {
  _cached_size_ = 0;
  map_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SaveIncompleteMap::~SaveIncompleteMap() {
  // @@protoc_insertion_point(destructor:message.SaveIncompleteMap)
  SharedDtor();
}

void SaveIncompleteMap::SharedDtor() {
  if (this != default_instance_) {
    delete map_;
  }
}

void SaveIncompleteMap::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SaveIncompleteMap::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SaveIncompleteMap_descriptor_;
}

const SaveIncompleteMap& SaveIncompleteMap::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_crashmo_2eproto();
  return *default_instance_;
}

SaveIncompleteMap* SaveIncompleteMap::default_instance_ = NULL;

SaveIncompleteMap* SaveIncompleteMap::New(::google::protobuf::Arena* arena) const {
  SaveIncompleteMap* n = new SaveIncompleteMap;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SaveIncompleteMap::Clear() {
  if (has_map()) {
    if (map_ != NULL) map_->::message::CrashMapData::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool SaveIncompleteMap::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.SaveIncompleteMap)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .message.CrashMapData map = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_map()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.SaveIncompleteMap)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.SaveIncompleteMap)
  return false;
#undef DO_
}

void SaveIncompleteMap::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.SaveIncompleteMap)
  // required .message.CrashMapData map = 1;
  if (has_map()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->map_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.SaveIncompleteMap)
}

::google::protobuf::uint8* SaveIncompleteMap::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.SaveIncompleteMap)
  // required .message.CrashMapData map = 1;
  if (has_map()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, *this->map_, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.SaveIncompleteMap)
  return target;
}

int SaveIncompleteMap::ByteSize() const {
  int total_size = 0;

  // required .message.CrashMapData map = 1;
  if (has_map()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->map_);
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SaveIncompleteMap::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const SaveIncompleteMap* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SaveIncompleteMap*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SaveIncompleteMap::MergeFrom(const SaveIncompleteMap& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_map()) {
      mutable_map()->::message::CrashMapData::MergeFrom(from.map());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void SaveIncompleteMap::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SaveIncompleteMap::CopyFrom(const SaveIncompleteMap& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SaveIncompleteMap::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_map()) {
    if (!this->map_->IsInitialized()) return false;
  }
  return true;
}

void SaveIncompleteMap::Swap(SaveIncompleteMap* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SaveIncompleteMap::InternalSwap(SaveIncompleteMap* other) {
  std::swap(map_, other->map_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SaveIncompleteMap::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SaveIncompleteMap_descriptor_;
  metadata.reflection = SaveIncompleteMap_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SaveIncompleteMap

// required .message.CrashMapData map = 1;
 bool SaveIncompleteMap::has_map() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void SaveIncompleteMap::set_has_map() {
  _has_bits_[0] |= 0x00000001u;
}
 void SaveIncompleteMap::clear_has_map() {
  _has_bits_[0] &= ~0x00000001u;
}
 void SaveIncompleteMap::clear_map() {
  if (map_ != NULL) map_->::message::CrashMapData::Clear();
  clear_has_map();
}
 const ::message::CrashMapData& SaveIncompleteMap::map() const {
  // @@protoc_insertion_point(field_get:message.SaveIncompleteMap.map)
  return map_ != NULL ? *map_ : *default_instance_->map_;
}
 ::message::CrashMapData* SaveIncompleteMap::mutable_map() {
  set_has_map();
  if (map_ == NULL) {
    map_ = new ::message::CrashMapData;
  }
  // @@protoc_insertion_point(field_mutable:message.SaveIncompleteMap.map)
  return map_;
}
 ::message::CrashMapData* SaveIncompleteMap::release_map() {
  clear_has_map();
  ::message::CrashMapData* temp = map_;
  map_ = NULL;
  return temp;
}
 void SaveIncompleteMap::set_allocated_map(::message::CrashMapData* map) {
  delete map_;
  map_ = map;
  if (map) {
    set_has_map();
  } else {
    clear_has_map();
  }
  // @@protoc_insertion_point(field_set_allocated:message.SaveIncompleteMap.map)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int SaveCompleteMap::kMapFieldNumber;
#endif  // !_MSC_VER

SaveCompleteMap::SaveCompleteMap()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.SaveCompleteMap)
}

void SaveCompleteMap::InitAsDefaultInstance() {
  map_ = const_cast< ::message::CrashMapData*>(&::message::CrashMapData::default_instance());
}

SaveCompleteMap::SaveCompleteMap(const SaveCompleteMap& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message.SaveCompleteMap)
}

void SaveCompleteMap::SharedCtor() {
  _cached_size_ = 0;
  map_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SaveCompleteMap::~SaveCompleteMap() {
  // @@protoc_insertion_point(destructor:message.SaveCompleteMap)
  SharedDtor();
}

void SaveCompleteMap::SharedDtor() {
  if (this != default_instance_) {
    delete map_;
  }
}

void SaveCompleteMap::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SaveCompleteMap::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SaveCompleteMap_descriptor_;
}

const SaveCompleteMap& SaveCompleteMap::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_crashmo_2eproto();
  return *default_instance_;
}

SaveCompleteMap* SaveCompleteMap::default_instance_ = NULL;

SaveCompleteMap* SaveCompleteMap::New(::google::protobuf::Arena* arena) const {
  SaveCompleteMap* n = new SaveCompleteMap;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SaveCompleteMap::Clear() {
  if (has_map()) {
    if (map_ != NULL) map_->::message::CrashMapData::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool SaveCompleteMap::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.SaveCompleteMap)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .message.CrashMapData map = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_map()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.SaveCompleteMap)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.SaveCompleteMap)
  return false;
#undef DO_
}

void SaveCompleteMap::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.SaveCompleteMap)
  // required .message.CrashMapData map = 1;
  if (has_map()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->map_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.SaveCompleteMap)
}

::google::protobuf::uint8* SaveCompleteMap::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.SaveCompleteMap)
  // required .message.CrashMapData map = 1;
  if (has_map()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, *this->map_, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.SaveCompleteMap)
  return target;
}

int SaveCompleteMap::ByteSize() const {
  int total_size = 0;

  // required .message.CrashMapData map = 1;
  if (has_map()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->map_);
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SaveCompleteMap::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const SaveCompleteMap* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SaveCompleteMap*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SaveCompleteMap::MergeFrom(const SaveCompleteMap& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_map()) {
      mutable_map()->::message::CrashMapData::MergeFrom(from.map());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void SaveCompleteMap::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SaveCompleteMap::CopyFrom(const SaveCompleteMap& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SaveCompleteMap::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_map()) {
    if (!this->map_->IsInitialized()) return false;
  }
  return true;
}

void SaveCompleteMap::Swap(SaveCompleteMap* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SaveCompleteMap::InternalSwap(SaveCompleteMap* other) {
  std::swap(map_, other->map_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SaveCompleteMap::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SaveCompleteMap_descriptor_;
  metadata.reflection = SaveCompleteMap_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SaveCompleteMap

// required .message.CrashMapData map = 1;
 bool SaveCompleteMap::has_map() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void SaveCompleteMap::set_has_map() {
  _has_bits_[0] |= 0x00000001u;
}
 void SaveCompleteMap::clear_has_map() {
  _has_bits_[0] &= ~0x00000001u;
}
 void SaveCompleteMap::clear_map() {
  if (map_ != NULL) map_->::message::CrashMapData::Clear();
  clear_has_map();
}
 const ::message::CrashMapData& SaveCompleteMap::map() const {
  // @@protoc_insertion_point(field_get:message.SaveCompleteMap.map)
  return map_ != NULL ? *map_ : *default_instance_->map_;
}
 ::message::CrashMapData* SaveCompleteMap::mutable_map() {
  set_has_map();
  if (map_ == NULL) {
    map_ = new ::message::CrashMapData;
  }
  // @@protoc_insertion_point(field_mutable:message.SaveCompleteMap.map)
  return map_;
}
 ::message::CrashMapData* SaveCompleteMap::release_map() {
  clear_has_map();
  ::message::CrashMapData* temp = map_;
  map_ = NULL;
  return temp;
}
 void SaveCompleteMap::set_allocated_map(::message::CrashMapData* map) {
  delete map_;
  map_ = map;
  if (map) {
    set_has_map();
  } else {
    clear_has_map();
  }
  // @@protoc_insertion_point(field_set_allocated:message.SaveCompleteMap.map)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int CrashmoClientInit::kInfoFieldNumber;
#endif  // !_MSC_VER

CrashmoClientInit::CrashmoClientInit()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.CrashmoClientInit)
}

void CrashmoClientInit::InitAsDefaultInstance() {
  info_ = const_cast< ::message::CrashPlayerInfo*>(&::message::CrashPlayerInfo::default_instance());
}

CrashmoClientInit::CrashmoClientInit(const CrashmoClientInit& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message.CrashmoClientInit)
}

void CrashmoClientInit::SharedCtor() {
  _cached_size_ = 0;
  info_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CrashmoClientInit::~CrashmoClientInit() {
  // @@protoc_insertion_point(destructor:message.CrashmoClientInit)
  SharedDtor();
}

void CrashmoClientInit::SharedDtor() {
  if (this != default_instance_) {
    delete info_;
  }
}

void CrashmoClientInit::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CrashmoClientInit::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CrashmoClientInit_descriptor_;
}

const CrashmoClientInit& CrashmoClientInit::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_crashmo_2eproto();
  return *default_instance_;
}

CrashmoClientInit* CrashmoClientInit::default_instance_ = NULL;

CrashmoClientInit* CrashmoClientInit::New(::google::protobuf::Arena* arena) const {
  CrashmoClientInit* n = new CrashmoClientInit;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CrashmoClientInit::Clear() {
  if (has_info()) {
    if (info_ != NULL) info_->::message::CrashPlayerInfo::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CrashmoClientInit::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.CrashmoClientInit)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .message.CrashPlayerInfo info = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_info()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.CrashmoClientInit)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.CrashmoClientInit)
  return false;
#undef DO_
}

void CrashmoClientInit::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.CrashmoClientInit)
  // required .message.CrashPlayerInfo info = 1;
  if (has_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->info_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.CrashmoClientInit)
}

::google::protobuf::uint8* CrashmoClientInit::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.CrashmoClientInit)
  // required .message.CrashPlayerInfo info = 1;
  if (has_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, *this->info_, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.CrashmoClientInit)
  return target;
}

int CrashmoClientInit::ByteSize() const {
  int total_size = 0;

  // required .message.CrashPlayerInfo info = 1;
  if (has_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->info_);
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CrashmoClientInit::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CrashmoClientInit* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CrashmoClientInit*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CrashmoClientInit::MergeFrom(const CrashmoClientInit& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_info()) {
      mutable_info()->::message::CrashPlayerInfo::MergeFrom(from.info());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CrashmoClientInit::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CrashmoClientInit::CopyFrom(const CrashmoClientInit& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CrashmoClientInit::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_info()) {
    if (!this->info_->IsInitialized()) return false;
  }
  return true;
}

void CrashmoClientInit::Swap(CrashmoClientInit* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CrashmoClientInit::InternalSwap(CrashmoClientInit* other) {
  std::swap(info_, other->info_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CrashmoClientInit::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CrashmoClientInit_descriptor_;
  metadata.reflection = CrashmoClientInit_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CrashmoClientInit

// required .message.CrashPlayerInfo info = 1;
 bool CrashmoClientInit::has_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void CrashmoClientInit::set_has_info() {
  _has_bits_[0] |= 0x00000001u;
}
 void CrashmoClientInit::clear_has_info() {
  _has_bits_[0] &= ~0x00000001u;
}
 void CrashmoClientInit::clear_info() {
  if (info_ != NULL) info_->::message::CrashPlayerInfo::Clear();
  clear_has_info();
}
 const ::message::CrashPlayerInfo& CrashmoClientInit::info() const {
  // @@protoc_insertion_point(field_get:message.CrashmoClientInit.info)
  return info_ != NULL ? *info_ : *default_instance_->info_;
}
 ::message::CrashPlayerInfo* CrashmoClientInit::mutable_info() {
  set_has_info();
  if (info_ == NULL) {
    info_ = new ::message::CrashPlayerInfo;
  }
  // @@protoc_insertion_point(field_mutable:message.CrashmoClientInit.info)
  return info_;
}
 ::message::CrashPlayerInfo* CrashmoClientInit::release_info() {
  clear_has_info();
  ::message::CrashPlayerInfo* temp = info_;
  info_ = NULL;
  return temp;
}
 void CrashmoClientInit::set_allocated_info(::message::CrashPlayerInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    set_has_info();
  } else {
    clear_has_info();
  }
  // @@protoc_insertion_point(field_set_allocated:message.CrashmoClientInit.info)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace message

// @@protoc_insertion_point(global_scope)
