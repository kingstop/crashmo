// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: crashmo.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "crashmo.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace message {

namespace {

const ::google::protobuf::Descriptor* MsgIntStringProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgIntStringProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* CrashmoClientInit_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CrashmoClientInit_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgSaveMapReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgSaveMapReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgDelMapReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgDelMapReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgDelMapACK_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgDelMapACK_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgSaveMapACK_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgSaveMapACK_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgOfficilMapReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgOfficilMapReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgOfficilMapACK_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgOfficilMapACK_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgModifySectionNameReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgModifySectionNameReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgModifySectionNameACK_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgModifySectionNameACK_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgSectionNameReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgSectionNameReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgSectionNameACK_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgSectionNameACK_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgS2CNotifyPing_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgS2CNotifyPing_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgC2SOfficeStatusReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgC2SOfficeStatusReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgS2COfficeStatusACK_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgS2COfficeStatusACK_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgC2SOfficeMapReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgC2SOfficeMapReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgS2COfficeMapACK_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgS2COfficeMapACK_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgC2SRankMapReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgC2SRankMapReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgS2CRankMapACK_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgS2CRankMapACK_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgS2CRankMapRefreshNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgS2CRankMapRefreshNotify_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* ServerError_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* MapType_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_crashmo_2eproto() {
  protobuf_AddDesc_crashmo_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "crashmo.proto");
  GOOGLE_CHECK(file != NULL);
  MsgIntStringProto_descriptor_ = file->message_type(0);
  static const int MsgIntStringProto_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgIntStringProto, intger_temp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgIntStringProto, string_temp_),
  };
  MsgIntStringProto_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MsgIntStringProto_descriptor_,
      MsgIntStringProto::default_instance_,
      MsgIntStringProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgIntStringProto, _has_bits_[0]),
      -1,
      -1,
      sizeof(MsgIntStringProto),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgIntStringProto, _internal_metadata_),
      -1);
  CrashmoClientInit_descriptor_ = file->message_type(1);
  static const int CrashmoClientInit_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CrashmoClientInit, info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CrashmoClientInit, sections_names_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CrashmoClientInit, resources_config_max_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CrashmoClientInit, map_width_config_max_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CrashmoClientInit, map_height_config_max_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CrashmoClientInit, map_count_max_),
  };
  CrashmoClientInit_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CrashmoClientInit_descriptor_,
      CrashmoClientInit::default_instance_,
      CrashmoClientInit_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CrashmoClientInit, _has_bits_[0]),
      -1,
      -1,
      sizeof(CrashmoClientInit),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CrashmoClientInit, _internal_metadata_),
      -1);
  MsgSaveMapReq_descriptor_ = file->message_type(2);
  static const int MsgSaveMapReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSaveMapReq, map_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSaveMapReq, save_type_),
  };
  MsgSaveMapReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MsgSaveMapReq_descriptor_,
      MsgSaveMapReq::default_instance_,
      MsgSaveMapReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSaveMapReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(MsgSaveMapReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSaveMapReq, _internal_metadata_),
      -1);
  MsgDelMapReq_descriptor_ = file->message_type(3);
  static const int MsgDelMapReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDelMapReq, map_name_),
  };
  MsgDelMapReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MsgDelMapReq_descriptor_,
      MsgDelMapReq::default_instance_,
      MsgDelMapReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDelMapReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(MsgDelMapReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDelMapReq, _internal_metadata_),
      -1);
  MsgDelMapACK_descriptor_ = file->message_type(4);
  static const int MsgDelMapACK_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDelMapACK, map_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDelMapACK, map_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDelMapACK, error_),
  };
  MsgDelMapACK_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MsgDelMapACK_descriptor_,
      MsgDelMapACK::default_instance_,
      MsgDelMapACK_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDelMapACK, _has_bits_[0]),
      -1,
      -1,
      sizeof(MsgDelMapACK),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDelMapACK, _internal_metadata_),
      -1);
  MsgSaveMapACK_descriptor_ = file->message_type(5);
  static const int MsgSaveMapACK_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSaveMapACK, map_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSaveMapACK, save_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSaveMapACK, map_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSaveMapACK, error_),
  };
  MsgSaveMapACK_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MsgSaveMapACK_descriptor_,
      MsgSaveMapACK::default_instance_,
      MsgSaveMapACK_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSaveMapACK, _has_bits_[0]),
      -1,
      -1,
      sizeof(MsgSaveMapACK),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSaveMapACK, _internal_metadata_),
      -1);
  MsgOfficilMapReq_descriptor_ = file->message_type(6);
  static const int MsgOfficilMapReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgOfficilMapReq, page_),
  };
  MsgOfficilMapReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MsgOfficilMapReq_descriptor_,
      MsgOfficilMapReq::default_instance_,
      MsgOfficilMapReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgOfficilMapReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(MsgOfficilMapReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgOfficilMapReq, _internal_metadata_),
      -1);
  MsgOfficilMapACK_descriptor_ = file->message_type(7);
  static const int MsgOfficilMapACK_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgOfficilMapACK, page_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgOfficilMapACK, maps_),
  };
  MsgOfficilMapACK_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MsgOfficilMapACK_descriptor_,
      MsgOfficilMapACK::default_instance_,
      MsgOfficilMapACK_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgOfficilMapACK, _has_bits_[0]),
      -1,
      -1,
      sizeof(MsgOfficilMapACK),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgOfficilMapACK, _internal_metadata_),
      -1);
  MsgModifySectionNameReq_descriptor_ = file->message_type(8);
  static const int MsgModifySectionNameReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgModifySectionNameReq, section_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgModifySectionNameReq, section_name_),
  };
  MsgModifySectionNameReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MsgModifySectionNameReq_descriptor_,
      MsgModifySectionNameReq::default_instance_,
      MsgModifySectionNameReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgModifySectionNameReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(MsgModifySectionNameReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgModifySectionNameReq, _internal_metadata_),
      -1);
  MsgModifySectionNameACK_descriptor_ = file->message_type(9);
  static const int MsgModifySectionNameACK_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgModifySectionNameACK, section_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgModifySectionNameACK, section_name_),
  };
  MsgModifySectionNameACK_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MsgModifySectionNameACK_descriptor_,
      MsgModifySectionNameACK::default_instance_,
      MsgModifySectionNameACK_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgModifySectionNameACK, _has_bits_[0]),
      -1,
      -1,
      sizeof(MsgModifySectionNameACK),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgModifySectionNameACK, _internal_metadata_),
      -1);
  MsgSectionNameReq_descriptor_ = file->message_type(10);
  static const int MsgSectionNameReq_offsets_[1] = {
  };
  MsgSectionNameReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MsgSectionNameReq_descriptor_,
      MsgSectionNameReq::default_instance_,
      MsgSectionNameReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSectionNameReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(MsgSectionNameReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSectionNameReq, _internal_metadata_),
      -1);
  MsgSectionNameACK_descriptor_ = file->message_type(11);
  static const int MsgSectionNameACK_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSectionNameACK, sections_),
  };
  MsgSectionNameACK_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MsgSectionNameACK_descriptor_,
      MsgSectionNameACK::default_instance_,
      MsgSectionNameACK_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSectionNameACK, _has_bits_[0]),
      -1,
      -1,
      sizeof(MsgSectionNameACK),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSectionNameACK, _internal_metadata_),
      -1);
  MsgS2CNotifyPing_descriptor_ = file->message_type(12);
  static const int MsgS2CNotifyPing_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgS2CNotifyPing, time_stamp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgS2CNotifyPing, ping_count_),
  };
  MsgS2CNotifyPing_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MsgS2CNotifyPing_descriptor_,
      MsgS2CNotifyPing::default_instance_,
      MsgS2CNotifyPing_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgS2CNotifyPing, _has_bits_[0]),
      -1,
      -1,
      sizeof(MsgS2CNotifyPing),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgS2CNotifyPing, _internal_metadata_),
      -1);
  MsgC2SOfficeStatusReq_descriptor_ = file->message_type(13);
  static const int MsgC2SOfficeStatusReq_offsets_[1] = {
  };
  MsgC2SOfficeStatusReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MsgC2SOfficeStatusReq_descriptor_,
      MsgC2SOfficeStatusReq::default_instance_,
      MsgC2SOfficeStatusReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgC2SOfficeStatusReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(MsgC2SOfficeStatusReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgC2SOfficeStatusReq, _internal_metadata_),
      -1);
  MsgS2COfficeStatusACK_descriptor_ = file->message_type(14);
  static const int MsgS2COfficeStatusACK_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgS2COfficeStatusACK, chapter_id_),
  };
  MsgS2COfficeStatusACK_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MsgS2COfficeStatusACK_descriptor_,
      MsgS2COfficeStatusACK::default_instance_,
      MsgS2COfficeStatusACK_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgS2COfficeStatusACK, _has_bits_[0]),
      -1,
      -1,
      sizeof(MsgS2COfficeStatusACK),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgS2COfficeStatusACK, _internal_metadata_),
      -1);
  MsgC2SOfficeMapReq_descriptor_ = file->message_type(15);
  static const int MsgC2SOfficeMapReq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgC2SOfficeMapReq, chapter_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgC2SOfficeMapReq, section_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgC2SOfficeMapReq, map_count_),
  };
  MsgC2SOfficeMapReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MsgC2SOfficeMapReq_descriptor_,
      MsgC2SOfficeMapReq::default_instance_,
      MsgC2SOfficeMapReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgC2SOfficeMapReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(MsgC2SOfficeMapReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgC2SOfficeMapReq, _internal_metadata_),
      -1);
  MsgS2COfficeMapACK_descriptor_ = file->message_type(16);
  static const int MsgS2COfficeMapACK_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgS2COfficeMapACK, chapter_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgS2COfficeMapACK, section_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgS2COfficeMapACK, maps_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgS2COfficeMapACK, section_count_),
  };
  MsgS2COfficeMapACK_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MsgS2COfficeMapACK_descriptor_,
      MsgS2COfficeMapACK::default_instance_,
      MsgS2COfficeMapACK_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgS2COfficeMapACK, _has_bits_[0]),
      -1,
      -1,
      sizeof(MsgS2COfficeMapACK),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgS2COfficeMapACK, _internal_metadata_),
      -1);
  MsgC2SRankMapReq_descriptor_ = file->message_type(17);
  static const int MsgC2SRankMapReq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgC2SRankMapReq, rank_begin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgC2SRankMapReq, time_stamp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgC2SRankMapReq, map_count_),
  };
  MsgC2SRankMapReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MsgC2SRankMapReq_descriptor_,
      MsgC2SRankMapReq::default_instance_,
      MsgC2SRankMapReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgC2SRankMapReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(MsgC2SRankMapReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgC2SRankMapReq, _internal_metadata_),
      -1);
  MsgS2CRankMapACK_descriptor_ = file->message_type(18);
  static const int MsgS2CRankMapACK_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgS2CRankMapACK, maps_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgS2CRankMapACK, end_rank_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgS2CRankMapACK, time_stamp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgS2CRankMapACK, rank_map_count_),
  };
  MsgS2CRankMapACK_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MsgS2CRankMapACK_descriptor_,
      MsgS2CRankMapACK::default_instance_,
      MsgS2CRankMapACK_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgS2CRankMapACK, _has_bits_[0]),
      -1,
      -1,
      sizeof(MsgS2CRankMapACK),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgS2CRankMapACK, _internal_metadata_),
      -1);
  MsgS2CRankMapRefreshNotify_descriptor_ = file->message_type(19);
  static const int MsgS2CRankMapRefreshNotify_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgS2CRankMapRefreshNotify, time_stamp_),
  };
  MsgS2CRankMapRefreshNotify_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MsgS2CRankMapRefreshNotify_descriptor_,
      MsgS2CRankMapRefreshNotify::default_instance_,
      MsgS2CRankMapRefreshNotify_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgS2CRankMapRefreshNotify, _has_bits_[0]),
      -1,
      -1,
      sizeof(MsgS2CRankMapRefreshNotify),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgS2CRankMapRefreshNotify, _internal_metadata_),
      -1);
  ServerError_descriptor_ = file->enum_type(0);
  MapType_descriptor_ = file->enum_type(1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_crashmo_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MsgIntStringProto_descriptor_, &MsgIntStringProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CrashmoClientInit_descriptor_, &CrashmoClientInit::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MsgSaveMapReq_descriptor_, &MsgSaveMapReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MsgDelMapReq_descriptor_, &MsgDelMapReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MsgDelMapACK_descriptor_, &MsgDelMapACK::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MsgSaveMapACK_descriptor_, &MsgSaveMapACK::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MsgOfficilMapReq_descriptor_, &MsgOfficilMapReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MsgOfficilMapACK_descriptor_, &MsgOfficilMapACK::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MsgModifySectionNameReq_descriptor_, &MsgModifySectionNameReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MsgModifySectionNameACK_descriptor_, &MsgModifySectionNameACK::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MsgSectionNameReq_descriptor_, &MsgSectionNameReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MsgSectionNameACK_descriptor_, &MsgSectionNameACK::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MsgS2CNotifyPing_descriptor_, &MsgS2CNotifyPing::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MsgC2SOfficeStatusReq_descriptor_, &MsgC2SOfficeStatusReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MsgS2COfficeStatusACK_descriptor_, &MsgS2COfficeStatusACK::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MsgC2SOfficeMapReq_descriptor_, &MsgC2SOfficeMapReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MsgS2COfficeMapACK_descriptor_, &MsgS2COfficeMapACK::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MsgC2SRankMapReq_descriptor_, &MsgC2SRankMapReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MsgS2CRankMapACK_descriptor_, &MsgS2CRankMapACK::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MsgS2CRankMapRefreshNotify_descriptor_, &MsgS2CRankMapRefreshNotify::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_crashmo_2eproto() {
  delete MsgIntStringProto::default_instance_;
  delete MsgIntStringProto_reflection_;
  delete CrashmoClientInit::default_instance_;
  delete CrashmoClientInit_reflection_;
  delete MsgSaveMapReq::default_instance_;
  delete MsgSaveMapReq_reflection_;
  delete MsgDelMapReq::default_instance_;
  delete MsgDelMapReq_reflection_;
  delete MsgDelMapACK::default_instance_;
  delete MsgDelMapACK_reflection_;
  delete MsgSaveMapACK::default_instance_;
  delete MsgSaveMapACK_reflection_;
  delete MsgOfficilMapReq::default_instance_;
  delete MsgOfficilMapReq_reflection_;
  delete MsgOfficilMapACK::default_instance_;
  delete MsgOfficilMapACK_reflection_;
  delete MsgModifySectionNameReq::default_instance_;
  delete MsgModifySectionNameReq_reflection_;
  delete MsgModifySectionNameACK::default_instance_;
  delete MsgModifySectionNameACK_reflection_;
  delete MsgSectionNameReq::default_instance_;
  delete MsgSectionNameReq_reflection_;
  delete MsgSectionNameACK::default_instance_;
  delete MsgSectionNameACK_reflection_;
  delete MsgS2CNotifyPing::default_instance_;
  delete MsgS2CNotifyPing_reflection_;
  delete MsgC2SOfficeStatusReq::default_instance_;
  delete MsgC2SOfficeStatusReq_reflection_;
  delete MsgS2COfficeStatusACK::default_instance_;
  delete MsgS2COfficeStatusACK_reflection_;
  delete MsgC2SOfficeMapReq::default_instance_;
  delete MsgC2SOfficeMapReq_reflection_;
  delete MsgS2COfficeMapACK::default_instance_;
  delete MsgS2COfficeMapACK_reflection_;
  delete MsgC2SRankMapReq::default_instance_;
  delete MsgC2SRankMapReq_reflection_;
  delete MsgS2CRankMapACK::default_instance_;
  delete MsgS2CRankMapACK_reflection_;
  delete MsgS2CRankMapRefreshNotify::default_instance_;
  delete MsgS2CRankMapRefreshNotify_reflection_;
}

void protobuf_AddDesc_crashmo_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::message::protobuf_AddDesc_common_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\rcrashmo.proto\022\007message\032\014common.proto\"="
    "\n\021MsgIntStringProto\022\023\n\013intger_temp\030\001 \002(\005"
    "\022\023\n\013string_temp\030\002 \002(\t\"\363\001\n\021CrashmoClientI"
    "nit\022&\n\004info\030\001 \002(\0132\030.message.CrashPlayerI"
    "nfo\0222\n\016sections_names\030\002 \003(\0132\032.message.Ms"
    "gIntStringProto\022.\n\024resources_config_max\030"
    "\003 \003(\0132\020.message.intPair\022\034\n\024map_width_con"
    "fig_max\030\004 \002(\005\022\035\n\025map_height_config_max\030\005"
    " \002(\005\022\025\n\rmap_count_max\030\006 \002(\005\"c\n\rMsgSaveMa"
    "pReq\022\"\n\003map\030\001 \002(\0132\025.message.CrashMapData"
    "\022.\n\tsave_type\030\002 \002(\0162\020.message.MapType:\tO"
    "fficeMap\" \n\014MsgDelMapReq\022\020\n\010map_name\030\001 \002"
    "(\t\"\204\001\n\014MsgDelMapACK\022\020\n\010map_name\030\001 \002(\t\022-\n"
    "\010map_type\030\002 \002(\0162\020.message.MapType:\tOffic"
    "eMap\0223\n\005error\030\003 \002(\0162\024.message.ServerErro"
    "r:\016ServerError_NO\"\252\001\n\rMsgSaveMapACK\022\020\n\010m"
    "ap_name\030\001 \002(\t\022.\n\tsave_type\030\002 \002(\0162\020.messa"
    "ge.MapType:\tOfficeMap\022\"\n\003map\030\003 \002(\0132\025.mes"
    "sage.CrashMapData\0223\n\005error\030\004 \002(\0162\024.messa"
    "ge.ServerError:\016ServerError_NO\" \n\020MsgOff"
    "icilMapReq\022\014\n\004page\030\001 \002(\005\"E\n\020MsgOfficilMa"
    "pACK\022\014\n\004page\030\001 \002(\005\022#\n\004maps\030\002 \003(\0132\025.messa"
    "ge.CrashMapData\"@\n\027MsgModifySectionNameR"
    "eq\022\017\n\007section\030\001 \002(\005\022\024\n\014section_name\030\002 \002("
    "\t\"@\n\027MsgModifySectionNameACK\022\017\n\007section\030"
    "\001 \002(\005\022\024\n\014section_name\030\002 \002(\t\"\023\n\021MsgSectio"
    "nNameReq\"A\n\021MsgSectionNameACK\022,\n\010section"
    "s\030\001 \003(\0132\032.message.MsgIntStringProto\":\n\020M"
    "sgS2CNotifyPing\022\022\n\ntime_stamp\030\001 \002(\003\022\022\n\np"
    "ing_count\030\002 \002(\005\"\027\n\025MsgC2SOfficeStatusReq"
    "\"+\n\025MsgS2COfficeStatusACK\022\022\n\nchapter_id\030"
    "\001 \003(\005\"O\n\022MsgC2SOfficeMapReq\022\022\n\nchapter_i"
    "d\030\001 \002(\005\022\022\n\nsection_id\030\002 \002(\005\022\021\n\tmap_count"
    "\030\003 \002(\005\"x\n\022MsgS2COfficeMapACK\022\022\n\nchapter_"
    "id\030\001 \002(\005\022\022\n\nsection_id\030\002 \002(\005\022#\n\004maps\030\003 \003"
    "(\0132\025.message.CrashMapData\022\025\n\rsection_cou"
    "nt\030\004 \002(\005\"M\n\020MsgC2SRankMapReq\022\022\n\nrank_beg"
    "in\030\001 \002(\005\022\022\n\ntime_stamp\030\002 \002(\003\022\021\n\tmap_coun"
    "t\030\003 \002(\005\"~\n\020MsgS2CRankMapACK\022,\n\004maps\030\001 \003("
    "\0132\036.message.CrashPlayerPublishMap\022\020\n\010end"
    "_rank\030\002 \002(\005\022\022\n\ntime_stamp\030\003 \002(\003\022\026\n\016rank_"
    "map_count\030\004 \002(\005\"0\n\032MsgS2CRankMapRefreshN"
    "otify\022\022\n\ntime_stamp\030\001 \002(\003*\177\n\013ServerError"
    "\022\022\n\016ServerError_NO\020\000\022\026\n\022ServerError_Unkn"
    "ow\020\001\022\034\n\030ServerError_HaveSameName\020\002\022&\n\"Se"
    "rverError_NotFoundMapNameWhenDel\020\003*<\n\007Ma"
    "pType\022\r\n\tOfficeMap\020\001\022\021\n\rImcompleteMap\020\002\022"
    "\017\n\013CompleteMap\020\003", 1896);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "crashmo.proto", &protobuf_RegisterTypes);
  MsgIntStringProto::default_instance_ = new MsgIntStringProto();
  CrashmoClientInit::default_instance_ = new CrashmoClientInit();
  MsgSaveMapReq::default_instance_ = new MsgSaveMapReq();
  MsgDelMapReq::default_instance_ = new MsgDelMapReq();
  MsgDelMapACK::default_instance_ = new MsgDelMapACK();
  MsgSaveMapACK::default_instance_ = new MsgSaveMapACK();
  MsgOfficilMapReq::default_instance_ = new MsgOfficilMapReq();
  MsgOfficilMapACK::default_instance_ = new MsgOfficilMapACK();
  MsgModifySectionNameReq::default_instance_ = new MsgModifySectionNameReq();
  MsgModifySectionNameACK::default_instance_ = new MsgModifySectionNameACK();
  MsgSectionNameReq::default_instance_ = new MsgSectionNameReq();
  MsgSectionNameACK::default_instance_ = new MsgSectionNameACK();
  MsgS2CNotifyPing::default_instance_ = new MsgS2CNotifyPing();
  MsgC2SOfficeStatusReq::default_instance_ = new MsgC2SOfficeStatusReq();
  MsgS2COfficeStatusACK::default_instance_ = new MsgS2COfficeStatusACK();
  MsgC2SOfficeMapReq::default_instance_ = new MsgC2SOfficeMapReq();
  MsgS2COfficeMapACK::default_instance_ = new MsgS2COfficeMapACK();
  MsgC2SRankMapReq::default_instance_ = new MsgC2SRankMapReq();
  MsgS2CRankMapACK::default_instance_ = new MsgS2CRankMapACK();
  MsgS2CRankMapRefreshNotify::default_instance_ = new MsgS2CRankMapRefreshNotify();
  MsgIntStringProto::default_instance_->InitAsDefaultInstance();
  CrashmoClientInit::default_instance_->InitAsDefaultInstance();
  MsgSaveMapReq::default_instance_->InitAsDefaultInstance();
  MsgDelMapReq::default_instance_->InitAsDefaultInstance();
  MsgDelMapACK::default_instance_->InitAsDefaultInstance();
  MsgSaveMapACK::default_instance_->InitAsDefaultInstance();
  MsgOfficilMapReq::default_instance_->InitAsDefaultInstance();
  MsgOfficilMapACK::default_instance_->InitAsDefaultInstance();
  MsgModifySectionNameReq::default_instance_->InitAsDefaultInstance();
  MsgModifySectionNameACK::default_instance_->InitAsDefaultInstance();
  MsgSectionNameReq::default_instance_->InitAsDefaultInstance();
  MsgSectionNameACK::default_instance_->InitAsDefaultInstance();
  MsgS2CNotifyPing::default_instance_->InitAsDefaultInstance();
  MsgC2SOfficeStatusReq::default_instance_->InitAsDefaultInstance();
  MsgS2COfficeStatusACK::default_instance_->InitAsDefaultInstance();
  MsgC2SOfficeMapReq::default_instance_->InitAsDefaultInstance();
  MsgS2COfficeMapACK::default_instance_->InitAsDefaultInstance();
  MsgC2SRankMapReq::default_instance_->InitAsDefaultInstance();
  MsgS2CRankMapACK::default_instance_->InitAsDefaultInstance();
  MsgS2CRankMapRefreshNotify::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_crashmo_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_crashmo_2eproto {
  StaticDescriptorInitializer_crashmo_2eproto() {
    protobuf_AddDesc_crashmo_2eproto();
  }
} static_descriptor_initializer_crashmo_2eproto_;
const ::google::protobuf::EnumDescriptor* ServerError_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ServerError_descriptor_;
}
bool ServerError_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* MapType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MapType_descriptor_;
}
bool MapType_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}


namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#ifndef _MSC_VER
const int MsgIntStringProto::kIntgerTempFieldNumber;
const int MsgIntStringProto::kStringTempFieldNumber;
#endif  // !_MSC_VER

MsgIntStringProto::MsgIntStringProto()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.MsgIntStringProto)
}

void MsgIntStringProto::InitAsDefaultInstance() {
}

MsgIntStringProto::MsgIntStringProto(const MsgIntStringProto& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message.MsgIntStringProto)
}

void MsgIntStringProto::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  intger_temp_ = 0;
  string_temp_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgIntStringProto::~MsgIntStringProto() {
  // @@protoc_insertion_point(destructor:message.MsgIntStringProto)
  SharedDtor();
}

void MsgIntStringProto::SharedDtor() {
  string_temp_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void MsgIntStringProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgIntStringProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgIntStringProto_descriptor_;
}

const MsgIntStringProto& MsgIntStringProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_crashmo_2eproto();
  return *default_instance_;
}

MsgIntStringProto* MsgIntStringProto::default_instance_ = NULL;

MsgIntStringProto* MsgIntStringProto::New(::google::protobuf::Arena* arena) const {
  MsgIntStringProto* n = new MsgIntStringProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgIntStringProto::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    intger_temp_ = 0;
    if (has_string_temp()) {
      string_temp_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool MsgIntStringProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.MsgIntStringProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 intger_temp = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &intger_temp_)));
          set_has_intger_temp();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_string_temp;
        break;
      }

      // required string string_temp = 2;
      case 2: {
        if (tag == 18) {
         parse_string_temp:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_string_temp()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->string_temp().data(), this->string_temp().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "message.MsgIntStringProto.string_temp");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.MsgIntStringProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.MsgIntStringProto)
  return false;
#undef DO_
}

void MsgIntStringProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.MsgIntStringProto)
  // required int32 intger_temp = 1;
  if (has_intger_temp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->intger_temp(), output);
  }

  // required string string_temp = 2;
  if (has_string_temp()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->string_temp().data(), this->string_temp().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "message.MsgIntStringProto.string_temp");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->string_temp(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.MsgIntStringProto)
}

::google::protobuf::uint8* MsgIntStringProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.MsgIntStringProto)
  // required int32 intger_temp = 1;
  if (has_intger_temp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->intger_temp(), target);
  }

  // required string string_temp = 2;
  if (has_string_temp()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->string_temp().data(), this->string_temp().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "message.MsgIntStringProto.string_temp");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->string_temp(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.MsgIntStringProto)
  return target;
}

int MsgIntStringProto::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_intger_temp()) {
    // required int32 intger_temp = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->intger_temp());
  }

  if (has_string_temp()) {
    // required string string_temp = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->string_temp());
  }

  return total_size;
}
int MsgIntStringProto::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 intger_temp = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->intger_temp());

    // required string string_temp = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->string_temp());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgIntStringProto::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MsgIntStringProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgIntStringProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgIntStringProto::MergeFrom(const MsgIntStringProto& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_intger_temp()) {
      set_intger_temp(from.intger_temp());
    }
    if (from.has_string_temp()) {
      set_has_string_temp();
      string_temp_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.string_temp_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void MsgIntStringProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgIntStringProto::CopyFrom(const MsgIntStringProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgIntStringProto::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void MsgIntStringProto::Swap(MsgIntStringProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgIntStringProto::InternalSwap(MsgIntStringProto* other) {
  std::swap(intger_temp_, other->intger_temp_);
  string_temp_.Swap(&other->string_temp_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgIntStringProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgIntStringProto_descriptor_;
  metadata.reflection = MsgIntStringProto_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgIntStringProto

// required int32 intger_temp = 1;
 bool MsgIntStringProto::has_intger_temp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void MsgIntStringProto::set_has_intger_temp() {
  _has_bits_[0] |= 0x00000001u;
}
 void MsgIntStringProto::clear_has_intger_temp() {
  _has_bits_[0] &= ~0x00000001u;
}
 void MsgIntStringProto::clear_intger_temp() {
  intger_temp_ = 0;
  clear_has_intger_temp();
}
 ::google::protobuf::int32 MsgIntStringProto::intger_temp() const {
  // @@protoc_insertion_point(field_get:message.MsgIntStringProto.intger_temp)
  return intger_temp_;
}
 void MsgIntStringProto::set_intger_temp(::google::protobuf::int32 value) {
  set_has_intger_temp();
  intger_temp_ = value;
  // @@protoc_insertion_point(field_set:message.MsgIntStringProto.intger_temp)
}

// required string string_temp = 2;
 bool MsgIntStringProto::has_string_temp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
 void MsgIntStringProto::set_has_string_temp() {
  _has_bits_[0] |= 0x00000002u;
}
 void MsgIntStringProto::clear_has_string_temp() {
  _has_bits_[0] &= ~0x00000002u;
}
 void MsgIntStringProto::clear_string_temp() {
  string_temp_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_string_temp();
}
 const ::std::string& MsgIntStringProto::string_temp() const {
  // @@protoc_insertion_point(field_get:message.MsgIntStringProto.string_temp)
  return string_temp_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MsgIntStringProto::set_string_temp(const ::std::string& value) {
  set_has_string_temp();
  string_temp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message.MsgIntStringProto.string_temp)
}
 void MsgIntStringProto::set_string_temp(const char* value) {
  set_has_string_temp();
  string_temp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.MsgIntStringProto.string_temp)
}
 void MsgIntStringProto::set_string_temp(const char* value, size_t size) {
  set_has_string_temp();
  string_temp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.MsgIntStringProto.string_temp)
}
 ::std::string* MsgIntStringProto::mutable_string_temp() {
  set_has_string_temp();
  // @@protoc_insertion_point(field_mutable:message.MsgIntStringProto.string_temp)
  return string_temp_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MsgIntStringProto::release_string_temp() {
  clear_has_string_temp();
  return string_temp_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MsgIntStringProto::set_allocated_string_temp(::std::string* string_temp) {
  if (string_temp != NULL) {
    set_has_string_temp();
  } else {
    clear_has_string_temp();
  }
  string_temp_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), string_temp);
  // @@protoc_insertion_point(field_set_allocated:message.MsgIntStringProto.string_temp)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int CrashmoClientInit::kInfoFieldNumber;
const int CrashmoClientInit::kSectionsNamesFieldNumber;
const int CrashmoClientInit::kResourcesConfigMaxFieldNumber;
const int CrashmoClientInit::kMapWidthConfigMaxFieldNumber;
const int CrashmoClientInit::kMapHeightConfigMaxFieldNumber;
const int CrashmoClientInit::kMapCountMaxFieldNumber;
#endif  // !_MSC_VER

CrashmoClientInit::CrashmoClientInit()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.CrashmoClientInit)
}

void CrashmoClientInit::InitAsDefaultInstance() {
  info_ = const_cast< ::message::CrashPlayerInfo*>(&::message::CrashPlayerInfo::default_instance());
}

CrashmoClientInit::CrashmoClientInit(const CrashmoClientInit& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message.CrashmoClientInit)
}

void CrashmoClientInit::SharedCtor() {
  _cached_size_ = 0;
  info_ = NULL;
  map_width_config_max_ = 0;
  map_height_config_max_ = 0;
  map_count_max_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CrashmoClientInit::~CrashmoClientInit() {
  // @@protoc_insertion_point(destructor:message.CrashmoClientInit)
  SharedDtor();
}

void CrashmoClientInit::SharedDtor() {
  if (this != default_instance_) {
    delete info_;
  }
}

void CrashmoClientInit::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CrashmoClientInit::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CrashmoClientInit_descriptor_;
}

const CrashmoClientInit& CrashmoClientInit::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_crashmo_2eproto();
  return *default_instance_;
}

CrashmoClientInit* CrashmoClientInit::default_instance_ = NULL;

CrashmoClientInit* CrashmoClientInit::New(::google::protobuf::Arena* arena) const {
  CrashmoClientInit* n = new CrashmoClientInit;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CrashmoClientInit::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CrashmoClientInit*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 57) {
    ZR_(map_width_config_max_, map_count_max_);
    if (has_info()) {
      if (info_ != NULL) info_->::message::CrashPlayerInfo::Clear();
    }
  }

#undef ZR_HELPER_
#undef ZR_

  sections_names_.Clear();
  resources_config_max_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CrashmoClientInit::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.CrashmoClientInit)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .message.CrashPlayerInfo info = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_info()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_sections_names;
        break;
      }

      // repeated .message.MsgIntStringProto sections_names = 2;
      case 2: {
        if (tag == 18) {
         parse_sections_names:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_sections_names()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_sections_names;
        if (input->ExpectTag(26)) goto parse_resources_config_max;
        break;
      }

      // repeated .message.intPair resources_config_max = 3;
      case 3: {
        if (tag == 26) {
         parse_resources_config_max:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_resources_config_max()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_resources_config_max;
        if (input->ExpectTag(32)) goto parse_map_width_config_max;
        break;
      }

      // required int32 map_width_config_max = 4;
      case 4: {
        if (tag == 32) {
         parse_map_width_config_max:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &map_width_config_max_)));
          set_has_map_width_config_max();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_map_height_config_max;
        break;
      }

      // required int32 map_height_config_max = 5;
      case 5: {
        if (tag == 40) {
         parse_map_height_config_max:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &map_height_config_max_)));
          set_has_map_height_config_max();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_map_count_max;
        break;
      }

      // required int32 map_count_max = 6;
      case 6: {
        if (tag == 48) {
         parse_map_count_max:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &map_count_max_)));
          set_has_map_count_max();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.CrashmoClientInit)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.CrashmoClientInit)
  return false;
#undef DO_
}

void CrashmoClientInit::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.CrashmoClientInit)
  // required .message.CrashPlayerInfo info = 1;
  if (has_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->info_, output);
  }

  // repeated .message.MsgIntStringProto sections_names = 2;
  for (unsigned int i = 0, n = this->sections_names_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->sections_names(i), output);
  }

  // repeated .message.intPair resources_config_max = 3;
  for (unsigned int i = 0, n = this->resources_config_max_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->resources_config_max(i), output);
  }

  // required int32 map_width_config_max = 4;
  if (has_map_width_config_max()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->map_width_config_max(), output);
  }

  // required int32 map_height_config_max = 5;
  if (has_map_height_config_max()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->map_height_config_max(), output);
  }

  // required int32 map_count_max = 6;
  if (has_map_count_max()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->map_count_max(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.CrashmoClientInit)
}

::google::protobuf::uint8* CrashmoClientInit::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.CrashmoClientInit)
  // required .message.CrashPlayerInfo info = 1;
  if (has_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, *this->info_, target);
  }

  // repeated .message.MsgIntStringProto sections_names = 2;
  for (unsigned int i = 0, n = this->sections_names_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->sections_names(i), target);
  }

  // repeated .message.intPair resources_config_max = 3;
  for (unsigned int i = 0, n = this->resources_config_max_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->resources_config_max(i), target);
  }

  // required int32 map_width_config_max = 4;
  if (has_map_width_config_max()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->map_width_config_max(), target);
  }

  // required int32 map_height_config_max = 5;
  if (has_map_height_config_max()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->map_height_config_max(), target);
  }

  // required int32 map_count_max = 6;
  if (has_map_count_max()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->map_count_max(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.CrashmoClientInit)
  return target;
}

int CrashmoClientInit::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_info()) {
    // required .message.CrashPlayerInfo info = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->info_);
  }

  if (has_map_width_config_max()) {
    // required int32 map_width_config_max = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->map_width_config_max());
  }

  if (has_map_height_config_max()) {
    // required int32 map_height_config_max = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->map_height_config_max());
  }

  if (has_map_count_max()) {
    // required int32 map_count_max = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->map_count_max());
  }

  return total_size;
}
int CrashmoClientInit::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000039) ^ 0x00000039) == 0) {  // All required fields are present.
    // required .message.CrashPlayerInfo info = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->info_);

    // required int32 map_width_config_max = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->map_width_config_max());

    // required int32 map_height_config_max = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->map_height_config_max());

    // required int32 map_count_max = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->map_count_max());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .message.MsgIntStringProto sections_names = 2;
  total_size += 1 * this->sections_names_size();
  for (int i = 0; i < this->sections_names_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->sections_names(i));
  }

  // repeated .message.intPair resources_config_max = 3;
  total_size += 1 * this->resources_config_max_size();
  for (int i = 0; i < this->resources_config_max_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->resources_config_max(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CrashmoClientInit::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CrashmoClientInit* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CrashmoClientInit*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CrashmoClientInit::MergeFrom(const CrashmoClientInit& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  sections_names_.MergeFrom(from.sections_names_);
  resources_config_max_.MergeFrom(from.resources_config_max_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_info()) {
      mutable_info()->::message::CrashPlayerInfo::MergeFrom(from.info());
    }
    if (from.has_map_width_config_max()) {
      set_map_width_config_max(from.map_width_config_max());
    }
    if (from.has_map_height_config_max()) {
      set_map_height_config_max(from.map_height_config_max());
    }
    if (from.has_map_count_max()) {
      set_map_count_max(from.map_count_max());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CrashmoClientInit::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CrashmoClientInit::CopyFrom(const CrashmoClientInit& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CrashmoClientInit::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000039) != 0x00000039) return false;

  if (has_info()) {
    if (!this->info_->IsInitialized()) return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(this->sections_names())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->resources_config_max())) return false;
  return true;
}

void CrashmoClientInit::Swap(CrashmoClientInit* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CrashmoClientInit::InternalSwap(CrashmoClientInit* other) {
  std::swap(info_, other->info_);
  sections_names_.UnsafeArenaSwap(&other->sections_names_);
  resources_config_max_.UnsafeArenaSwap(&other->resources_config_max_);
  std::swap(map_width_config_max_, other->map_width_config_max_);
  std::swap(map_height_config_max_, other->map_height_config_max_);
  std::swap(map_count_max_, other->map_count_max_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CrashmoClientInit::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CrashmoClientInit_descriptor_;
  metadata.reflection = CrashmoClientInit_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CrashmoClientInit

// required .message.CrashPlayerInfo info = 1;
 bool CrashmoClientInit::has_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void CrashmoClientInit::set_has_info() {
  _has_bits_[0] |= 0x00000001u;
}
 void CrashmoClientInit::clear_has_info() {
  _has_bits_[0] &= ~0x00000001u;
}
 void CrashmoClientInit::clear_info() {
  if (info_ != NULL) info_->::message::CrashPlayerInfo::Clear();
  clear_has_info();
}
 const ::message::CrashPlayerInfo& CrashmoClientInit::info() const {
  // @@protoc_insertion_point(field_get:message.CrashmoClientInit.info)
  return info_ != NULL ? *info_ : *default_instance_->info_;
}
 ::message::CrashPlayerInfo* CrashmoClientInit::mutable_info() {
  set_has_info();
  if (info_ == NULL) {
    info_ = new ::message::CrashPlayerInfo;
  }
  // @@protoc_insertion_point(field_mutable:message.CrashmoClientInit.info)
  return info_;
}
 ::message::CrashPlayerInfo* CrashmoClientInit::release_info() {
  clear_has_info();
  ::message::CrashPlayerInfo* temp = info_;
  info_ = NULL;
  return temp;
}
 void CrashmoClientInit::set_allocated_info(::message::CrashPlayerInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    set_has_info();
  } else {
    clear_has_info();
  }
  // @@protoc_insertion_point(field_set_allocated:message.CrashmoClientInit.info)
}

// repeated .message.MsgIntStringProto sections_names = 2;
 int CrashmoClientInit::sections_names_size() const {
  return sections_names_.size();
}
 void CrashmoClientInit::clear_sections_names() {
  sections_names_.Clear();
}
 const ::message::MsgIntStringProto& CrashmoClientInit::sections_names(int index) const {
  // @@protoc_insertion_point(field_get:message.CrashmoClientInit.sections_names)
  return sections_names_.Get(index);
}
 ::message::MsgIntStringProto* CrashmoClientInit::mutable_sections_names(int index) {
  // @@protoc_insertion_point(field_mutable:message.CrashmoClientInit.sections_names)
  return sections_names_.Mutable(index);
}
 ::message::MsgIntStringProto* CrashmoClientInit::add_sections_names() {
  // @@protoc_insertion_point(field_add:message.CrashmoClientInit.sections_names)
  return sections_names_.Add();
}
 const ::google::protobuf::RepeatedPtrField< ::message::MsgIntStringProto >&
CrashmoClientInit::sections_names() const {
  // @@protoc_insertion_point(field_list:message.CrashmoClientInit.sections_names)
  return sections_names_;
}
 ::google::protobuf::RepeatedPtrField< ::message::MsgIntStringProto >*
CrashmoClientInit::mutable_sections_names() {
  // @@protoc_insertion_point(field_mutable_list:message.CrashmoClientInit.sections_names)
  return &sections_names_;
}

// repeated .message.intPair resources_config_max = 3;
 int CrashmoClientInit::resources_config_max_size() const {
  return resources_config_max_.size();
}
 void CrashmoClientInit::clear_resources_config_max() {
  resources_config_max_.Clear();
}
 const ::message::intPair& CrashmoClientInit::resources_config_max(int index) const {
  // @@protoc_insertion_point(field_get:message.CrashmoClientInit.resources_config_max)
  return resources_config_max_.Get(index);
}
 ::message::intPair* CrashmoClientInit::mutable_resources_config_max(int index) {
  // @@protoc_insertion_point(field_mutable:message.CrashmoClientInit.resources_config_max)
  return resources_config_max_.Mutable(index);
}
 ::message::intPair* CrashmoClientInit::add_resources_config_max() {
  // @@protoc_insertion_point(field_add:message.CrashmoClientInit.resources_config_max)
  return resources_config_max_.Add();
}
 const ::google::protobuf::RepeatedPtrField< ::message::intPair >&
CrashmoClientInit::resources_config_max() const {
  // @@protoc_insertion_point(field_list:message.CrashmoClientInit.resources_config_max)
  return resources_config_max_;
}
 ::google::protobuf::RepeatedPtrField< ::message::intPair >*
CrashmoClientInit::mutable_resources_config_max() {
  // @@protoc_insertion_point(field_mutable_list:message.CrashmoClientInit.resources_config_max)
  return &resources_config_max_;
}

// required int32 map_width_config_max = 4;
 bool CrashmoClientInit::has_map_width_config_max() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
 void CrashmoClientInit::set_has_map_width_config_max() {
  _has_bits_[0] |= 0x00000008u;
}
 void CrashmoClientInit::clear_has_map_width_config_max() {
  _has_bits_[0] &= ~0x00000008u;
}
 void CrashmoClientInit::clear_map_width_config_max() {
  map_width_config_max_ = 0;
  clear_has_map_width_config_max();
}
 ::google::protobuf::int32 CrashmoClientInit::map_width_config_max() const {
  // @@protoc_insertion_point(field_get:message.CrashmoClientInit.map_width_config_max)
  return map_width_config_max_;
}
 void CrashmoClientInit::set_map_width_config_max(::google::protobuf::int32 value) {
  set_has_map_width_config_max();
  map_width_config_max_ = value;
  // @@protoc_insertion_point(field_set:message.CrashmoClientInit.map_width_config_max)
}

// required int32 map_height_config_max = 5;
 bool CrashmoClientInit::has_map_height_config_max() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
 void CrashmoClientInit::set_has_map_height_config_max() {
  _has_bits_[0] |= 0x00000010u;
}
 void CrashmoClientInit::clear_has_map_height_config_max() {
  _has_bits_[0] &= ~0x00000010u;
}
 void CrashmoClientInit::clear_map_height_config_max() {
  map_height_config_max_ = 0;
  clear_has_map_height_config_max();
}
 ::google::protobuf::int32 CrashmoClientInit::map_height_config_max() const {
  // @@protoc_insertion_point(field_get:message.CrashmoClientInit.map_height_config_max)
  return map_height_config_max_;
}
 void CrashmoClientInit::set_map_height_config_max(::google::protobuf::int32 value) {
  set_has_map_height_config_max();
  map_height_config_max_ = value;
  // @@protoc_insertion_point(field_set:message.CrashmoClientInit.map_height_config_max)
}

// required int32 map_count_max = 6;
 bool CrashmoClientInit::has_map_count_max() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
 void CrashmoClientInit::set_has_map_count_max() {
  _has_bits_[0] |= 0x00000020u;
}
 void CrashmoClientInit::clear_has_map_count_max() {
  _has_bits_[0] &= ~0x00000020u;
}
 void CrashmoClientInit::clear_map_count_max() {
  map_count_max_ = 0;
  clear_has_map_count_max();
}
 ::google::protobuf::int32 CrashmoClientInit::map_count_max() const {
  // @@protoc_insertion_point(field_get:message.CrashmoClientInit.map_count_max)
  return map_count_max_;
}
 void CrashmoClientInit::set_map_count_max(::google::protobuf::int32 value) {
  set_has_map_count_max();
  map_count_max_ = value;
  // @@protoc_insertion_point(field_set:message.CrashmoClientInit.map_count_max)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int MsgSaveMapReq::kMapFieldNumber;
const int MsgSaveMapReq::kSaveTypeFieldNumber;
#endif  // !_MSC_VER

MsgSaveMapReq::MsgSaveMapReq()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.MsgSaveMapReq)
}

void MsgSaveMapReq::InitAsDefaultInstance() {
  map_ = const_cast< ::message::CrashMapData*>(&::message::CrashMapData::default_instance());
}

MsgSaveMapReq::MsgSaveMapReq(const MsgSaveMapReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message.MsgSaveMapReq)
}

void MsgSaveMapReq::SharedCtor() {
  _cached_size_ = 0;
  map_ = NULL;
  save_type_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgSaveMapReq::~MsgSaveMapReq() {
  // @@protoc_insertion_point(destructor:message.MsgSaveMapReq)
  SharedDtor();
}

void MsgSaveMapReq::SharedDtor() {
  if (this != default_instance_) {
    delete map_;
  }
}

void MsgSaveMapReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgSaveMapReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgSaveMapReq_descriptor_;
}

const MsgSaveMapReq& MsgSaveMapReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_crashmo_2eproto();
  return *default_instance_;
}

MsgSaveMapReq* MsgSaveMapReq::default_instance_ = NULL;

MsgSaveMapReq* MsgSaveMapReq::New(::google::protobuf::Arena* arena) const {
  MsgSaveMapReq* n = new MsgSaveMapReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgSaveMapReq::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_map()) {
      if (map_ != NULL) map_->::message::CrashMapData::Clear();
    }
    save_type_ = 1;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool MsgSaveMapReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.MsgSaveMapReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .message.CrashMapData map = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_map()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_save_type;
        break;
      }

      // required .message.MapType save_type = 2 [default = OfficeMap];
      case 2: {
        if (tag == 16) {
         parse_save_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::message::MapType_IsValid(value)) {
            set_save_type(static_cast< ::message::MapType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.MsgSaveMapReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.MsgSaveMapReq)
  return false;
#undef DO_
}

void MsgSaveMapReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.MsgSaveMapReq)
  // required .message.CrashMapData map = 1;
  if (has_map()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->map_, output);
  }

  // required .message.MapType save_type = 2 [default = OfficeMap];
  if (has_save_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->save_type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.MsgSaveMapReq)
}

::google::protobuf::uint8* MsgSaveMapReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.MsgSaveMapReq)
  // required .message.CrashMapData map = 1;
  if (has_map()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, *this->map_, target);
  }

  // required .message.MapType save_type = 2 [default = OfficeMap];
  if (has_save_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->save_type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.MsgSaveMapReq)
  return target;
}

int MsgSaveMapReq::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_map()) {
    // required .message.CrashMapData map = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->map_);
  }

  if (has_save_type()) {
    // required .message.MapType save_type = 2 [default = OfficeMap];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->save_type());
  }

  return total_size;
}
int MsgSaveMapReq::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .message.CrashMapData map = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->map_);

    // required .message.MapType save_type = 2 [default = OfficeMap];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->save_type());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgSaveMapReq::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MsgSaveMapReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgSaveMapReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgSaveMapReq::MergeFrom(const MsgSaveMapReq& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_map()) {
      mutable_map()->::message::CrashMapData::MergeFrom(from.map());
    }
    if (from.has_save_type()) {
      set_save_type(from.save_type());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void MsgSaveMapReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgSaveMapReq::CopyFrom(const MsgSaveMapReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgSaveMapReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_map()) {
    if (!this->map_->IsInitialized()) return false;
  }
  return true;
}

void MsgSaveMapReq::Swap(MsgSaveMapReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgSaveMapReq::InternalSwap(MsgSaveMapReq* other) {
  std::swap(map_, other->map_);
  std::swap(save_type_, other->save_type_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgSaveMapReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgSaveMapReq_descriptor_;
  metadata.reflection = MsgSaveMapReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgSaveMapReq

// required .message.CrashMapData map = 1;
 bool MsgSaveMapReq::has_map() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void MsgSaveMapReq::set_has_map() {
  _has_bits_[0] |= 0x00000001u;
}
 void MsgSaveMapReq::clear_has_map() {
  _has_bits_[0] &= ~0x00000001u;
}
 void MsgSaveMapReq::clear_map() {
  if (map_ != NULL) map_->::message::CrashMapData::Clear();
  clear_has_map();
}
 const ::message::CrashMapData& MsgSaveMapReq::map() const {
  // @@protoc_insertion_point(field_get:message.MsgSaveMapReq.map)
  return map_ != NULL ? *map_ : *default_instance_->map_;
}
 ::message::CrashMapData* MsgSaveMapReq::mutable_map() {
  set_has_map();
  if (map_ == NULL) {
    map_ = new ::message::CrashMapData;
  }
  // @@protoc_insertion_point(field_mutable:message.MsgSaveMapReq.map)
  return map_;
}
 ::message::CrashMapData* MsgSaveMapReq::release_map() {
  clear_has_map();
  ::message::CrashMapData* temp = map_;
  map_ = NULL;
  return temp;
}
 void MsgSaveMapReq::set_allocated_map(::message::CrashMapData* map) {
  delete map_;
  map_ = map;
  if (map) {
    set_has_map();
  } else {
    clear_has_map();
  }
  // @@protoc_insertion_point(field_set_allocated:message.MsgSaveMapReq.map)
}

// required .message.MapType save_type = 2 [default = OfficeMap];
 bool MsgSaveMapReq::has_save_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
 void MsgSaveMapReq::set_has_save_type() {
  _has_bits_[0] |= 0x00000002u;
}
 void MsgSaveMapReq::clear_has_save_type() {
  _has_bits_[0] &= ~0x00000002u;
}
 void MsgSaveMapReq::clear_save_type() {
  save_type_ = 1;
  clear_has_save_type();
}
 ::message::MapType MsgSaveMapReq::save_type() const {
  // @@protoc_insertion_point(field_get:message.MsgSaveMapReq.save_type)
  return static_cast< ::message::MapType >(save_type_);
}
 void MsgSaveMapReq::set_save_type(::message::MapType value) {
  assert(::message::MapType_IsValid(value));
  set_has_save_type();
  save_type_ = value;
  // @@protoc_insertion_point(field_set:message.MsgSaveMapReq.save_type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int MsgDelMapReq::kMapNameFieldNumber;
#endif  // !_MSC_VER

MsgDelMapReq::MsgDelMapReq()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.MsgDelMapReq)
}

void MsgDelMapReq::InitAsDefaultInstance() {
}

MsgDelMapReq::MsgDelMapReq(const MsgDelMapReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message.MsgDelMapReq)
}

void MsgDelMapReq::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  map_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgDelMapReq::~MsgDelMapReq() {
  // @@protoc_insertion_point(destructor:message.MsgDelMapReq)
  SharedDtor();
}

void MsgDelMapReq::SharedDtor() {
  map_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void MsgDelMapReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgDelMapReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgDelMapReq_descriptor_;
}

const MsgDelMapReq& MsgDelMapReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_crashmo_2eproto();
  return *default_instance_;
}

MsgDelMapReq* MsgDelMapReq::default_instance_ = NULL;

MsgDelMapReq* MsgDelMapReq::New(::google::protobuf::Arena* arena) const {
  MsgDelMapReq* n = new MsgDelMapReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgDelMapReq::Clear() {
  if (has_map_name()) {
    map_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool MsgDelMapReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.MsgDelMapReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string map_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_map_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->map_name().data(), this->map_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "message.MsgDelMapReq.map_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.MsgDelMapReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.MsgDelMapReq)
  return false;
#undef DO_
}

void MsgDelMapReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.MsgDelMapReq)
  // required string map_name = 1;
  if (has_map_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->map_name().data(), this->map_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "message.MsgDelMapReq.map_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->map_name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.MsgDelMapReq)
}

::google::protobuf::uint8* MsgDelMapReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.MsgDelMapReq)
  // required string map_name = 1;
  if (has_map_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->map_name().data(), this->map_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "message.MsgDelMapReq.map_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->map_name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.MsgDelMapReq)
  return target;
}

int MsgDelMapReq::ByteSize() const {
  int total_size = 0;

  // required string map_name = 1;
  if (has_map_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->map_name());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgDelMapReq::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MsgDelMapReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgDelMapReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgDelMapReq::MergeFrom(const MsgDelMapReq& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_map_name()) {
      set_has_map_name();
      map_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.map_name_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void MsgDelMapReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgDelMapReq::CopyFrom(const MsgDelMapReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgDelMapReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void MsgDelMapReq::Swap(MsgDelMapReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgDelMapReq::InternalSwap(MsgDelMapReq* other) {
  map_name_.Swap(&other->map_name_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgDelMapReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgDelMapReq_descriptor_;
  metadata.reflection = MsgDelMapReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgDelMapReq

// required string map_name = 1;
 bool MsgDelMapReq::has_map_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void MsgDelMapReq::set_has_map_name() {
  _has_bits_[0] |= 0x00000001u;
}
 void MsgDelMapReq::clear_has_map_name() {
  _has_bits_[0] &= ~0x00000001u;
}
 void MsgDelMapReq::clear_map_name() {
  map_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_map_name();
}
 const ::std::string& MsgDelMapReq::map_name() const {
  // @@protoc_insertion_point(field_get:message.MsgDelMapReq.map_name)
  return map_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MsgDelMapReq::set_map_name(const ::std::string& value) {
  set_has_map_name();
  map_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message.MsgDelMapReq.map_name)
}
 void MsgDelMapReq::set_map_name(const char* value) {
  set_has_map_name();
  map_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.MsgDelMapReq.map_name)
}
 void MsgDelMapReq::set_map_name(const char* value, size_t size) {
  set_has_map_name();
  map_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.MsgDelMapReq.map_name)
}
 ::std::string* MsgDelMapReq::mutable_map_name() {
  set_has_map_name();
  // @@protoc_insertion_point(field_mutable:message.MsgDelMapReq.map_name)
  return map_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MsgDelMapReq::release_map_name() {
  clear_has_map_name();
  return map_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MsgDelMapReq::set_allocated_map_name(::std::string* map_name) {
  if (map_name != NULL) {
    set_has_map_name();
  } else {
    clear_has_map_name();
  }
  map_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), map_name);
  // @@protoc_insertion_point(field_set_allocated:message.MsgDelMapReq.map_name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int MsgDelMapACK::kMapNameFieldNumber;
const int MsgDelMapACK::kMapTypeFieldNumber;
const int MsgDelMapACK::kErrorFieldNumber;
#endif  // !_MSC_VER

MsgDelMapACK::MsgDelMapACK()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.MsgDelMapACK)
}

void MsgDelMapACK::InitAsDefaultInstance() {
}

MsgDelMapACK::MsgDelMapACK(const MsgDelMapACK& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message.MsgDelMapACK)
}

void MsgDelMapACK::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  map_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  map_type_ = 1;
  error_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgDelMapACK::~MsgDelMapACK() {
  // @@protoc_insertion_point(destructor:message.MsgDelMapACK)
  SharedDtor();
}

void MsgDelMapACK::SharedDtor() {
  map_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void MsgDelMapACK::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgDelMapACK::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgDelMapACK_descriptor_;
}

const MsgDelMapACK& MsgDelMapACK::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_crashmo_2eproto();
  return *default_instance_;
}

MsgDelMapACK* MsgDelMapACK::default_instance_ = NULL;

MsgDelMapACK* MsgDelMapACK::New(::google::protobuf::Arena* arena) const {
  MsgDelMapACK* n = new MsgDelMapACK;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgDelMapACK::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    if (has_map_name()) {
      map_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    map_type_ = 1;
    error_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool MsgDelMapACK::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.MsgDelMapACK)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string map_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_map_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->map_name().data(), this->map_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "message.MsgDelMapACK.map_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_map_type;
        break;
      }

      // required .message.MapType map_type = 2 [default = OfficeMap];
      case 2: {
        if (tag == 16) {
         parse_map_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::message::MapType_IsValid(value)) {
            set_map_type(static_cast< ::message::MapType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_error;
        break;
      }

      // required .message.ServerError error = 3 [default = ServerError_NO];
      case 3: {
        if (tag == 24) {
         parse_error:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::message::ServerError_IsValid(value)) {
            set_error(static_cast< ::message::ServerError >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.MsgDelMapACK)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.MsgDelMapACK)
  return false;
#undef DO_
}

void MsgDelMapACK::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.MsgDelMapACK)
  // required string map_name = 1;
  if (has_map_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->map_name().data(), this->map_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "message.MsgDelMapACK.map_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->map_name(), output);
  }

  // required .message.MapType map_type = 2 [default = OfficeMap];
  if (has_map_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->map_type(), output);
  }

  // required .message.ServerError error = 3 [default = ServerError_NO];
  if (has_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->error(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.MsgDelMapACK)
}

::google::protobuf::uint8* MsgDelMapACK::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.MsgDelMapACK)
  // required string map_name = 1;
  if (has_map_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->map_name().data(), this->map_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "message.MsgDelMapACK.map_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->map_name(), target);
  }

  // required .message.MapType map_type = 2 [default = OfficeMap];
  if (has_map_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->map_type(), target);
  }

  // required .message.ServerError error = 3 [default = ServerError_NO];
  if (has_error()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->error(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.MsgDelMapACK)
  return target;
}

int MsgDelMapACK::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_map_name()) {
    // required string map_name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->map_name());
  }

  if (has_map_type()) {
    // required .message.MapType map_type = 2 [default = OfficeMap];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->map_type());
  }

  if (has_error()) {
    // required .message.ServerError error = 3 [default = ServerError_NO];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->error());
  }

  return total_size;
}
int MsgDelMapACK::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required string map_name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->map_name());

    // required .message.MapType map_type = 2 [default = OfficeMap];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->map_type());

    // required .message.ServerError error = 3 [default = ServerError_NO];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->error());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgDelMapACK::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MsgDelMapACK* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgDelMapACK*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgDelMapACK::MergeFrom(const MsgDelMapACK& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_map_name()) {
      set_has_map_name();
      map_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.map_name_);
    }
    if (from.has_map_type()) {
      set_map_type(from.map_type());
    }
    if (from.has_error()) {
      set_error(from.error());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void MsgDelMapACK::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgDelMapACK::CopyFrom(const MsgDelMapACK& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgDelMapACK::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void MsgDelMapACK::Swap(MsgDelMapACK* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgDelMapACK::InternalSwap(MsgDelMapACK* other) {
  map_name_.Swap(&other->map_name_);
  std::swap(map_type_, other->map_type_);
  std::swap(error_, other->error_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgDelMapACK::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgDelMapACK_descriptor_;
  metadata.reflection = MsgDelMapACK_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgDelMapACK

// required string map_name = 1;
 bool MsgDelMapACK::has_map_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void MsgDelMapACK::set_has_map_name() {
  _has_bits_[0] |= 0x00000001u;
}
 void MsgDelMapACK::clear_has_map_name() {
  _has_bits_[0] &= ~0x00000001u;
}
 void MsgDelMapACK::clear_map_name() {
  map_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_map_name();
}
 const ::std::string& MsgDelMapACK::map_name() const {
  // @@protoc_insertion_point(field_get:message.MsgDelMapACK.map_name)
  return map_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MsgDelMapACK::set_map_name(const ::std::string& value) {
  set_has_map_name();
  map_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message.MsgDelMapACK.map_name)
}
 void MsgDelMapACK::set_map_name(const char* value) {
  set_has_map_name();
  map_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.MsgDelMapACK.map_name)
}
 void MsgDelMapACK::set_map_name(const char* value, size_t size) {
  set_has_map_name();
  map_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.MsgDelMapACK.map_name)
}
 ::std::string* MsgDelMapACK::mutable_map_name() {
  set_has_map_name();
  // @@protoc_insertion_point(field_mutable:message.MsgDelMapACK.map_name)
  return map_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MsgDelMapACK::release_map_name() {
  clear_has_map_name();
  return map_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MsgDelMapACK::set_allocated_map_name(::std::string* map_name) {
  if (map_name != NULL) {
    set_has_map_name();
  } else {
    clear_has_map_name();
  }
  map_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), map_name);
  // @@protoc_insertion_point(field_set_allocated:message.MsgDelMapACK.map_name)
}

// required .message.MapType map_type = 2 [default = OfficeMap];
 bool MsgDelMapACK::has_map_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
 void MsgDelMapACK::set_has_map_type() {
  _has_bits_[0] |= 0x00000002u;
}
 void MsgDelMapACK::clear_has_map_type() {
  _has_bits_[0] &= ~0x00000002u;
}
 void MsgDelMapACK::clear_map_type() {
  map_type_ = 1;
  clear_has_map_type();
}
 ::message::MapType MsgDelMapACK::map_type() const {
  // @@protoc_insertion_point(field_get:message.MsgDelMapACK.map_type)
  return static_cast< ::message::MapType >(map_type_);
}
 void MsgDelMapACK::set_map_type(::message::MapType value) {
  assert(::message::MapType_IsValid(value));
  set_has_map_type();
  map_type_ = value;
  // @@protoc_insertion_point(field_set:message.MsgDelMapACK.map_type)
}

// required .message.ServerError error = 3 [default = ServerError_NO];
 bool MsgDelMapACK::has_error() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
 void MsgDelMapACK::set_has_error() {
  _has_bits_[0] |= 0x00000004u;
}
 void MsgDelMapACK::clear_has_error() {
  _has_bits_[0] &= ~0x00000004u;
}
 void MsgDelMapACK::clear_error() {
  error_ = 0;
  clear_has_error();
}
 ::message::ServerError MsgDelMapACK::error() const {
  // @@protoc_insertion_point(field_get:message.MsgDelMapACK.error)
  return static_cast< ::message::ServerError >(error_);
}
 void MsgDelMapACK::set_error(::message::ServerError value) {
  assert(::message::ServerError_IsValid(value));
  set_has_error();
  error_ = value;
  // @@protoc_insertion_point(field_set:message.MsgDelMapACK.error)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int MsgSaveMapACK::kMapNameFieldNumber;
const int MsgSaveMapACK::kSaveTypeFieldNumber;
const int MsgSaveMapACK::kMapFieldNumber;
const int MsgSaveMapACK::kErrorFieldNumber;
#endif  // !_MSC_VER

MsgSaveMapACK::MsgSaveMapACK()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.MsgSaveMapACK)
}

void MsgSaveMapACK::InitAsDefaultInstance() {
  map_ = const_cast< ::message::CrashMapData*>(&::message::CrashMapData::default_instance());
}

MsgSaveMapACK::MsgSaveMapACK(const MsgSaveMapACK& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message.MsgSaveMapACK)
}

void MsgSaveMapACK::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  map_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  save_type_ = 1;
  map_ = NULL;
  error_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgSaveMapACK::~MsgSaveMapACK() {
  // @@protoc_insertion_point(destructor:message.MsgSaveMapACK)
  SharedDtor();
}

void MsgSaveMapACK::SharedDtor() {
  map_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete map_;
  }
}

void MsgSaveMapACK::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgSaveMapACK::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgSaveMapACK_descriptor_;
}

const MsgSaveMapACK& MsgSaveMapACK::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_crashmo_2eproto();
  return *default_instance_;
}

MsgSaveMapACK* MsgSaveMapACK::default_instance_ = NULL;

MsgSaveMapACK* MsgSaveMapACK::New(::google::protobuf::Arena* arena) const {
  MsgSaveMapACK* n = new MsgSaveMapACK;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgSaveMapACK::Clear() {
  if (_has_bits_[0 / 32] & 15) {
    if (has_map_name()) {
      map_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    save_type_ = 1;
    if (has_map()) {
      if (map_ != NULL) map_->::message::CrashMapData::Clear();
    }
    error_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool MsgSaveMapACK::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.MsgSaveMapACK)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string map_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_map_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->map_name().data(), this->map_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "message.MsgSaveMapACK.map_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_save_type;
        break;
      }

      // required .message.MapType save_type = 2 [default = OfficeMap];
      case 2: {
        if (tag == 16) {
         parse_save_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::message::MapType_IsValid(value)) {
            set_save_type(static_cast< ::message::MapType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_map;
        break;
      }

      // required .message.CrashMapData map = 3;
      case 3: {
        if (tag == 26) {
         parse_map:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_map()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_error;
        break;
      }

      // required .message.ServerError error = 4 [default = ServerError_NO];
      case 4: {
        if (tag == 32) {
         parse_error:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::message::ServerError_IsValid(value)) {
            set_error(static_cast< ::message::ServerError >(value));
          } else {
            mutable_unknown_fields()->AddVarint(4, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.MsgSaveMapACK)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.MsgSaveMapACK)
  return false;
#undef DO_
}

void MsgSaveMapACK::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.MsgSaveMapACK)
  // required string map_name = 1;
  if (has_map_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->map_name().data(), this->map_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "message.MsgSaveMapACK.map_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->map_name(), output);
  }

  // required .message.MapType save_type = 2 [default = OfficeMap];
  if (has_save_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->save_type(), output);
  }

  // required .message.CrashMapData map = 3;
  if (has_map()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->map_, output);
  }

  // required .message.ServerError error = 4 [default = ServerError_NO];
  if (has_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->error(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.MsgSaveMapACK)
}

::google::protobuf::uint8* MsgSaveMapACK::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.MsgSaveMapACK)
  // required string map_name = 1;
  if (has_map_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->map_name().data(), this->map_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "message.MsgSaveMapACK.map_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->map_name(), target);
  }

  // required .message.MapType save_type = 2 [default = OfficeMap];
  if (has_save_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->save_type(), target);
  }

  // required .message.CrashMapData map = 3;
  if (has_map()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, *this->map_, target);
  }

  // required .message.ServerError error = 4 [default = ServerError_NO];
  if (has_error()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->error(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.MsgSaveMapACK)
  return target;
}

int MsgSaveMapACK::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_map_name()) {
    // required string map_name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->map_name());
  }

  if (has_save_type()) {
    // required .message.MapType save_type = 2 [default = OfficeMap];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->save_type());
  }

  if (has_map()) {
    // required .message.CrashMapData map = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->map_);
  }

  if (has_error()) {
    // required .message.ServerError error = 4 [default = ServerError_NO];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->error());
  }

  return total_size;
}
int MsgSaveMapACK::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required string map_name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->map_name());

    // required .message.MapType save_type = 2 [default = OfficeMap];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->save_type());

    // required .message.CrashMapData map = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->map_);

    // required .message.ServerError error = 4 [default = ServerError_NO];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->error());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgSaveMapACK::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MsgSaveMapACK* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgSaveMapACK*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgSaveMapACK::MergeFrom(const MsgSaveMapACK& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_map_name()) {
      set_has_map_name();
      map_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.map_name_);
    }
    if (from.has_save_type()) {
      set_save_type(from.save_type());
    }
    if (from.has_map()) {
      mutable_map()->::message::CrashMapData::MergeFrom(from.map());
    }
    if (from.has_error()) {
      set_error(from.error());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void MsgSaveMapACK::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgSaveMapACK::CopyFrom(const MsgSaveMapACK& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgSaveMapACK::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  if (has_map()) {
    if (!this->map_->IsInitialized()) return false;
  }
  return true;
}

void MsgSaveMapACK::Swap(MsgSaveMapACK* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgSaveMapACK::InternalSwap(MsgSaveMapACK* other) {
  map_name_.Swap(&other->map_name_);
  std::swap(save_type_, other->save_type_);
  std::swap(map_, other->map_);
  std::swap(error_, other->error_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgSaveMapACK::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgSaveMapACK_descriptor_;
  metadata.reflection = MsgSaveMapACK_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgSaveMapACK

// required string map_name = 1;
 bool MsgSaveMapACK::has_map_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void MsgSaveMapACK::set_has_map_name() {
  _has_bits_[0] |= 0x00000001u;
}
 void MsgSaveMapACK::clear_has_map_name() {
  _has_bits_[0] &= ~0x00000001u;
}
 void MsgSaveMapACK::clear_map_name() {
  map_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_map_name();
}
 const ::std::string& MsgSaveMapACK::map_name() const {
  // @@protoc_insertion_point(field_get:message.MsgSaveMapACK.map_name)
  return map_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MsgSaveMapACK::set_map_name(const ::std::string& value) {
  set_has_map_name();
  map_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message.MsgSaveMapACK.map_name)
}
 void MsgSaveMapACK::set_map_name(const char* value) {
  set_has_map_name();
  map_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.MsgSaveMapACK.map_name)
}
 void MsgSaveMapACK::set_map_name(const char* value, size_t size) {
  set_has_map_name();
  map_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.MsgSaveMapACK.map_name)
}
 ::std::string* MsgSaveMapACK::mutable_map_name() {
  set_has_map_name();
  // @@protoc_insertion_point(field_mutable:message.MsgSaveMapACK.map_name)
  return map_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MsgSaveMapACK::release_map_name() {
  clear_has_map_name();
  return map_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MsgSaveMapACK::set_allocated_map_name(::std::string* map_name) {
  if (map_name != NULL) {
    set_has_map_name();
  } else {
    clear_has_map_name();
  }
  map_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), map_name);
  // @@protoc_insertion_point(field_set_allocated:message.MsgSaveMapACK.map_name)
}

// required .message.MapType save_type = 2 [default = OfficeMap];
 bool MsgSaveMapACK::has_save_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
 void MsgSaveMapACK::set_has_save_type() {
  _has_bits_[0] |= 0x00000002u;
}
 void MsgSaveMapACK::clear_has_save_type() {
  _has_bits_[0] &= ~0x00000002u;
}
 void MsgSaveMapACK::clear_save_type() {
  save_type_ = 1;
  clear_has_save_type();
}
 ::message::MapType MsgSaveMapACK::save_type() const {
  // @@protoc_insertion_point(field_get:message.MsgSaveMapACK.save_type)
  return static_cast< ::message::MapType >(save_type_);
}
 void MsgSaveMapACK::set_save_type(::message::MapType value) {
  assert(::message::MapType_IsValid(value));
  set_has_save_type();
  save_type_ = value;
  // @@protoc_insertion_point(field_set:message.MsgSaveMapACK.save_type)
}

// required .message.CrashMapData map = 3;
 bool MsgSaveMapACK::has_map() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
 void MsgSaveMapACK::set_has_map() {
  _has_bits_[0] |= 0x00000004u;
}
 void MsgSaveMapACK::clear_has_map() {
  _has_bits_[0] &= ~0x00000004u;
}
 void MsgSaveMapACK::clear_map() {
  if (map_ != NULL) map_->::message::CrashMapData::Clear();
  clear_has_map();
}
 const ::message::CrashMapData& MsgSaveMapACK::map() const {
  // @@protoc_insertion_point(field_get:message.MsgSaveMapACK.map)
  return map_ != NULL ? *map_ : *default_instance_->map_;
}
 ::message::CrashMapData* MsgSaveMapACK::mutable_map() {
  set_has_map();
  if (map_ == NULL) {
    map_ = new ::message::CrashMapData;
  }
  // @@protoc_insertion_point(field_mutable:message.MsgSaveMapACK.map)
  return map_;
}
 ::message::CrashMapData* MsgSaveMapACK::release_map() {
  clear_has_map();
  ::message::CrashMapData* temp = map_;
  map_ = NULL;
  return temp;
}
 void MsgSaveMapACK::set_allocated_map(::message::CrashMapData* map) {
  delete map_;
  map_ = map;
  if (map) {
    set_has_map();
  } else {
    clear_has_map();
  }
  // @@protoc_insertion_point(field_set_allocated:message.MsgSaveMapACK.map)
}

// required .message.ServerError error = 4 [default = ServerError_NO];
 bool MsgSaveMapACK::has_error() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
 void MsgSaveMapACK::set_has_error() {
  _has_bits_[0] |= 0x00000008u;
}
 void MsgSaveMapACK::clear_has_error() {
  _has_bits_[0] &= ~0x00000008u;
}
 void MsgSaveMapACK::clear_error() {
  error_ = 0;
  clear_has_error();
}
 ::message::ServerError MsgSaveMapACK::error() const {
  // @@protoc_insertion_point(field_get:message.MsgSaveMapACK.error)
  return static_cast< ::message::ServerError >(error_);
}
 void MsgSaveMapACK::set_error(::message::ServerError value) {
  assert(::message::ServerError_IsValid(value));
  set_has_error();
  error_ = value;
  // @@protoc_insertion_point(field_set:message.MsgSaveMapACK.error)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int MsgOfficilMapReq::kPageFieldNumber;
#endif  // !_MSC_VER

MsgOfficilMapReq::MsgOfficilMapReq()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.MsgOfficilMapReq)
}

void MsgOfficilMapReq::InitAsDefaultInstance() {
}

MsgOfficilMapReq::MsgOfficilMapReq(const MsgOfficilMapReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message.MsgOfficilMapReq)
}

void MsgOfficilMapReq::SharedCtor() {
  _cached_size_ = 0;
  page_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgOfficilMapReq::~MsgOfficilMapReq() {
  // @@protoc_insertion_point(destructor:message.MsgOfficilMapReq)
  SharedDtor();
}

void MsgOfficilMapReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgOfficilMapReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgOfficilMapReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgOfficilMapReq_descriptor_;
}

const MsgOfficilMapReq& MsgOfficilMapReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_crashmo_2eproto();
  return *default_instance_;
}

MsgOfficilMapReq* MsgOfficilMapReq::default_instance_ = NULL;

MsgOfficilMapReq* MsgOfficilMapReq::New(::google::protobuf::Arena* arena) const {
  MsgOfficilMapReq* n = new MsgOfficilMapReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgOfficilMapReq::Clear() {
  page_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool MsgOfficilMapReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.MsgOfficilMapReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 page = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_)));
          set_has_page();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.MsgOfficilMapReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.MsgOfficilMapReq)
  return false;
#undef DO_
}

void MsgOfficilMapReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.MsgOfficilMapReq)
  // required int32 page = 1;
  if (has_page()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->page(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.MsgOfficilMapReq)
}

::google::protobuf::uint8* MsgOfficilMapReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.MsgOfficilMapReq)
  // required int32 page = 1;
  if (has_page()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->page(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.MsgOfficilMapReq)
  return target;
}

int MsgOfficilMapReq::ByteSize() const {
  int total_size = 0;

  // required int32 page = 1;
  if (has_page()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->page());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgOfficilMapReq::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MsgOfficilMapReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgOfficilMapReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgOfficilMapReq::MergeFrom(const MsgOfficilMapReq& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_page()) {
      set_page(from.page());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void MsgOfficilMapReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgOfficilMapReq::CopyFrom(const MsgOfficilMapReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgOfficilMapReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void MsgOfficilMapReq::Swap(MsgOfficilMapReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgOfficilMapReq::InternalSwap(MsgOfficilMapReq* other) {
  std::swap(page_, other->page_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgOfficilMapReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgOfficilMapReq_descriptor_;
  metadata.reflection = MsgOfficilMapReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgOfficilMapReq

// required int32 page = 1;
 bool MsgOfficilMapReq::has_page() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void MsgOfficilMapReq::set_has_page() {
  _has_bits_[0] |= 0x00000001u;
}
 void MsgOfficilMapReq::clear_has_page() {
  _has_bits_[0] &= ~0x00000001u;
}
 void MsgOfficilMapReq::clear_page() {
  page_ = 0;
  clear_has_page();
}
 ::google::protobuf::int32 MsgOfficilMapReq::page() const {
  // @@protoc_insertion_point(field_get:message.MsgOfficilMapReq.page)
  return page_;
}
 void MsgOfficilMapReq::set_page(::google::protobuf::int32 value) {
  set_has_page();
  page_ = value;
  // @@protoc_insertion_point(field_set:message.MsgOfficilMapReq.page)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int MsgOfficilMapACK::kPageFieldNumber;
const int MsgOfficilMapACK::kMapsFieldNumber;
#endif  // !_MSC_VER

MsgOfficilMapACK::MsgOfficilMapACK()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.MsgOfficilMapACK)
}

void MsgOfficilMapACK::InitAsDefaultInstance() {
}

MsgOfficilMapACK::MsgOfficilMapACK(const MsgOfficilMapACK& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message.MsgOfficilMapACK)
}

void MsgOfficilMapACK::SharedCtor() {
  _cached_size_ = 0;
  page_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgOfficilMapACK::~MsgOfficilMapACK() {
  // @@protoc_insertion_point(destructor:message.MsgOfficilMapACK)
  SharedDtor();
}

void MsgOfficilMapACK::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgOfficilMapACK::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgOfficilMapACK::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgOfficilMapACK_descriptor_;
}

const MsgOfficilMapACK& MsgOfficilMapACK::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_crashmo_2eproto();
  return *default_instance_;
}

MsgOfficilMapACK* MsgOfficilMapACK::default_instance_ = NULL;

MsgOfficilMapACK* MsgOfficilMapACK::New(::google::protobuf::Arena* arena) const {
  MsgOfficilMapACK* n = new MsgOfficilMapACK;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgOfficilMapACK::Clear() {
  page_ = 0;
  maps_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool MsgOfficilMapACK::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.MsgOfficilMapACK)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 page = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_)));
          set_has_page();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_maps;
        break;
      }

      // repeated .message.CrashMapData maps = 2;
      case 2: {
        if (tag == 18) {
         parse_maps:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_maps()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_maps;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.MsgOfficilMapACK)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.MsgOfficilMapACK)
  return false;
#undef DO_
}

void MsgOfficilMapACK::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.MsgOfficilMapACK)
  // required int32 page = 1;
  if (has_page()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->page(), output);
  }

  // repeated .message.CrashMapData maps = 2;
  for (unsigned int i = 0, n = this->maps_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->maps(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.MsgOfficilMapACK)
}

::google::protobuf::uint8* MsgOfficilMapACK::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.MsgOfficilMapACK)
  // required int32 page = 1;
  if (has_page()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->page(), target);
  }

  // repeated .message.CrashMapData maps = 2;
  for (unsigned int i = 0, n = this->maps_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->maps(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.MsgOfficilMapACK)
  return target;
}

int MsgOfficilMapACK::ByteSize() const {
  int total_size = 0;

  // required int32 page = 1;
  if (has_page()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->page());
  }
  // repeated .message.CrashMapData maps = 2;
  total_size += 1 * this->maps_size();
  for (int i = 0; i < this->maps_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->maps(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgOfficilMapACK::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MsgOfficilMapACK* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgOfficilMapACK*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgOfficilMapACK::MergeFrom(const MsgOfficilMapACK& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  maps_.MergeFrom(from.maps_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_page()) {
      set_page(from.page());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void MsgOfficilMapACK::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgOfficilMapACK::CopyFrom(const MsgOfficilMapACK& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgOfficilMapACK::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->maps())) return false;
  return true;
}

void MsgOfficilMapACK::Swap(MsgOfficilMapACK* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgOfficilMapACK::InternalSwap(MsgOfficilMapACK* other) {
  std::swap(page_, other->page_);
  maps_.UnsafeArenaSwap(&other->maps_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgOfficilMapACK::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgOfficilMapACK_descriptor_;
  metadata.reflection = MsgOfficilMapACK_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgOfficilMapACK

// required int32 page = 1;
 bool MsgOfficilMapACK::has_page() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void MsgOfficilMapACK::set_has_page() {
  _has_bits_[0] |= 0x00000001u;
}
 void MsgOfficilMapACK::clear_has_page() {
  _has_bits_[0] &= ~0x00000001u;
}
 void MsgOfficilMapACK::clear_page() {
  page_ = 0;
  clear_has_page();
}
 ::google::protobuf::int32 MsgOfficilMapACK::page() const {
  // @@protoc_insertion_point(field_get:message.MsgOfficilMapACK.page)
  return page_;
}
 void MsgOfficilMapACK::set_page(::google::protobuf::int32 value) {
  set_has_page();
  page_ = value;
  // @@protoc_insertion_point(field_set:message.MsgOfficilMapACK.page)
}

// repeated .message.CrashMapData maps = 2;
 int MsgOfficilMapACK::maps_size() const {
  return maps_.size();
}
 void MsgOfficilMapACK::clear_maps() {
  maps_.Clear();
}
 const ::message::CrashMapData& MsgOfficilMapACK::maps(int index) const {
  // @@protoc_insertion_point(field_get:message.MsgOfficilMapACK.maps)
  return maps_.Get(index);
}
 ::message::CrashMapData* MsgOfficilMapACK::mutable_maps(int index) {
  // @@protoc_insertion_point(field_mutable:message.MsgOfficilMapACK.maps)
  return maps_.Mutable(index);
}
 ::message::CrashMapData* MsgOfficilMapACK::add_maps() {
  // @@protoc_insertion_point(field_add:message.MsgOfficilMapACK.maps)
  return maps_.Add();
}
 const ::google::protobuf::RepeatedPtrField< ::message::CrashMapData >&
MsgOfficilMapACK::maps() const {
  // @@protoc_insertion_point(field_list:message.MsgOfficilMapACK.maps)
  return maps_;
}
 ::google::protobuf::RepeatedPtrField< ::message::CrashMapData >*
MsgOfficilMapACK::mutable_maps() {
  // @@protoc_insertion_point(field_mutable_list:message.MsgOfficilMapACK.maps)
  return &maps_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int MsgModifySectionNameReq::kSectionFieldNumber;
const int MsgModifySectionNameReq::kSectionNameFieldNumber;
#endif  // !_MSC_VER

MsgModifySectionNameReq::MsgModifySectionNameReq()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.MsgModifySectionNameReq)
}

void MsgModifySectionNameReq::InitAsDefaultInstance() {
}

MsgModifySectionNameReq::MsgModifySectionNameReq(const MsgModifySectionNameReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message.MsgModifySectionNameReq)
}

void MsgModifySectionNameReq::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  section_ = 0;
  section_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgModifySectionNameReq::~MsgModifySectionNameReq() {
  // @@protoc_insertion_point(destructor:message.MsgModifySectionNameReq)
  SharedDtor();
}

void MsgModifySectionNameReq::SharedDtor() {
  section_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void MsgModifySectionNameReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgModifySectionNameReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgModifySectionNameReq_descriptor_;
}

const MsgModifySectionNameReq& MsgModifySectionNameReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_crashmo_2eproto();
  return *default_instance_;
}

MsgModifySectionNameReq* MsgModifySectionNameReq::default_instance_ = NULL;

MsgModifySectionNameReq* MsgModifySectionNameReq::New(::google::protobuf::Arena* arena) const {
  MsgModifySectionNameReq* n = new MsgModifySectionNameReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgModifySectionNameReq::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    section_ = 0;
    if (has_section_name()) {
      section_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool MsgModifySectionNameReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.MsgModifySectionNameReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 section = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &section_)));
          set_has_section();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_section_name;
        break;
      }

      // required string section_name = 2;
      case 2: {
        if (tag == 18) {
         parse_section_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_section_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->section_name().data(), this->section_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "message.MsgModifySectionNameReq.section_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.MsgModifySectionNameReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.MsgModifySectionNameReq)
  return false;
#undef DO_
}

void MsgModifySectionNameReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.MsgModifySectionNameReq)
  // required int32 section = 1;
  if (has_section()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->section(), output);
  }

  // required string section_name = 2;
  if (has_section_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->section_name().data(), this->section_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "message.MsgModifySectionNameReq.section_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->section_name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.MsgModifySectionNameReq)
}

::google::protobuf::uint8* MsgModifySectionNameReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.MsgModifySectionNameReq)
  // required int32 section = 1;
  if (has_section()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->section(), target);
  }

  // required string section_name = 2;
  if (has_section_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->section_name().data(), this->section_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "message.MsgModifySectionNameReq.section_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->section_name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.MsgModifySectionNameReq)
  return target;
}

int MsgModifySectionNameReq::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_section()) {
    // required int32 section = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->section());
  }

  if (has_section_name()) {
    // required string section_name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->section_name());
  }

  return total_size;
}
int MsgModifySectionNameReq::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 section = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->section());

    // required string section_name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->section_name());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgModifySectionNameReq::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MsgModifySectionNameReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgModifySectionNameReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgModifySectionNameReq::MergeFrom(const MsgModifySectionNameReq& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_section()) {
      set_section(from.section());
    }
    if (from.has_section_name()) {
      set_has_section_name();
      section_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.section_name_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void MsgModifySectionNameReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgModifySectionNameReq::CopyFrom(const MsgModifySectionNameReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgModifySectionNameReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void MsgModifySectionNameReq::Swap(MsgModifySectionNameReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgModifySectionNameReq::InternalSwap(MsgModifySectionNameReq* other) {
  std::swap(section_, other->section_);
  section_name_.Swap(&other->section_name_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgModifySectionNameReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgModifySectionNameReq_descriptor_;
  metadata.reflection = MsgModifySectionNameReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgModifySectionNameReq

// required int32 section = 1;
 bool MsgModifySectionNameReq::has_section() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void MsgModifySectionNameReq::set_has_section() {
  _has_bits_[0] |= 0x00000001u;
}
 void MsgModifySectionNameReq::clear_has_section() {
  _has_bits_[0] &= ~0x00000001u;
}
 void MsgModifySectionNameReq::clear_section() {
  section_ = 0;
  clear_has_section();
}
 ::google::protobuf::int32 MsgModifySectionNameReq::section() const {
  // @@protoc_insertion_point(field_get:message.MsgModifySectionNameReq.section)
  return section_;
}
 void MsgModifySectionNameReq::set_section(::google::protobuf::int32 value) {
  set_has_section();
  section_ = value;
  // @@protoc_insertion_point(field_set:message.MsgModifySectionNameReq.section)
}

// required string section_name = 2;
 bool MsgModifySectionNameReq::has_section_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
 void MsgModifySectionNameReq::set_has_section_name() {
  _has_bits_[0] |= 0x00000002u;
}
 void MsgModifySectionNameReq::clear_has_section_name() {
  _has_bits_[0] &= ~0x00000002u;
}
 void MsgModifySectionNameReq::clear_section_name() {
  section_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_section_name();
}
 const ::std::string& MsgModifySectionNameReq::section_name() const {
  // @@protoc_insertion_point(field_get:message.MsgModifySectionNameReq.section_name)
  return section_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MsgModifySectionNameReq::set_section_name(const ::std::string& value) {
  set_has_section_name();
  section_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message.MsgModifySectionNameReq.section_name)
}
 void MsgModifySectionNameReq::set_section_name(const char* value) {
  set_has_section_name();
  section_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.MsgModifySectionNameReq.section_name)
}
 void MsgModifySectionNameReq::set_section_name(const char* value, size_t size) {
  set_has_section_name();
  section_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.MsgModifySectionNameReq.section_name)
}
 ::std::string* MsgModifySectionNameReq::mutable_section_name() {
  set_has_section_name();
  // @@protoc_insertion_point(field_mutable:message.MsgModifySectionNameReq.section_name)
  return section_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MsgModifySectionNameReq::release_section_name() {
  clear_has_section_name();
  return section_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MsgModifySectionNameReq::set_allocated_section_name(::std::string* section_name) {
  if (section_name != NULL) {
    set_has_section_name();
  } else {
    clear_has_section_name();
  }
  section_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), section_name);
  // @@protoc_insertion_point(field_set_allocated:message.MsgModifySectionNameReq.section_name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int MsgModifySectionNameACK::kSectionFieldNumber;
const int MsgModifySectionNameACK::kSectionNameFieldNumber;
#endif  // !_MSC_VER

MsgModifySectionNameACK::MsgModifySectionNameACK()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.MsgModifySectionNameACK)
}

void MsgModifySectionNameACK::InitAsDefaultInstance() {
}

MsgModifySectionNameACK::MsgModifySectionNameACK(const MsgModifySectionNameACK& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message.MsgModifySectionNameACK)
}

void MsgModifySectionNameACK::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  section_ = 0;
  section_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgModifySectionNameACK::~MsgModifySectionNameACK() {
  // @@protoc_insertion_point(destructor:message.MsgModifySectionNameACK)
  SharedDtor();
}

void MsgModifySectionNameACK::SharedDtor() {
  section_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void MsgModifySectionNameACK::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgModifySectionNameACK::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgModifySectionNameACK_descriptor_;
}

const MsgModifySectionNameACK& MsgModifySectionNameACK::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_crashmo_2eproto();
  return *default_instance_;
}

MsgModifySectionNameACK* MsgModifySectionNameACK::default_instance_ = NULL;

MsgModifySectionNameACK* MsgModifySectionNameACK::New(::google::protobuf::Arena* arena) const {
  MsgModifySectionNameACK* n = new MsgModifySectionNameACK;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgModifySectionNameACK::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    section_ = 0;
    if (has_section_name()) {
      section_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool MsgModifySectionNameACK::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.MsgModifySectionNameACK)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 section = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &section_)));
          set_has_section();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_section_name;
        break;
      }

      // required string section_name = 2;
      case 2: {
        if (tag == 18) {
         parse_section_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_section_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->section_name().data(), this->section_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "message.MsgModifySectionNameACK.section_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.MsgModifySectionNameACK)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.MsgModifySectionNameACK)
  return false;
#undef DO_
}

void MsgModifySectionNameACK::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.MsgModifySectionNameACK)
  // required int32 section = 1;
  if (has_section()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->section(), output);
  }

  // required string section_name = 2;
  if (has_section_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->section_name().data(), this->section_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "message.MsgModifySectionNameACK.section_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->section_name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.MsgModifySectionNameACK)
}

::google::protobuf::uint8* MsgModifySectionNameACK::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.MsgModifySectionNameACK)
  // required int32 section = 1;
  if (has_section()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->section(), target);
  }

  // required string section_name = 2;
  if (has_section_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->section_name().data(), this->section_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "message.MsgModifySectionNameACK.section_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->section_name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.MsgModifySectionNameACK)
  return target;
}

int MsgModifySectionNameACK::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_section()) {
    // required int32 section = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->section());
  }

  if (has_section_name()) {
    // required string section_name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->section_name());
  }

  return total_size;
}
int MsgModifySectionNameACK::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 section = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->section());

    // required string section_name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->section_name());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgModifySectionNameACK::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MsgModifySectionNameACK* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgModifySectionNameACK*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgModifySectionNameACK::MergeFrom(const MsgModifySectionNameACK& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_section()) {
      set_section(from.section());
    }
    if (from.has_section_name()) {
      set_has_section_name();
      section_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.section_name_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void MsgModifySectionNameACK::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgModifySectionNameACK::CopyFrom(const MsgModifySectionNameACK& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgModifySectionNameACK::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void MsgModifySectionNameACK::Swap(MsgModifySectionNameACK* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgModifySectionNameACK::InternalSwap(MsgModifySectionNameACK* other) {
  std::swap(section_, other->section_);
  section_name_.Swap(&other->section_name_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgModifySectionNameACK::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgModifySectionNameACK_descriptor_;
  metadata.reflection = MsgModifySectionNameACK_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgModifySectionNameACK

// required int32 section = 1;
 bool MsgModifySectionNameACK::has_section() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void MsgModifySectionNameACK::set_has_section() {
  _has_bits_[0] |= 0x00000001u;
}
 void MsgModifySectionNameACK::clear_has_section() {
  _has_bits_[0] &= ~0x00000001u;
}
 void MsgModifySectionNameACK::clear_section() {
  section_ = 0;
  clear_has_section();
}
 ::google::protobuf::int32 MsgModifySectionNameACK::section() const {
  // @@protoc_insertion_point(field_get:message.MsgModifySectionNameACK.section)
  return section_;
}
 void MsgModifySectionNameACK::set_section(::google::protobuf::int32 value) {
  set_has_section();
  section_ = value;
  // @@protoc_insertion_point(field_set:message.MsgModifySectionNameACK.section)
}

// required string section_name = 2;
 bool MsgModifySectionNameACK::has_section_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
 void MsgModifySectionNameACK::set_has_section_name() {
  _has_bits_[0] |= 0x00000002u;
}
 void MsgModifySectionNameACK::clear_has_section_name() {
  _has_bits_[0] &= ~0x00000002u;
}
 void MsgModifySectionNameACK::clear_section_name() {
  section_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_section_name();
}
 const ::std::string& MsgModifySectionNameACK::section_name() const {
  // @@protoc_insertion_point(field_get:message.MsgModifySectionNameACK.section_name)
  return section_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MsgModifySectionNameACK::set_section_name(const ::std::string& value) {
  set_has_section_name();
  section_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message.MsgModifySectionNameACK.section_name)
}
 void MsgModifySectionNameACK::set_section_name(const char* value) {
  set_has_section_name();
  section_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.MsgModifySectionNameACK.section_name)
}
 void MsgModifySectionNameACK::set_section_name(const char* value, size_t size) {
  set_has_section_name();
  section_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.MsgModifySectionNameACK.section_name)
}
 ::std::string* MsgModifySectionNameACK::mutable_section_name() {
  set_has_section_name();
  // @@protoc_insertion_point(field_mutable:message.MsgModifySectionNameACK.section_name)
  return section_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MsgModifySectionNameACK::release_section_name() {
  clear_has_section_name();
  return section_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MsgModifySectionNameACK::set_allocated_section_name(::std::string* section_name) {
  if (section_name != NULL) {
    set_has_section_name();
  } else {
    clear_has_section_name();
  }
  section_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), section_name);
  // @@protoc_insertion_point(field_set_allocated:message.MsgModifySectionNameACK.section_name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

MsgSectionNameReq::MsgSectionNameReq()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.MsgSectionNameReq)
}

void MsgSectionNameReq::InitAsDefaultInstance() {
}

MsgSectionNameReq::MsgSectionNameReq(const MsgSectionNameReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message.MsgSectionNameReq)
}

void MsgSectionNameReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgSectionNameReq::~MsgSectionNameReq() {
  // @@protoc_insertion_point(destructor:message.MsgSectionNameReq)
  SharedDtor();
}

void MsgSectionNameReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgSectionNameReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgSectionNameReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgSectionNameReq_descriptor_;
}

const MsgSectionNameReq& MsgSectionNameReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_crashmo_2eproto();
  return *default_instance_;
}

MsgSectionNameReq* MsgSectionNameReq::default_instance_ = NULL;

MsgSectionNameReq* MsgSectionNameReq::New(::google::protobuf::Arena* arena) const {
  MsgSectionNameReq* n = new MsgSectionNameReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgSectionNameReq::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool MsgSectionNameReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.MsgSectionNameReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:message.MsgSectionNameReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.MsgSectionNameReq)
  return false;
#undef DO_
}

void MsgSectionNameReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.MsgSectionNameReq)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.MsgSectionNameReq)
}

::google::protobuf::uint8* MsgSectionNameReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.MsgSectionNameReq)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.MsgSectionNameReq)
  return target;
}

int MsgSectionNameReq::ByteSize() const {
  int total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgSectionNameReq::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MsgSectionNameReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgSectionNameReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgSectionNameReq::MergeFrom(const MsgSectionNameReq& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void MsgSectionNameReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgSectionNameReq::CopyFrom(const MsgSectionNameReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgSectionNameReq::IsInitialized() const {

  return true;
}

void MsgSectionNameReq::Swap(MsgSectionNameReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgSectionNameReq::InternalSwap(MsgSectionNameReq* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgSectionNameReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgSectionNameReq_descriptor_;
  metadata.reflection = MsgSectionNameReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgSectionNameReq

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int MsgSectionNameACK::kSectionsFieldNumber;
#endif  // !_MSC_VER

MsgSectionNameACK::MsgSectionNameACK()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.MsgSectionNameACK)
}

void MsgSectionNameACK::InitAsDefaultInstance() {
}

MsgSectionNameACK::MsgSectionNameACK(const MsgSectionNameACK& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message.MsgSectionNameACK)
}

void MsgSectionNameACK::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgSectionNameACK::~MsgSectionNameACK() {
  // @@protoc_insertion_point(destructor:message.MsgSectionNameACK)
  SharedDtor();
}

void MsgSectionNameACK::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgSectionNameACK::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgSectionNameACK::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgSectionNameACK_descriptor_;
}

const MsgSectionNameACK& MsgSectionNameACK::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_crashmo_2eproto();
  return *default_instance_;
}

MsgSectionNameACK* MsgSectionNameACK::default_instance_ = NULL;

MsgSectionNameACK* MsgSectionNameACK::New(::google::protobuf::Arena* arena) const {
  MsgSectionNameACK* n = new MsgSectionNameACK;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgSectionNameACK::Clear() {
  sections_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool MsgSectionNameACK::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.MsgSectionNameACK)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .message.MsgIntStringProto sections = 1;
      case 1: {
        if (tag == 10) {
         parse_sections:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_sections()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_sections;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.MsgSectionNameACK)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.MsgSectionNameACK)
  return false;
#undef DO_
}

void MsgSectionNameACK::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.MsgSectionNameACK)
  // repeated .message.MsgIntStringProto sections = 1;
  for (unsigned int i = 0, n = this->sections_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->sections(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.MsgSectionNameACK)
}

::google::protobuf::uint8* MsgSectionNameACK::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.MsgSectionNameACK)
  // repeated .message.MsgIntStringProto sections = 1;
  for (unsigned int i = 0, n = this->sections_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->sections(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.MsgSectionNameACK)
  return target;
}

int MsgSectionNameACK::ByteSize() const {
  int total_size = 0;

  // repeated .message.MsgIntStringProto sections = 1;
  total_size += 1 * this->sections_size();
  for (int i = 0; i < this->sections_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->sections(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgSectionNameACK::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MsgSectionNameACK* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgSectionNameACK*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgSectionNameACK::MergeFrom(const MsgSectionNameACK& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  sections_.MergeFrom(from.sections_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void MsgSectionNameACK::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgSectionNameACK::CopyFrom(const MsgSectionNameACK& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgSectionNameACK::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->sections())) return false;
  return true;
}

void MsgSectionNameACK::Swap(MsgSectionNameACK* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgSectionNameACK::InternalSwap(MsgSectionNameACK* other) {
  sections_.UnsafeArenaSwap(&other->sections_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgSectionNameACK::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgSectionNameACK_descriptor_;
  metadata.reflection = MsgSectionNameACK_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgSectionNameACK

// repeated .message.MsgIntStringProto sections = 1;
 int MsgSectionNameACK::sections_size() const {
  return sections_.size();
}
 void MsgSectionNameACK::clear_sections() {
  sections_.Clear();
}
 const ::message::MsgIntStringProto& MsgSectionNameACK::sections(int index) const {
  // @@protoc_insertion_point(field_get:message.MsgSectionNameACK.sections)
  return sections_.Get(index);
}
 ::message::MsgIntStringProto* MsgSectionNameACK::mutable_sections(int index) {
  // @@protoc_insertion_point(field_mutable:message.MsgSectionNameACK.sections)
  return sections_.Mutable(index);
}
 ::message::MsgIntStringProto* MsgSectionNameACK::add_sections() {
  // @@protoc_insertion_point(field_add:message.MsgSectionNameACK.sections)
  return sections_.Add();
}
 const ::google::protobuf::RepeatedPtrField< ::message::MsgIntStringProto >&
MsgSectionNameACK::sections() const {
  // @@protoc_insertion_point(field_list:message.MsgSectionNameACK.sections)
  return sections_;
}
 ::google::protobuf::RepeatedPtrField< ::message::MsgIntStringProto >*
MsgSectionNameACK::mutable_sections() {
  // @@protoc_insertion_point(field_mutable_list:message.MsgSectionNameACK.sections)
  return &sections_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int MsgS2CNotifyPing::kTimeStampFieldNumber;
const int MsgS2CNotifyPing::kPingCountFieldNumber;
#endif  // !_MSC_VER

MsgS2CNotifyPing::MsgS2CNotifyPing()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.MsgS2CNotifyPing)
}

void MsgS2CNotifyPing::InitAsDefaultInstance() {
}

MsgS2CNotifyPing::MsgS2CNotifyPing(const MsgS2CNotifyPing& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message.MsgS2CNotifyPing)
}

void MsgS2CNotifyPing::SharedCtor() {
  _cached_size_ = 0;
  time_stamp_ = GOOGLE_LONGLONG(0);
  ping_count_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgS2CNotifyPing::~MsgS2CNotifyPing() {
  // @@protoc_insertion_point(destructor:message.MsgS2CNotifyPing)
  SharedDtor();
}

void MsgS2CNotifyPing::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgS2CNotifyPing::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgS2CNotifyPing::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgS2CNotifyPing_descriptor_;
}

const MsgS2CNotifyPing& MsgS2CNotifyPing::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_crashmo_2eproto();
  return *default_instance_;
}

MsgS2CNotifyPing* MsgS2CNotifyPing::default_instance_ = NULL;

MsgS2CNotifyPing* MsgS2CNotifyPing::New(::google::protobuf::Arena* arena) const {
  MsgS2CNotifyPing* n = new MsgS2CNotifyPing;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgS2CNotifyPing::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<MsgS2CNotifyPing*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(time_stamp_, ping_count_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool MsgS2CNotifyPing::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.MsgS2CNotifyPing)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 time_stamp = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &time_stamp_)));
          set_has_time_stamp();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ping_count;
        break;
      }

      // required int32 ping_count = 2;
      case 2: {
        if (tag == 16) {
         parse_ping_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ping_count_)));
          set_has_ping_count();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.MsgS2CNotifyPing)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.MsgS2CNotifyPing)
  return false;
#undef DO_
}

void MsgS2CNotifyPing::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.MsgS2CNotifyPing)
  // required int64 time_stamp = 1;
  if (has_time_stamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->time_stamp(), output);
  }

  // required int32 ping_count = 2;
  if (has_ping_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->ping_count(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.MsgS2CNotifyPing)
}

::google::protobuf::uint8* MsgS2CNotifyPing::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.MsgS2CNotifyPing)
  // required int64 time_stamp = 1;
  if (has_time_stamp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->time_stamp(), target);
  }

  // required int32 ping_count = 2;
  if (has_ping_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->ping_count(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.MsgS2CNotifyPing)
  return target;
}

int MsgS2CNotifyPing::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_time_stamp()) {
    // required int64 time_stamp = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->time_stamp());
  }

  if (has_ping_count()) {
    // required int32 ping_count = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ping_count());
  }

  return total_size;
}
int MsgS2CNotifyPing::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int64 time_stamp = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->time_stamp());

    // required int32 ping_count = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ping_count());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgS2CNotifyPing::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MsgS2CNotifyPing* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgS2CNotifyPing*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgS2CNotifyPing::MergeFrom(const MsgS2CNotifyPing& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_time_stamp()) {
      set_time_stamp(from.time_stamp());
    }
    if (from.has_ping_count()) {
      set_ping_count(from.ping_count());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void MsgS2CNotifyPing::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgS2CNotifyPing::CopyFrom(const MsgS2CNotifyPing& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgS2CNotifyPing::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void MsgS2CNotifyPing::Swap(MsgS2CNotifyPing* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgS2CNotifyPing::InternalSwap(MsgS2CNotifyPing* other) {
  std::swap(time_stamp_, other->time_stamp_);
  std::swap(ping_count_, other->ping_count_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgS2CNotifyPing::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgS2CNotifyPing_descriptor_;
  metadata.reflection = MsgS2CNotifyPing_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgS2CNotifyPing

// required int64 time_stamp = 1;
 bool MsgS2CNotifyPing::has_time_stamp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void MsgS2CNotifyPing::set_has_time_stamp() {
  _has_bits_[0] |= 0x00000001u;
}
 void MsgS2CNotifyPing::clear_has_time_stamp() {
  _has_bits_[0] &= ~0x00000001u;
}
 void MsgS2CNotifyPing::clear_time_stamp() {
  time_stamp_ = GOOGLE_LONGLONG(0);
  clear_has_time_stamp();
}
 ::google::protobuf::int64 MsgS2CNotifyPing::time_stamp() const {
  // @@protoc_insertion_point(field_get:message.MsgS2CNotifyPing.time_stamp)
  return time_stamp_;
}
 void MsgS2CNotifyPing::set_time_stamp(::google::protobuf::int64 value) {
  set_has_time_stamp();
  time_stamp_ = value;
  // @@protoc_insertion_point(field_set:message.MsgS2CNotifyPing.time_stamp)
}

// required int32 ping_count = 2;
 bool MsgS2CNotifyPing::has_ping_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
 void MsgS2CNotifyPing::set_has_ping_count() {
  _has_bits_[0] |= 0x00000002u;
}
 void MsgS2CNotifyPing::clear_has_ping_count() {
  _has_bits_[0] &= ~0x00000002u;
}
 void MsgS2CNotifyPing::clear_ping_count() {
  ping_count_ = 0;
  clear_has_ping_count();
}
 ::google::protobuf::int32 MsgS2CNotifyPing::ping_count() const {
  // @@protoc_insertion_point(field_get:message.MsgS2CNotifyPing.ping_count)
  return ping_count_;
}
 void MsgS2CNotifyPing::set_ping_count(::google::protobuf::int32 value) {
  set_has_ping_count();
  ping_count_ = value;
  // @@protoc_insertion_point(field_set:message.MsgS2CNotifyPing.ping_count)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

MsgC2SOfficeStatusReq::MsgC2SOfficeStatusReq()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.MsgC2SOfficeStatusReq)
}

void MsgC2SOfficeStatusReq::InitAsDefaultInstance() {
}

MsgC2SOfficeStatusReq::MsgC2SOfficeStatusReq(const MsgC2SOfficeStatusReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message.MsgC2SOfficeStatusReq)
}

void MsgC2SOfficeStatusReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgC2SOfficeStatusReq::~MsgC2SOfficeStatusReq() {
  // @@protoc_insertion_point(destructor:message.MsgC2SOfficeStatusReq)
  SharedDtor();
}

void MsgC2SOfficeStatusReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgC2SOfficeStatusReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgC2SOfficeStatusReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgC2SOfficeStatusReq_descriptor_;
}

const MsgC2SOfficeStatusReq& MsgC2SOfficeStatusReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_crashmo_2eproto();
  return *default_instance_;
}

MsgC2SOfficeStatusReq* MsgC2SOfficeStatusReq::default_instance_ = NULL;

MsgC2SOfficeStatusReq* MsgC2SOfficeStatusReq::New(::google::protobuf::Arena* arena) const {
  MsgC2SOfficeStatusReq* n = new MsgC2SOfficeStatusReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgC2SOfficeStatusReq::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool MsgC2SOfficeStatusReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.MsgC2SOfficeStatusReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:message.MsgC2SOfficeStatusReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.MsgC2SOfficeStatusReq)
  return false;
#undef DO_
}

void MsgC2SOfficeStatusReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.MsgC2SOfficeStatusReq)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.MsgC2SOfficeStatusReq)
}

::google::protobuf::uint8* MsgC2SOfficeStatusReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.MsgC2SOfficeStatusReq)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.MsgC2SOfficeStatusReq)
  return target;
}

int MsgC2SOfficeStatusReq::ByteSize() const {
  int total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgC2SOfficeStatusReq::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MsgC2SOfficeStatusReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgC2SOfficeStatusReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgC2SOfficeStatusReq::MergeFrom(const MsgC2SOfficeStatusReq& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void MsgC2SOfficeStatusReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgC2SOfficeStatusReq::CopyFrom(const MsgC2SOfficeStatusReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgC2SOfficeStatusReq::IsInitialized() const {

  return true;
}

void MsgC2SOfficeStatusReq::Swap(MsgC2SOfficeStatusReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgC2SOfficeStatusReq::InternalSwap(MsgC2SOfficeStatusReq* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgC2SOfficeStatusReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgC2SOfficeStatusReq_descriptor_;
  metadata.reflection = MsgC2SOfficeStatusReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgC2SOfficeStatusReq

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int MsgS2COfficeStatusACK::kChapterIdFieldNumber;
#endif  // !_MSC_VER

MsgS2COfficeStatusACK::MsgS2COfficeStatusACK()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.MsgS2COfficeStatusACK)
}

void MsgS2COfficeStatusACK::InitAsDefaultInstance() {
}

MsgS2COfficeStatusACK::MsgS2COfficeStatusACK(const MsgS2COfficeStatusACK& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message.MsgS2COfficeStatusACK)
}

void MsgS2COfficeStatusACK::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgS2COfficeStatusACK::~MsgS2COfficeStatusACK() {
  // @@protoc_insertion_point(destructor:message.MsgS2COfficeStatusACK)
  SharedDtor();
}

void MsgS2COfficeStatusACK::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgS2COfficeStatusACK::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgS2COfficeStatusACK::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgS2COfficeStatusACK_descriptor_;
}

const MsgS2COfficeStatusACK& MsgS2COfficeStatusACK::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_crashmo_2eproto();
  return *default_instance_;
}

MsgS2COfficeStatusACK* MsgS2COfficeStatusACK::default_instance_ = NULL;

MsgS2COfficeStatusACK* MsgS2COfficeStatusACK::New(::google::protobuf::Arena* arena) const {
  MsgS2COfficeStatusACK* n = new MsgS2COfficeStatusACK;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgS2COfficeStatusACK::Clear() {
  chapter_id_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool MsgS2COfficeStatusACK::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.MsgS2COfficeStatusACK)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 chapter_id = 1;
      case 1: {
        if (tag == 8) {
         parse_chapter_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8, input, this->mutable_chapter_id())));
        } else if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_chapter_id())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(8)) goto parse_chapter_id;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.MsgS2COfficeStatusACK)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.MsgS2COfficeStatusACK)
  return false;
#undef DO_
}

void MsgS2COfficeStatusACK::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.MsgS2COfficeStatusACK)
  // repeated int32 chapter_id = 1;
  for (int i = 0; i < this->chapter_id_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->chapter_id(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.MsgS2COfficeStatusACK)
}

::google::protobuf::uint8* MsgS2COfficeStatusACK::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.MsgS2COfficeStatusACK)
  // repeated int32 chapter_id = 1;
  for (int i = 0; i < this->chapter_id_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(1, this->chapter_id(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.MsgS2COfficeStatusACK)
  return target;
}

int MsgS2COfficeStatusACK::ByteSize() const {
  int total_size = 0;

  // repeated int32 chapter_id = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->chapter_id_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->chapter_id(i));
    }
    total_size += 1 * this->chapter_id_size() + data_size;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgS2COfficeStatusACK::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MsgS2COfficeStatusACK* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgS2COfficeStatusACK*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgS2COfficeStatusACK::MergeFrom(const MsgS2COfficeStatusACK& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  chapter_id_.MergeFrom(from.chapter_id_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void MsgS2COfficeStatusACK::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgS2COfficeStatusACK::CopyFrom(const MsgS2COfficeStatusACK& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgS2COfficeStatusACK::IsInitialized() const {

  return true;
}

void MsgS2COfficeStatusACK::Swap(MsgS2COfficeStatusACK* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgS2COfficeStatusACK::InternalSwap(MsgS2COfficeStatusACK* other) {
  chapter_id_.UnsafeArenaSwap(&other->chapter_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgS2COfficeStatusACK::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgS2COfficeStatusACK_descriptor_;
  metadata.reflection = MsgS2COfficeStatusACK_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgS2COfficeStatusACK

// repeated int32 chapter_id = 1;
 int MsgS2COfficeStatusACK::chapter_id_size() const {
  return chapter_id_.size();
}
 void MsgS2COfficeStatusACK::clear_chapter_id() {
  chapter_id_.Clear();
}
 ::google::protobuf::int32 MsgS2COfficeStatusACK::chapter_id(int index) const {
  // @@protoc_insertion_point(field_get:message.MsgS2COfficeStatusACK.chapter_id)
  return chapter_id_.Get(index);
}
 void MsgS2COfficeStatusACK::set_chapter_id(int index, ::google::protobuf::int32 value) {
  chapter_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:message.MsgS2COfficeStatusACK.chapter_id)
}
 void MsgS2COfficeStatusACK::add_chapter_id(::google::protobuf::int32 value) {
  chapter_id_.Add(value);
  // @@protoc_insertion_point(field_add:message.MsgS2COfficeStatusACK.chapter_id)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
MsgS2COfficeStatusACK::chapter_id() const {
  // @@protoc_insertion_point(field_list:message.MsgS2COfficeStatusACK.chapter_id)
  return chapter_id_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
MsgS2COfficeStatusACK::mutable_chapter_id() {
  // @@protoc_insertion_point(field_mutable_list:message.MsgS2COfficeStatusACK.chapter_id)
  return &chapter_id_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int MsgC2SOfficeMapReq::kChapterIdFieldNumber;
const int MsgC2SOfficeMapReq::kSectionIdFieldNumber;
const int MsgC2SOfficeMapReq::kMapCountFieldNumber;
#endif  // !_MSC_VER

MsgC2SOfficeMapReq::MsgC2SOfficeMapReq()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.MsgC2SOfficeMapReq)
}

void MsgC2SOfficeMapReq::InitAsDefaultInstance() {
}

MsgC2SOfficeMapReq::MsgC2SOfficeMapReq(const MsgC2SOfficeMapReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message.MsgC2SOfficeMapReq)
}

void MsgC2SOfficeMapReq::SharedCtor() {
  _cached_size_ = 0;
  chapter_id_ = 0;
  section_id_ = 0;
  map_count_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgC2SOfficeMapReq::~MsgC2SOfficeMapReq() {
  // @@protoc_insertion_point(destructor:message.MsgC2SOfficeMapReq)
  SharedDtor();
}

void MsgC2SOfficeMapReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgC2SOfficeMapReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgC2SOfficeMapReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgC2SOfficeMapReq_descriptor_;
}

const MsgC2SOfficeMapReq& MsgC2SOfficeMapReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_crashmo_2eproto();
  return *default_instance_;
}

MsgC2SOfficeMapReq* MsgC2SOfficeMapReq::default_instance_ = NULL;

MsgC2SOfficeMapReq* MsgC2SOfficeMapReq::New(::google::protobuf::Arena* arena) const {
  MsgC2SOfficeMapReq* n = new MsgC2SOfficeMapReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgC2SOfficeMapReq::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<MsgC2SOfficeMapReq*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(chapter_id_, map_count_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool MsgC2SOfficeMapReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.MsgC2SOfficeMapReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 chapter_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &chapter_id_)));
          set_has_chapter_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_section_id;
        break;
      }

      // required int32 section_id = 2;
      case 2: {
        if (tag == 16) {
         parse_section_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &section_id_)));
          set_has_section_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_map_count;
        break;
      }

      // required int32 map_count = 3;
      case 3: {
        if (tag == 24) {
         parse_map_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &map_count_)));
          set_has_map_count();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.MsgC2SOfficeMapReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.MsgC2SOfficeMapReq)
  return false;
#undef DO_
}

void MsgC2SOfficeMapReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.MsgC2SOfficeMapReq)
  // required int32 chapter_id = 1;
  if (has_chapter_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->chapter_id(), output);
  }

  // required int32 section_id = 2;
  if (has_section_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->section_id(), output);
  }

  // required int32 map_count = 3;
  if (has_map_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->map_count(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.MsgC2SOfficeMapReq)
}

::google::protobuf::uint8* MsgC2SOfficeMapReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.MsgC2SOfficeMapReq)
  // required int32 chapter_id = 1;
  if (has_chapter_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->chapter_id(), target);
  }

  // required int32 section_id = 2;
  if (has_section_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->section_id(), target);
  }

  // required int32 map_count = 3;
  if (has_map_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->map_count(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.MsgC2SOfficeMapReq)
  return target;
}

int MsgC2SOfficeMapReq::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_chapter_id()) {
    // required int32 chapter_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->chapter_id());
  }

  if (has_section_id()) {
    // required int32 section_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->section_id());
  }

  if (has_map_count()) {
    // required int32 map_count = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->map_count());
  }

  return total_size;
}
int MsgC2SOfficeMapReq::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required int32 chapter_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->chapter_id());

    // required int32 section_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->section_id());

    // required int32 map_count = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->map_count());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgC2SOfficeMapReq::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MsgC2SOfficeMapReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgC2SOfficeMapReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgC2SOfficeMapReq::MergeFrom(const MsgC2SOfficeMapReq& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_chapter_id()) {
      set_chapter_id(from.chapter_id());
    }
    if (from.has_section_id()) {
      set_section_id(from.section_id());
    }
    if (from.has_map_count()) {
      set_map_count(from.map_count());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void MsgC2SOfficeMapReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgC2SOfficeMapReq::CopyFrom(const MsgC2SOfficeMapReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgC2SOfficeMapReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void MsgC2SOfficeMapReq::Swap(MsgC2SOfficeMapReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgC2SOfficeMapReq::InternalSwap(MsgC2SOfficeMapReq* other) {
  std::swap(chapter_id_, other->chapter_id_);
  std::swap(section_id_, other->section_id_);
  std::swap(map_count_, other->map_count_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgC2SOfficeMapReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgC2SOfficeMapReq_descriptor_;
  metadata.reflection = MsgC2SOfficeMapReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgC2SOfficeMapReq

// required int32 chapter_id = 1;
 bool MsgC2SOfficeMapReq::has_chapter_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void MsgC2SOfficeMapReq::set_has_chapter_id() {
  _has_bits_[0] |= 0x00000001u;
}
 void MsgC2SOfficeMapReq::clear_has_chapter_id() {
  _has_bits_[0] &= ~0x00000001u;
}
 void MsgC2SOfficeMapReq::clear_chapter_id() {
  chapter_id_ = 0;
  clear_has_chapter_id();
}
 ::google::protobuf::int32 MsgC2SOfficeMapReq::chapter_id() const {
  // @@protoc_insertion_point(field_get:message.MsgC2SOfficeMapReq.chapter_id)
  return chapter_id_;
}
 void MsgC2SOfficeMapReq::set_chapter_id(::google::protobuf::int32 value) {
  set_has_chapter_id();
  chapter_id_ = value;
  // @@protoc_insertion_point(field_set:message.MsgC2SOfficeMapReq.chapter_id)
}

// required int32 section_id = 2;
 bool MsgC2SOfficeMapReq::has_section_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
 void MsgC2SOfficeMapReq::set_has_section_id() {
  _has_bits_[0] |= 0x00000002u;
}
 void MsgC2SOfficeMapReq::clear_has_section_id() {
  _has_bits_[0] &= ~0x00000002u;
}
 void MsgC2SOfficeMapReq::clear_section_id() {
  section_id_ = 0;
  clear_has_section_id();
}
 ::google::protobuf::int32 MsgC2SOfficeMapReq::section_id() const {
  // @@protoc_insertion_point(field_get:message.MsgC2SOfficeMapReq.section_id)
  return section_id_;
}
 void MsgC2SOfficeMapReq::set_section_id(::google::protobuf::int32 value) {
  set_has_section_id();
  section_id_ = value;
  // @@protoc_insertion_point(field_set:message.MsgC2SOfficeMapReq.section_id)
}

// required int32 map_count = 3;
 bool MsgC2SOfficeMapReq::has_map_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
 void MsgC2SOfficeMapReq::set_has_map_count() {
  _has_bits_[0] |= 0x00000004u;
}
 void MsgC2SOfficeMapReq::clear_has_map_count() {
  _has_bits_[0] &= ~0x00000004u;
}
 void MsgC2SOfficeMapReq::clear_map_count() {
  map_count_ = 0;
  clear_has_map_count();
}
 ::google::protobuf::int32 MsgC2SOfficeMapReq::map_count() const {
  // @@protoc_insertion_point(field_get:message.MsgC2SOfficeMapReq.map_count)
  return map_count_;
}
 void MsgC2SOfficeMapReq::set_map_count(::google::protobuf::int32 value) {
  set_has_map_count();
  map_count_ = value;
  // @@protoc_insertion_point(field_set:message.MsgC2SOfficeMapReq.map_count)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int MsgS2COfficeMapACK::kChapterIdFieldNumber;
const int MsgS2COfficeMapACK::kSectionIdFieldNumber;
const int MsgS2COfficeMapACK::kMapsFieldNumber;
const int MsgS2COfficeMapACK::kSectionCountFieldNumber;
#endif  // !_MSC_VER

MsgS2COfficeMapACK::MsgS2COfficeMapACK()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.MsgS2COfficeMapACK)
}

void MsgS2COfficeMapACK::InitAsDefaultInstance() {
}

MsgS2COfficeMapACK::MsgS2COfficeMapACK(const MsgS2COfficeMapACK& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message.MsgS2COfficeMapACK)
}

void MsgS2COfficeMapACK::SharedCtor() {
  _cached_size_ = 0;
  chapter_id_ = 0;
  section_id_ = 0;
  section_count_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgS2COfficeMapACK::~MsgS2COfficeMapACK() {
  // @@protoc_insertion_point(destructor:message.MsgS2COfficeMapACK)
  SharedDtor();
}

void MsgS2COfficeMapACK::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgS2COfficeMapACK::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgS2COfficeMapACK::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgS2COfficeMapACK_descriptor_;
}

const MsgS2COfficeMapACK& MsgS2COfficeMapACK::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_crashmo_2eproto();
  return *default_instance_;
}

MsgS2COfficeMapACK* MsgS2COfficeMapACK::default_instance_ = NULL;

MsgS2COfficeMapACK* MsgS2COfficeMapACK::New(::google::protobuf::Arena* arena) const {
  MsgS2COfficeMapACK* n = new MsgS2COfficeMapACK;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgS2COfficeMapACK::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<MsgS2COfficeMapACK*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 11) {
    ZR_(chapter_id_, section_id_);
    section_count_ = 0;
  }

#undef ZR_HELPER_
#undef ZR_

  maps_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool MsgS2COfficeMapACK::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.MsgS2COfficeMapACK)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 chapter_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &chapter_id_)));
          set_has_chapter_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_section_id;
        break;
      }

      // required int32 section_id = 2;
      case 2: {
        if (tag == 16) {
         parse_section_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &section_id_)));
          set_has_section_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_maps;
        break;
      }

      // repeated .message.CrashMapData maps = 3;
      case 3: {
        if (tag == 26) {
         parse_maps:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_maps()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_maps;
        if (input->ExpectTag(32)) goto parse_section_count;
        break;
      }

      // required int32 section_count = 4;
      case 4: {
        if (tag == 32) {
         parse_section_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &section_count_)));
          set_has_section_count();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.MsgS2COfficeMapACK)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.MsgS2COfficeMapACK)
  return false;
#undef DO_
}

void MsgS2COfficeMapACK::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.MsgS2COfficeMapACK)
  // required int32 chapter_id = 1;
  if (has_chapter_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->chapter_id(), output);
  }

  // required int32 section_id = 2;
  if (has_section_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->section_id(), output);
  }

  // repeated .message.CrashMapData maps = 3;
  for (unsigned int i = 0, n = this->maps_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->maps(i), output);
  }

  // required int32 section_count = 4;
  if (has_section_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->section_count(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.MsgS2COfficeMapACK)
}

::google::protobuf::uint8* MsgS2COfficeMapACK::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.MsgS2COfficeMapACK)
  // required int32 chapter_id = 1;
  if (has_chapter_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->chapter_id(), target);
  }

  // required int32 section_id = 2;
  if (has_section_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->section_id(), target);
  }

  // repeated .message.CrashMapData maps = 3;
  for (unsigned int i = 0, n = this->maps_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->maps(i), target);
  }

  // required int32 section_count = 4;
  if (has_section_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->section_count(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.MsgS2COfficeMapACK)
  return target;
}

int MsgS2COfficeMapACK::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_chapter_id()) {
    // required int32 chapter_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->chapter_id());
  }

  if (has_section_id()) {
    // required int32 section_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->section_id());
  }

  if (has_section_count()) {
    // required int32 section_count = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->section_count());
  }

  return total_size;
}
int MsgS2COfficeMapACK::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x0000000b) ^ 0x0000000b) == 0) {  // All required fields are present.
    // required int32 chapter_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->chapter_id());

    // required int32 section_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->section_id());

    // required int32 section_count = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->section_count());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .message.CrashMapData maps = 3;
  total_size += 1 * this->maps_size();
  for (int i = 0; i < this->maps_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->maps(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgS2COfficeMapACK::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MsgS2COfficeMapACK* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgS2COfficeMapACK*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgS2COfficeMapACK::MergeFrom(const MsgS2COfficeMapACK& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  maps_.MergeFrom(from.maps_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_chapter_id()) {
      set_chapter_id(from.chapter_id());
    }
    if (from.has_section_id()) {
      set_section_id(from.section_id());
    }
    if (from.has_section_count()) {
      set_section_count(from.section_count());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void MsgS2COfficeMapACK::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgS2COfficeMapACK::CopyFrom(const MsgS2COfficeMapACK& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgS2COfficeMapACK::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000b) != 0x0000000b) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->maps())) return false;
  return true;
}

void MsgS2COfficeMapACK::Swap(MsgS2COfficeMapACK* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgS2COfficeMapACK::InternalSwap(MsgS2COfficeMapACK* other) {
  std::swap(chapter_id_, other->chapter_id_);
  std::swap(section_id_, other->section_id_);
  maps_.UnsafeArenaSwap(&other->maps_);
  std::swap(section_count_, other->section_count_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgS2COfficeMapACK::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgS2COfficeMapACK_descriptor_;
  metadata.reflection = MsgS2COfficeMapACK_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgS2COfficeMapACK

// required int32 chapter_id = 1;
 bool MsgS2COfficeMapACK::has_chapter_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void MsgS2COfficeMapACK::set_has_chapter_id() {
  _has_bits_[0] |= 0x00000001u;
}
 void MsgS2COfficeMapACK::clear_has_chapter_id() {
  _has_bits_[0] &= ~0x00000001u;
}
 void MsgS2COfficeMapACK::clear_chapter_id() {
  chapter_id_ = 0;
  clear_has_chapter_id();
}
 ::google::protobuf::int32 MsgS2COfficeMapACK::chapter_id() const {
  // @@protoc_insertion_point(field_get:message.MsgS2COfficeMapACK.chapter_id)
  return chapter_id_;
}
 void MsgS2COfficeMapACK::set_chapter_id(::google::protobuf::int32 value) {
  set_has_chapter_id();
  chapter_id_ = value;
  // @@protoc_insertion_point(field_set:message.MsgS2COfficeMapACK.chapter_id)
}

// required int32 section_id = 2;
 bool MsgS2COfficeMapACK::has_section_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
 void MsgS2COfficeMapACK::set_has_section_id() {
  _has_bits_[0] |= 0x00000002u;
}
 void MsgS2COfficeMapACK::clear_has_section_id() {
  _has_bits_[0] &= ~0x00000002u;
}
 void MsgS2COfficeMapACK::clear_section_id() {
  section_id_ = 0;
  clear_has_section_id();
}
 ::google::protobuf::int32 MsgS2COfficeMapACK::section_id() const {
  // @@protoc_insertion_point(field_get:message.MsgS2COfficeMapACK.section_id)
  return section_id_;
}
 void MsgS2COfficeMapACK::set_section_id(::google::protobuf::int32 value) {
  set_has_section_id();
  section_id_ = value;
  // @@protoc_insertion_point(field_set:message.MsgS2COfficeMapACK.section_id)
}

// repeated .message.CrashMapData maps = 3;
 int MsgS2COfficeMapACK::maps_size() const {
  return maps_.size();
}
 void MsgS2COfficeMapACK::clear_maps() {
  maps_.Clear();
}
 const ::message::CrashMapData& MsgS2COfficeMapACK::maps(int index) const {
  // @@protoc_insertion_point(field_get:message.MsgS2COfficeMapACK.maps)
  return maps_.Get(index);
}
 ::message::CrashMapData* MsgS2COfficeMapACK::mutable_maps(int index) {
  // @@protoc_insertion_point(field_mutable:message.MsgS2COfficeMapACK.maps)
  return maps_.Mutable(index);
}
 ::message::CrashMapData* MsgS2COfficeMapACK::add_maps() {
  // @@protoc_insertion_point(field_add:message.MsgS2COfficeMapACK.maps)
  return maps_.Add();
}
 const ::google::protobuf::RepeatedPtrField< ::message::CrashMapData >&
MsgS2COfficeMapACK::maps() const {
  // @@protoc_insertion_point(field_list:message.MsgS2COfficeMapACK.maps)
  return maps_;
}
 ::google::protobuf::RepeatedPtrField< ::message::CrashMapData >*
MsgS2COfficeMapACK::mutable_maps() {
  // @@protoc_insertion_point(field_mutable_list:message.MsgS2COfficeMapACK.maps)
  return &maps_;
}

// required int32 section_count = 4;
 bool MsgS2COfficeMapACK::has_section_count() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
 void MsgS2COfficeMapACK::set_has_section_count() {
  _has_bits_[0] |= 0x00000008u;
}
 void MsgS2COfficeMapACK::clear_has_section_count() {
  _has_bits_[0] &= ~0x00000008u;
}
 void MsgS2COfficeMapACK::clear_section_count() {
  section_count_ = 0;
  clear_has_section_count();
}
 ::google::protobuf::int32 MsgS2COfficeMapACK::section_count() const {
  // @@protoc_insertion_point(field_get:message.MsgS2COfficeMapACK.section_count)
  return section_count_;
}
 void MsgS2COfficeMapACK::set_section_count(::google::protobuf::int32 value) {
  set_has_section_count();
  section_count_ = value;
  // @@protoc_insertion_point(field_set:message.MsgS2COfficeMapACK.section_count)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int MsgC2SRankMapReq::kRankBeginFieldNumber;
const int MsgC2SRankMapReq::kTimeStampFieldNumber;
const int MsgC2SRankMapReq::kMapCountFieldNumber;
#endif  // !_MSC_VER

MsgC2SRankMapReq::MsgC2SRankMapReq()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.MsgC2SRankMapReq)
}

void MsgC2SRankMapReq::InitAsDefaultInstance() {
}

MsgC2SRankMapReq::MsgC2SRankMapReq(const MsgC2SRankMapReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message.MsgC2SRankMapReq)
}

void MsgC2SRankMapReq::SharedCtor() {
  _cached_size_ = 0;
  rank_begin_ = 0;
  time_stamp_ = GOOGLE_LONGLONG(0);
  map_count_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgC2SRankMapReq::~MsgC2SRankMapReq() {
  // @@protoc_insertion_point(destructor:message.MsgC2SRankMapReq)
  SharedDtor();
}

void MsgC2SRankMapReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgC2SRankMapReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgC2SRankMapReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgC2SRankMapReq_descriptor_;
}

const MsgC2SRankMapReq& MsgC2SRankMapReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_crashmo_2eproto();
  return *default_instance_;
}

MsgC2SRankMapReq* MsgC2SRankMapReq::default_instance_ = NULL;

MsgC2SRankMapReq* MsgC2SRankMapReq::New(::google::protobuf::Arena* arena) const {
  MsgC2SRankMapReq* n = new MsgC2SRankMapReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgC2SRankMapReq::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<MsgC2SRankMapReq*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(time_stamp_, map_count_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool MsgC2SRankMapReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.MsgC2SRankMapReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 rank_begin = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rank_begin_)));
          set_has_rank_begin();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_time_stamp;
        break;
      }

      // required int64 time_stamp = 2;
      case 2: {
        if (tag == 16) {
         parse_time_stamp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &time_stamp_)));
          set_has_time_stamp();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_map_count;
        break;
      }

      // required int32 map_count = 3;
      case 3: {
        if (tag == 24) {
         parse_map_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &map_count_)));
          set_has_map_count();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.MsgC2SRankMapReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.MsgC2SRankMapReq)
  return false;
#undef DO_
}

void MsgC2SRankMapReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.MsgC2SRankMapReq)
  // required int32 rank_begin = 1;
  if (has_rank_begin()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->rank_begin(), output);
  }

  // required int64 time_stamp = 2;
  if (has_time_stamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->time_stamp(), output);
  }

  // required int32 map_count = 3;
  if (has_map_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->map_count(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.MsgC2SRankMapReq)
}

::google::protobuf::uint8* MsgC2SRankMapReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.MsgC2SRankMapReq)
  // required int32 rank_begin = 1;
  if (has_rank_begin()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->rank_begin(), target);
  }

  // required int64 time_stamp = 2;
  if (has_time_stamp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->time_stamp(), target);
  }

  // required int32 map_count = 3;
  if (has_map_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->map_count(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.MsgC2SRankMapReq)
  return target;
}

int MsgC2SRankMapReq::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_rank_begin()) {
    // required int32 rank_begin = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rank_begin());
  }

  if (has_time_stamp()) {
    // required int64 time_stamp = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->time_stamp());
  }

  if (has_map_count()) {
    // required int32 map_count = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->map_count());
  }

  return total_size;
}
int MsgC2SRankMapReq::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required int32 rank_begin = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rank_begin());

    // required int64 time_stamp = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->time_stamp());

    // required int32 map_count = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->map_count());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgC2SRankMapReq::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MsgC2SRankMapReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgC2SRankMapReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgC2SRankMapReq::MergeFrom(const MsgC2SRankMapReq& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_rank_begin()) {
      set_rank_begin(from.rank_begin());
    }
    if (from.has_time_stamp()) {
      set_time_stamp(from.time_stamp());
    }
    if (from.has_map_count()) {
      set_map_count(from.map_count());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void MsgC2SRankMapReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgC2SRankMapReq::CopyFrom(const MsgC2SRankMapReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgC2SRankMapReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void MsgC2SRankMapReq::Swap(MsgC2SRankMapReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgC2SRankMapReq::InternalSwap(MsgC2SRankMapReq* other) {
  std::swap(rank_begin_, other->rank_begin_);
  std::swap(time_stamp_, other->time_stamp_);
  std::swap(map_count_, other->map_count_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgC2SRankMapReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgC2SRankMapReq_descriptor_;
  metadata.reflection = MsgC2SRankMapReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgC2SRankMapReq

// required int32 rank_begin = 1;
 bool MsgC2SRankMapReq::has_rank_begin() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void MsgC2SRankMapReq::set_has_rank_begin() {
  _has_bits_[0] |= 0x00000001u;
}
 void MsgC2SRankMapReq::clear_has_rank_begin() {
  _has_bits_[0] &= ~0x00000001u;
}
 void MsgC2SRankMapReq::clear_rank_begin() {
  rank_begin_ = 0;
  clear_has_rank_begin();
}
 ::google::protobuf::int32 MsgC2SRankMapReq::rank_begin() const {
  // @@protoc_insertion_point(field_get:message.MsgC2SRankMapReq.rank_begin)
  return rank_begin_;
}
 void MsgC2SRankMapReq::set_rank_begin(::google::protobuf::int32 value) {
  set_has_rank_begin();
  rank_begin_ = value;
  // @@protoc_insertion_point(field_set:message.MsgC2SRankMapReq.rank_begin)
}

// required int64 time_stamp = 2;
 bool MsgC2SRankMapReq::has_time_stamp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
 void MsgC2SRankMapReq::set_has_time_stamp() {
  _has_bits_[0] |= 0x00000002u;
}
 void MsgC2SRankMapReq::clear_has_time_stamp() {
  _has_bits_[0] &= ~0x00000002u;
}
 void MsgC2SRankMapReq::clear_time_stamp() {
  time_stamp_ = GOOGLE_LONGLONG(0);
  clear_has_time_stamp();
}
 ::google::protobuf::int64 MsgC2SRankMapReq::time_stamp() const {
  // @@protoc_insertion_point(field_get:message.MsgC2SRankMapReq.time_stamp)
  return time_stamp_;
}
 void MsgC2SRankMapReq::set_time_stamp(::google::protobuf::int64 value) {
  set_has_time_stamp();
  time_stamp_ = value;
  // @@protoc_insertion_point(field_set:message.MsgC2SRankMapReq.time_stamp)
}

// required int32 map_count = 3;
 bool MsgC2SRankMapReq::has_map_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
 void MsgC2SRankMapReq::set_has_map_count() {
  _has_bits_[0] |= 0x00000004u;
}
 void MsgC2SRankMapReq::clear_has_map_count() {
  _has_bits_[0] &= ~0x00000004u;
}
 void MsgC2SRankMapReq::clear_map_count() {
  map_count_ = 0;
  clear_has_map_count();
}
 ::google::protobuf::int32 MsgC2SRankMapReq::map_count() const {
  // @@protoc_insertion_point(field_get:message.MsgC2SRankMapReq.map_count)
  return map_count_;
}
 void MsgC2SRankMapReq::set_map_count(::google::protobuf::int32 value) {
  set_has_map_count();
  map_count_ = value;
  // @@protoc_insertion_point(field_set:message.MsgC2SRankMapReq.map_count)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int MsgS2CRankMapACK::kMapsFieldNumber;
const int MsgS2CRankMapACK::kEndRankFieldNumber;
const int MsgS2CRankMapACK::kTimeStampFieldNumber;
const int MsgS2CRankMapACK::kRankMapCountFieldNumber;
#endif  // !_MSC_VER

MsgS2CRankMapACK::MsgS2CRankMapACK()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.MsgS2CRankMapACK)
}

void MsgS2CRankMapACK::InitAsDefaultInstance() {
}

MsgS2CRankMapACK::MsgS2CRankMapACK(const MsgS2CRankMapACK& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message.MsgS2CRankMapACK)
}

void MsgS2CRankMapACK::SharedCtor() {
  _cached_size_ = 0;
  end_rank_ = 0;
  time_stamp_ = GOOGLE_LONGLONG(0);
  rank_map_count_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgS2CRankMapACK::~MsgS2CRankMapACK() {
  // @@protoc_insertion_point(destructor:message.MsgS2CRankMapACK)
  SharedDtor();
}

void MsgS2CRankMapACK::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgS2CRankMapACK::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgS2CRankMapACK::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgS2CRankMapACK_descriptor_;
}

const MsgS2CRankMapACK& MsgS2CRankMapACK::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_crashmo_2eproto();
  return *default_instance_;
}

MsgS2CRankMapACK* MsgS2CRankMapACK::default_instance_ = NULL;

MsgS2CRankMapACK* MsgS2CRankMapACK::New(::google::protobuf::Arena* arena) const {
  MsgS2CRankMapACK* n = new MsgS2CRankMapACK;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgS2CRankMapACK::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<MsgS2CRankMapACK*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(time_stamp_, rank_map_count_);

#undef ZR_HELPER_
#undef ZR_

  maps_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool MsgS2CRankMapACK::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.MsgS2CRankMapACK)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .message.CrashPlayerPublishMap maps = 1;
      case 1: {
        if (tag == 10) {
         parse_maps:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_maps()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_maps;
        if (input->ExpectTag(16)) goto parse_end_rank;
        break;
      }

      // required int32 end_rank = 2;
      case 2: {
        if (tag == 16) {
         parse_end_rank:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &end_rank_)));
          set_has_end_rank();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_time_stamp;
        break;
      }

      // required int64 time_stamp = 3;
      case 3: {
        if (tag == 24) {
         parse_time_stamp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &time_stamp_)));
          set_has_time_stamp();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_rank_map_count;
        break;
      }

      // required int32 rank_map_count = 4;
      case 4: {
        if (tag == 32) {
         parse_rank_map_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rank_map_count_)));
          set_has_rank_map_count();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.MsgS2CRankMapACK)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.MsgS2CRankMapACK)
  return false;
#undef DO_
}

void MsgS2CRankMapACK::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.MsgS2CRankMapACK)
  // repeated .message.CrashPlayerPublishMap maps = 1;
  for (unsigned int i = 0, n = this->maps_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->maps(i), output);
  }

  // required int32 end_rank = 2;
  if (has_end_rank()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->end_rank(), output);
  }

  // required int64 time_stamp = 3;
  if (has_time_stamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->time_stamp(), output);
  }

  // required int32 rank_map_count = 4;
  if (has_rank_map_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->rank_map_count(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.MsgS2CRankMapACK)
}

::google::protobuf::uint8* MsgS2CRankMapACK::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.MsgS2CRankMapACK)
  // repeated .message.CrashPlayerPublishMap maps = 1;
  for (unsigned int i = 0, n = this->maps_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->maps(i), target);
  }

  // required int32 end_rank = 2;
  if (has_end_rank()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->end_rank(), target);
  }

  // required int64 time_stamp = 3;
  if (has_time_stamp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->time_stamp(), target);
  }

  // required int32 rank_map_count = 4;
  if (has_rank_map_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->rank_map_count(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.MsgS2CRankMapACK)
  return target;
}

int MsgS2CRankMapACK::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_end_rank()) {
    // required int32 end_rank = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->end_rank());
  }

  if (has_time_stamp()) {
    // required int64 time_stamp = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->time_stamp());
  }

  if (has_rank_map_count()) {
    // required int32 rank_map_count = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rank_map_count());
  }

  return total_size;
}
int MsgS2CRankMapACK::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x0000000e) ^ 0x0000000e) == 0) {  // All required fields are present.
    // required int32 end_rank = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->end_rank());

    // required int64 time_stamp = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->time_stamp());

    // required int32 rank_map_count = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rank_map_count());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .message.CrashPlayerPublishMap maps = 1;
  total_size += 1 * this->maps_size();
  for (int i = 0; i < this->maps_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->maps(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgS2CRankMapACK::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MsgS2CRankMapACK* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgS2CRankMapACK*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgS2CRankMapACK::MergeFrom(const MsgS2CRankMapACK& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  maps_.MergeFrom(from.maps_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_end_rank()) {
      set_end_rank(from.end_rank());
    }
    if (from.has_time_stamp()) {
      set_time_stamp(from.time_stamp());
    }
    if (from.has_rank_map_count()) {
      set_rank_map_count(from.rank_map_count());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void MsgS2CRankMapACK::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgS2CRankMapACK::CopyFrom(const MsgS2CRankMapACK& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgS2CRankMapACK::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000e) != 0x0000000e) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->maps())) return false;
  return true;
}

void MsgS2CRankMapACK::Swap(MsgS2CRankMapACK* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgS2CRankMapACK::InternalSwap(MsgS2CRankMapACK* other) {
  maps_.UnsafeArenaSwap(&other->maps_);
  std::swap(end_rank_, other->end_rank_);
  std::swap(time_stamp_, other->time_stamp_);
  std::swap(rank_map_count_, other->rank_map_count_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgS2CRankMapACK::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgS2CRankMapACK_descriptor_;
  metadata.reflection = MsgS2CRankMapACK_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgS2CRankMapACK

// repeated .message.CrashPlayerPublishMap maps = 1;
 int MsgS2CRankMapACK::maps_size() const {
  return maps_.size();
}
 void MsgS2CRankMapACK::clear_maps() {
  maps_.Clear();
}
 const ::message::CrashPlayerPublishMap& MsgS2CRankMapACK::maps(int index) const {
  // @@protoc_insertion_point(field_get:message.MsgS2CRankMapACK.maps)
  return maps_.Get(index);
}
 ::message::CrashPlayerPublishMap* MsgS2CRankMapACK::mutable_maps(int index) {
  // @@protoc_insertion_point(field_mutable:message.MsgS2CRankMapACK.maps)
  return maps_.Mutable(index);
}
 ::message::CrashPlayerPublishMap* MsgS2CRankMapACK::add_maps() {
  // @@protoc_insertion_point(field_add:message.MsgS2CRankMapACK.maps)
  return maps_.Add();
}
 const ::google::protobuf::RepeatedPtrField< ::message::CrashPlayerPublishMap >&
MsgS2CRankMapACK::maps() const {
  // @@protoc_insertion_point(field_list:message.MsgS2CRankMapACK.maps)
  return maps_;
}
 ::google::protobuf::RepeatedPtrField< ::message::CrashPlayerPublishMap >*
MsgS2CRankMapACK::mutable_maps() {
  // @@protoc_insertion_point(field_mutable_list:message.MsgS2CRankMapACK.maps)
  return &maps_;
}

// required int32 end_rank = 2;
 bool MsgS2CRankMapACK::has_end_rank() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
 void MsgS2CRankMapACK::set_has_end_rank() {
  _has_bits_[0] |= 0x00000002u;
}
 void MsgS2CRankMapACK::clear_has_end_rank() {
  _has_bits_[0] &= ~0x00000002u;
}
 void MsgS2CRankMapACK::clear_end_rank() {
  end_rank_ = 0;
  clear_has_end_rank();
}
 ::google::protobuf::int32 MsgS2CRankMapACK::end_rank() const {
  // @@protoc_insertion_point(field_get:message.MsgS2CRankMapACK.end_rank)
  return end_rank_;
}
 void MsgS2CRankMapACK::set_end_rank(::google::protobuf::int32 value) {
  set_has_end_rank();
  end_rank_ = value;
  // @@protoc_insertion_point(field_set:message.MsgS2CRankMapACK.end_rank)
}

// required int64 time_stamp = 3;
 bool MsgS2CRankMapACK::has_time_stamp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
 void MsgS2CRankMapACK::set_has_time_stamp() {
  _has_bits_[0] |= 0x00000004u;
}
 void MsgS2CRankMapACK::clear_has_time_stamp() {
  _has_bits_[0] &= ~0x00000004u;
}
 void MsgS2CRankMapACK::clear_time_stamp() {
  time_stamp_ = GOOGLE_LONGLONG(0);
  clear_has_time_stamp();
}
 ::google::protobuf::int64 MsgS2CRankMapACK::time_stamp() const {
  // @@protoc_insertion_point(field_get:message.MsgS2CRankMapACK.time_stamp)
  return time_stamp_;
}
 void MsgS2CRankMapACK::set_time_stamp(::google::protobuf::int64 value) {
  set_has_time_stamp();
  time_stamp_ = value;
  // @@protoc_insertion_point(field_set:message.MsgS2CRankMapACK.time_stamp)
}

// required int32 rank_map_count = 4;
 bool MsgS2CRankMapACK::has_rank_map_count() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
 void MsgS2CRankMapACK::set_has_rank_map_count() {
  _has_bits_[0] |= 0x00000008u;
}
 void MsgS2CRankMapACK::clear_has_rank_map_count() {
  _has_bits_[0] &= ~0x00000008u;
}
 void MsgS2CRankMapACK::clear_rank_map_count() {
  rank_map_count_ = 0;
  clear_has_rank_map_count();
}
 ::google::protobuf::int32 MsgS2CRankMapACK::rank_map_count() const {
  // @@protoc_insertion_point(field_get:message.MsgS2CRankMapACK.rank_map_count)
  return rank_map_count_;
}
 void MsgS2CRankMapACK::set_rank_map_count(::google::protobuf::int32 value) {
  set_has_rank_map_count();
  rank_map_count_ = value;
  // @@protoc_insertion_point(field_set:message.MsgS2CRankMapACK.rank_map_count)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int MsgS2CRankMapRefreshNotify::kTimeStampFieldNumber;
#endif  // !_MSC_VER

MsgS2CRankMapRefreshNotify::MsgS2CRankMapRefreshNotify()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.MsgS2CRankMapRefreshNotify)
}

void MsgS2CRankMapRefreshNotify::InitAsDefaultInstance() {
}

MsgS2CRankMapRefreshNotify::MsgS2CRankMapRefreshNotify(const MsgS2CRankMapRefreshNotify& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message.MsgS2CRankMapRefreshNotify)
}

void MsgS2CRankMapRefreshNotify::SharedCtor() {
  _cached_size_ = 0;
  time_stamp_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgS2CRankMapRefreshNotify::~MsgS2CRankMapRefreshNotify() {
  // @@protoc_insertion_point(destructor:message.MsgS2CRankMapRefreshNotify)
  SharedDtor();
}

void MsgS2CRankMapRefreshNotify::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgS2CRankMapRefreshNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgS2CRankMapRefreshNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgS2CRankMapRefreshNotify_descriptor_;
}

const MsgS2CRankMapRefreshNotify& MsgS2CRankMapRefreshNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_crashmo_2eproto();
  return *default_instance_;
}

MsgS2CRankMapRefreshNotify* MsgS2CRankMapRefreshNotify::default_instance_ = NULL;

MsgS2CRankMapRefreshNotify* MsgS2CRankMapRefreshNotify::New(::google::protobuf::Arena* arena) const {
  MsgS2CRankMapRefreshNotify* n = new MsgS2CRankMapRefreshNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgS2CRankMapRefreshNotify::Clear() {
  time_stamp_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool MsgS2CRankMapRefreshNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.MsgS2CRankMapRefreshNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 time_stamp = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &time_stamp_)));
          set_has_time_stamp();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.MsgS2CRankMapRefreshNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.MsgS2CRankMapRefreshNotify)
  return false;
#undef DO_
}

void MsgS2CRankMapRefreshNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.MsgS2CRankMapRefreshNotify)
  // required int64 time_stamp = 1;
  if (has_time_stamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->time_stamp(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.MsgS2CRankMapRefreshNotify)
}

::google::protobuf::uint8* MsgS2CRankMapRefreshNotify::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.MsgS2CRankMapRefreshNotify)
  // required int64 time_stamp = 1;
  if (has_time_stamp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->time_stamp(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.MsgS2CRankMapRefreshNotify)
  return target;
}

int MsgS2CRankMapRefreshNotify::ByteSize() const {
  int total_size = 0;

  // required int64 time_stamp = 1;
  if (has_time_stamp()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->time_stamp());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgS2CRankMapRefreshNotify::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MsgS2CRankMapRefreshNotify* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgS2CRankMapRefreshNotify*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgS2CRankMapRefreshNotify::MergeFrom(const MsgS2CRankMapRefreshNotify& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_time_stamp()) {
      set_time_stamp(from.time_stamp());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void MsgS2CRankMapRefreshNotify::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgS2CRankMapRefreshNotify::CopyFrom(const MsgS2CRankMapRefreshNotify& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgS2CRankMapRefreshNotify::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void MsgS2CRankMapRefreshNotify::Swap(MsgS2CRankMapRefreshNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgS2CRankMapRefreshNotify::InternalSwap(MsgS2CRankMapRefreshNotify* other) {
  std::swap(time_stamp_, other->time_stamp_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgS2CRankMapRefreshNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgS2CRankMapRefreshNotify_descriptor_;
  metadata.reflection = MsgS2CRankMapRefreshNotify_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgS2CRankMapRefreshNotify

// required int64 time_stamp = 1;
 bool MsgS2CRankMapRefreshNotify::has_time_stamp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void MsgS2CRankMapRefreshNotify::set_has_time_stamp() {
  _has_bits_[0] |= 0x00000001u;
}
 void MsgS2CRankMapRefreshNotify::clear_has_time_stamp() {
  _has_bits_[0] &= ~0x00000001u;
}
 void MsgS2CRankMapRefreshNotify::clear_time_stamp() {
  time_stamp_ = GOOGLE_LONGLONG(0);
  clear_has_time_stamp();
}
 ::google::protobuf::int64 MsgS2CRankMapRefreshNotify::time_stamp() const {
  // @@protoc_insertion_point(field_get:message.MsgS2CRankMapRefreshNotify.time_stamp)
  return time_stamp_;
}
 void MsgS2CRankMapRefreshNotify::set_time_stamp(::google::protobuf::int64 value) {
  set_has_time_stamp();
  time_stamp_ = value;
  // @@protoc_insertion_point(field_set:message.MsgS2CRankMapRefreshNotify.time_stamp)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace message

// @@protoc_insertion_point(global_scope)
