// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gs2client.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "gs2client.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace message {

namespace {

const ::google::protobuf::Descriptor* NoneCharacter2Client_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NoneCharacter2Client_reflection_ = NULL;
const ::google::protobuf::Descriptor* NotifyClientInit_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NotifyClientInit_reflection_ = NULL;
const ::google::protobuf::Descriptor* UpdateInstanceStatusReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UpdateInstanceStatusReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* UpdateInstanceStatusACK_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UpdateInstanceStatusACK_reflection_ = NULL;
const ::google::protobuf::Descriptor* AddToyReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AddToyReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* AddToyACK_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AddToyACK_reflection_ = NULL;
const ::google::protobuf::Descriptor* InstancePassReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  InstancePassReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* InstancePassACK_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  InstancePassACK_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_gs2client_2eproto() {
  protobuf_AddDesc_gs2client_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "gs2client.proto");
  GOOGLE_CHECK(file != NULL);
  NoneCharacter2Client_descriptor_ = file->message_type(0);
  static const int NoneCharacter2Client_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NoneCharacter2Client, instances_status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NoneCharacter2Client, toys_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NoneCharacter2Client, pass_instances_),
  };
  NoneCharacter2Client_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      NoneCharacter2Client_descriptor_,
      NoneCharacter2Client::default_instance_,
      NoneCharacter2Client_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NoneCharacter2Client, _has_bits_[0]),
      -1,
      -1,
      sizeof(NoneCharacter2Client),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NoneCharacter2Client, _internal_metadata_),
      -1);
  NotifyClientInit_descriptor_ = file->message_type(1);
  static const int NotifyClientInit_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyClientInit, data_),
  };
  NotifyClientInit_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      NotifyClientInit_descriptor_,
      NotifyClientInit::default_instance_,
      NotifyClientInit_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyClientInit, _has_bits_[0]),
      -1,
      -1,
      sizeof(NotifyClientInit),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyClientInit, _internal_metadata_),
      -1);
  UpdateInstanceStatusReq_descriptor_ = file->message_type(2);
  static const int UpdateInstanceStatusReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateInstanceStatusReq, instance_status_),
  };
  UpdateInstanceStatusReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      UpdateInstanceStatusReq_descriptor_,
      UpdateInstanceStatusReq::default_instance_,
      UpdateInstanceStatusReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateInstanceStatusReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(UpdateInstanceStatusReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateInstanceStatusReq, _internal_metadata_),
      -1);
  UpdateInstanceStatusACK_descriptor_ = file->message_type(3);
  static const int UpdateInstanceStatusACK_offsets_[1] = {
  };
  UpdateInstanceStatusACK_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      UpdateInstanceStatusACK_descriptor_,
      UpdateInstanceStatusACK::default_instance_,
      UpdateInstanceStatusACK_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateInstanceStatusACK, _has_bits_[0]),
      -1,
      -1,
      sizeof(UpdateInstanceStatusACK),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateInstanceStatusACK, _internal_metadata_),
      -1);
  AddToyReq_descriptor_ = file->message_type(4);
  static const int AddToyReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddToyReq, toy_id_),
  };
  AddToyReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AddToyReq_descriptor_,
      AddToyReq::default_instance_,
      AddToyReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddToyReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(AddToyReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddToyReq, _internal_metadata_),
      -1);
  AddToyACK_descriptor_ = file->message_type(5);
  static const int AddToyACK_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddToyACK, toy_id_),
  };
  AddToyACK_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AddToyACK_descriptor_,
      AddToyACK::default_instance_,
      AddToyACK_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddToyACK, _has_bits_[0]),
      -1,
      -1,
      sizeof(AddToyACK),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddToyACK, _internal_metadata_),
      -1);
  InstancePassReq_descriptor_ = file->message_type(6);
  static const int InstancePassReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InstancePassReq, instance_id_),
  };
  InstancePassReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      InstancePassReq_descriptor_,
      InstancePassReq::default_instance_,
      InstancePassReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InstancePassReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(InstancePassReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InstancePassReq, _internal_metadata_),
      -1);
  InstancePassACK_descriptor_ = file->message_type(7);
  static const int InstancePassACK_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InstancePassACK, instance_id_),
  };
  InstancePassACK_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      InstancePassACK_descriptor_,
      InstancePassACK::default_instance_,
      InstancePassACK_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InstancePassACK, _has_bits_[0]),
      -1,
      -1,
      sizeof(InstancePassACK),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InstancePassACK, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_gs2client_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      NoneCharacter2Client_descriptor_, &NoneCharacter2Client::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      NotifyClientInit_descriptor_, &NotifyClientInit::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      UpdateInstanceStatusReq_descriptor_, &UpdateInstanceStatusReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      UpdateInstanceStatusACK_descriptor_, &UpdateInstanceStatusACK::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AddToyReq_descriptor_, &AddToyReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AddToyACK_descriptor_, &AddToyACK::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      InstancePassReq_descriptor_, &InstancePassReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      InstancePassACK_descriptor_, &InstancePassACK::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_gs2client_2eproto() {
  delete NoneCharacter2Client::default_instance_;
  delete NoneCharacter2Client_reflection_;
  delete NotifyClientInit::default_instance_;
  delete NotifyClientInit_reflection_;
  delete UpdateInstanceStatusReq::default_instance_;
  delete UpdateInstanceStatusReq_reflection_;
  delete UpdateInstanceStatusACK::default_instance_;
  delete UpdateInstanceStatusACK_reflection_;
  delete AddToyReq::default_instance_;
  delete AddToyReq_reflection_;
  delete AddToyACK::default_instance_;
  delete AddToyACK_reflection_;
  delete InstancePassReq::default_instance_;
  delete InstancePassReq_reflection_;
  delete InstancePassACK::default_instance_;
  delete InstancePassACK_reflection_;
}

void protobuf_AddDesc_gs2client_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::message::protobuf_AddDesc_common_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\017gs2client.proto\022\007message\032\014common.proto"
    "\"q\n\024NoneCharacter2Client\022\030\n\020instances_st"
    "atus\030\001 \002(\014\022\'\n\004toys\030\002 \003(\0132\031.message.ToySt"
    "ateProperty\022\026\n\016pass_instances\030\003 \003(\005\"\?\n\020N"
    "otifyClientInit\022+\n\004data\030\001 \002(\0132\035.message."
    "NoneCharacter2Client\"2\n\027UpdateInstanceSt"
    "atusReq\022\027\n\017instance_status\030\001 \002(\014\"\031\n\027Upda"
    "teInstanceStatusACK\"\033\n\tAddToyReq\022\016\n\006toy_"
    "id\030\001 \002(\005\"\033\n\tAddToyACK\022\016\n\006toy_id\030\001 \002(\005\"&\n"
    "\017InstancePassReq\022\023\n\013instance_id\030\001 \002(\005\"&\n"
    "\017InstancePassACK\022\023\n\013instance_id\030\001 \002(\005", 437);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "gs2client.proto", &protobuf_RegisterTypes);
  NoneCharacter2Client::default_instance_ = new NoneCharacter2Client();
  NotifyClientInit::default_instance_ = new NotifyClientInit();
  UpdateInstanceStatusReq::default_instance_ = new UpdateInstanceStatusReq();
  UpdateInstanceStatusACK::default_instance_ = new UpdateInstanceStatusACK();
  AddToyReq::default_instance_ = new AddToyReq();
  AddToyACK::default_instance_ = new AddToyACK();
  InstancePassReq::default_instance_ = new InstancePassReq();
  InstancePassACK::default_instance_ = new InstancePassACK();
  NoneCharacter2Client::default_instance_->InitAsDefaultInstance();
  NotifyClientInit::default_instance_->InitAsDefaultInstance();
  UpdateInstanceStatusReq::default_instance_->InitAsDefaultInstance();
  UpdateInstanceStatusACK::default_instance_->InitAsDefaultInstance();
  AddToyReq::default_instance_->InitAsDefaultInstance();
  AddToyACK::default_instance_->InitAsDefaultInstance();
  InstancePassReq::default_instance_->InitAsDefaultInstance();
  InstancePassACK::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_gs2client_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_gs2client_2eproto {
  StaticDescriptorInitializer_gs2client_2eproto() {
    protobuf_AddDesc_gs2client_2eproto();
  }
} static_descriptor_initializer_gs2client_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#ifndef _MSC_VER
const int NoneCharacter2Client::kInstancesStatusFieldNumber;
const int NoneCharacter2Client::kToysFieldNumber;
const int NoneCharacter2Client::kPassInstancesFieldNumber;
#endif  // !_MSC_VER

NoneCharacter2Client::NoneCharacter2Client()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.NoneCharacter2Client)
}

void NoneCharacter2Client::InitAsDefaultInstance() {
}

NoneCharacter2Client::NoneCharacter2Client(const NoneCharacter2Client& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message.NoneCharacter2Client)
}

void NoneCharacter2Client::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  instances_status_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NoneCharacter2Client::~NoneCharacter2Client() {
  // @@protoc_insertion_point(destructor:message.NoneCharacter2Client)
  SharedDtor();
}

void NoneCharacter2Client::SharedDtor() {
  instances_status_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void NoneCharacter2Client::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NoneCharacter2Client::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NoneCharacter2Client_descriptor_;
}

const NoneCharacter2Client& NoneCharacter2Client::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_gs2client_2eproto();
  return *default_instance_;
}

NoneCharacter2Client* NoneCharacter2Client::default_instance_ = NULL;

NoneCharacter2Client* NoneCharacter2Client::New(::google::protobuf::Arena* arena) const {
  NoneCharacter2Client* n = new NoneCharacter2Client;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NoneCharacter2Client::Clear() {
  if (has_instances_status()) {
    instances_status_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  toys_.Clear();
  pass_instances_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool NoneCharacter2Client::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.NoneCharacter2Client)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes instances_status = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_instances_status()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_toys;
        break;
      }

      // repeated .message.ToyStateProperty toys = 2;
      case 2: {
        if (tag == 18) {
         parse_toys:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_toys()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_toys;
        if (input->ExpectTag(24)) goto parse_pass_instances;
        break;
      }

      // repeated int32 pass_instances = 3;
      case 3: {
        if (tag == 24) {
         parse_pass_instances:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 24, input, this->mutable_pass_instances())));
        } else if (tag == 26) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_pass_instances())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_pass_instances;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.NoneCharacter2Client)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.NoneCharacter2Client)
  return false;
#undef DO_
}

void NoneCharacter2Client::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.NoneCharacter2Client)
  // required bytes instances_status = 1;
  if (has_instances_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->instances_status(), output);
  }

  // repeated .message.ToyStateProperty toys = 2;
  for (unsigned int i = 0, n = this->toys_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->toys(i), output);
  }

  // repeated int32 pass_instances = 3;
  for (int i = 0; i < this->pass_instances_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      3, this->pass_instances(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.NoneCharacter2Client)
}

::google::protobuf::uint8* NoneCharacter2Client::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.NoneCharacter2Client)
  // required bytes instances_status = 1;
  if (has_instances_status()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->instances_status(), target);
  }

  // repeated .message.ToyStateProperty toys = 2;
  for (unsigned int i = 0, n = this->toys_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->toys(i), target);
  }

  // repeated int32 pass_instances = 3;
  for (int i = 0; i < this->pass_instances_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(3, this->pass_instances(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.NoneCharacter2Client)
  return target;
}

int NoneCharacter2Client::ByteSize() const {
  int total_size = 0;

  // required bytes instances_status = 1;
  if (has_instances_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->instances_status());
  }
  // repeated .message.ToyStateProperty toys = 2;
  total_size += 1 * this->toys_size();
  for (int i = 0; i < this->toys_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->toys(i));
  }

  // repeated int32 pass_instances = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->pass_instances_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->pass_instances(i));
    }
    total_size += 1 * this->pass_instances_size() + data_size;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NoneCharacter2Client::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const NoneCharacter2Client* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const NoneCharacter2Client*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NoneCharacter2Client::MergeFrom(const NoneCharacter2Client& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  toys_.MergeFrom(from.toys_);
  pass_instances_.MergeFrom(from.pass_instances_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_instances_status()) {
      set_has_instances_status();
      instances_status_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.instances_status_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void NoneCharacter2Client::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NoneCharacter2Client::CopyFrom(const NoneCharacter2Client& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NoneCharacter2Client::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->toys())) return false;
  return true;
}

void NoneCharacter2Client::Swap(NoneCharacter2Client* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NoneCharacter2Client::InternalSwap(NoneCharacter2Client* other) {
  instances_status_.Swap(&other->instances_status_);
  toys_.UnsafeArenaSwap(&other->toys_);
  pass_instances_.UnsafeArenaSwap(&other->pass_instances_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NoneCharacter2Client::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NoneCharacter2Client_descriptor_;
  metadata.reflection = NoneCharacter2Client_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// NoneCharacter2Client

// required bytes instances_status = 1;
 bool NoneCharacter2Client::has_instances_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void NoneCharacter2Client::set_has_instances_status() {
  _has_bits_[0] |= 0x00000001u;
}
 void NoneCharacter2Client::clear_has_instances_status() {
  _has_bits_[0] &= ~0x00000001u;
}
 void NoneCharacter2Client::clear_instances_status() {
  instances_status_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_instances_status();
}
 const ::std::string& NoneCharacter2Client::instances_status() const {
  // @@protoc_insertion_point(field_get:message.NoneCharacter2Client.instances_status)
  return instances_status_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NoneCharacter2Client::set_instances_status(const ::std::string& value) {
  set_has_instances_status();
  instances_status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message.NoneCharacter2Client.instances_status)
}
 void NoneCharacter2Client::set_instances_status(const char* value) {
  set_has_instances_status();
  instances_status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.NoneCharacter2Client.instances_status)
}
 void NoneCharacter2Client::set_instances_status(const void* value, size_t size) {
  set_has_instances_status();
  instances_status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.NoneCharacter2Client.instances_status)
}
 ::std::string* NoneCharacter2Client::mutable_instances_status() {
  set_has_instances_status();
  // @@protoc_insertion_point(field_mutable:message.NoneCharacter2Client.instances_status)
  return instances_status_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* NoneCharacter2Client::release_instances_status() {
  clear_has_instances_status();
  return instances_status_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NoneCharacter2Client::set_allocated_instances_status(::std::string* instances_status) {
  if (instances_status != NULL) {
    set_has_instances_status();
  } else {
    clear_has_instances_status();
  }
  instances_status_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), instances_status);
  // @@protoc_insertion_point(field_set_allocated:message.NoneCharacter2Client.instances_status)
}

// repeated .message.ToyStateProperty toys = 2;
 int NoneCharacter2Client::toys_size() const {
  return toys_.size();
}
 void NoneCharacter2Client::clear_toys() {
  toys_.Clear();
}
 const ::message::ToyStateProperty& NoneCharacter2Client::toys(int index) const {
  // @@protoc_insertion_point(field_get:message.NoneCharacter2Client.toys)
  return toys_.Get(index);
}
 ::message::ToyStateProperty* NoneCharacter2Client::mutable_toys(int index) {
  // @@protoc_insertion_point(field_mutable:message.NoneCharacter2Client.toys)
  return toys_.Mutable(index);
}
 ::message::ToyStateProperty* NoneCharacter2Client::add_toys() {
  // @@protoc_insertion_point(field_add:message.NoneCharacter2Client.toys)
  return toys_.Add();
}
 const ::google::protobuf::RepeatedPtrField< ::message::ToyStateProperty >&
NoneCharacter2Client::toys() const {
  // @@protoc_insertion_point(field_list:message.NoneCharacter2Client.toys)
  return toys_;
}
 ::google::protobuf::RepeatedPtrField< ::message::ToyStateProperty >*
NoneCharacter2Client::mutable_toys() {
  // @@protoc_insertion_point(field_mutable_list:message.NoneCharacter2Client.toys)
  return &toys_;
}

// repeated int32 pass_instances = 3;
 int NoneCharacter2Client::pass_instances_size() const {
  return pass_instances_.size();
}
 void NoneCharacter2Client::clear_pass_instances() {
  pass_instances_.Clear();
}
 ::google::protobuf::int32 NoneCharacter2Client::pass_instances(int index) const {
  // @@protoc_insertion_point(field_get:message.NoneCharacter2Client.pass_instances)
  return pass_instances_.Get(index);
}
 void NoneCharacter2Client::set_pass_instances(int index, ::google::protobuf::int32 value) {
  pass_instances_.Set(index, value);
  // @@protoc_insertion_point(field_set:message.NoneCharacter2Client.pass_instances)
}
 void NoneCharacter2Client::add_pass_instances(::google::protobuf::int32 value) {
  pass_instances_.Add(value);
  // @@protoc_insertion_point(field_add:message.NoneCharacter2Client.pass_instances)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
NoneCharacter2Client::pass_instances() const {
  // @@protoc_insertion_point(field_list:message.NoneCharacter2Client.pass_instances)
  return pass_instances_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
NoneCharacter2Client::mutable_pass_instances() {
  // @@protoc_insertion_point(field_mutable_list:message.NoneCharacter2Client.pass_instances)
  return &pass_instances_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int NotifyClientInit::kDataFieldNumber;
#endif  // !_MSC_VER

NotifyClientInit::NotifyClientInit()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.NotifyClientInit)
}

void NotifyClientInit::InitAsDefaultInstance() {
  data_ = const_cast< ::message::NoneCharacter2Client*>(&::message::NoneCharacter2Client::default_instance());
}

NotifyClientInit::NotifyClientInit(const NotifyClientInit& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message.NotifyClientInit)
}

void NotifyClientInit::SharedCtor() {
  _cached_size_ = 0;
  data_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NotifyClientInit::~NotifyClientInit() {
  // @@protoc_insertion_point(destructor:message.NotifyClientInit)
  SharedDtor();
}

void NotifyClientInit::SharedDtor() {
  if (this != default_instance_) {
    delete data_;
  }
}

void NotifyClientInit::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NotifyClientInit::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NotifyClientInit_descriptor_;
}

const NotifyClientInit& NotifyClientInit::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_gs2client_2eproto();
  return *default_instance_;
}

NotifyClientInit* NotifyClientInit::default_instance_ = NULL;

NotifyClientInit* NotifyClientInit::New(::google::protobuf::Arena* arena) const {
  NotifyClientInit* n = new NotifyClientInit;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NotifyClientInit::Clear() {
  if (has_data()) {
    if (data_ != NULL) data_->::message::NoneCharacter2Client::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool NotifyClientInit::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.NotifyClientInit)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .message.NoneCharacter2Client data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.NotifyClientInit)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.NotifyClientInit)
  return false;
#undef DO_
}

void NotifyClientInit::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.NotifyClientInit)
  // required .message.NoneCharacter2Client data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->data_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.NotifyClientInit)
}

::google::protobuf::uint8* NotifyClientInit::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.NotifyClientInit)
  // required .message.NoneCharacter2Client data = 1;
  if (has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, *this->data_, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.NotifyClientInit)
  return target;
}

int NotifyClientInit::ByteSize() const {
  int total_size = 0;

  // required .message.NoneCharacter2Client data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->data_);
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NotifyClientInit::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const NotifyClientInit* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const NotifyClientInit*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NotifyClientInit::MergeFrom(const NotifyClientInit& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      mutable_data()->::message::NoneCharacter2Client::MergeFrom(from.data());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void NotifyClientInit::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NotifyClientInit::CopyFrom(const NotifyClientInit& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifyClientInit::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_data()) {
    if (!this->data_->IsInitialized()) return false;
  }
  return true;
}

void NotifyClientInit::Swap(NotifyClientInit* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NotifyClientInit::InternalSwap(NotifyClientInit* other) {
  std::swap(data_, other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NotifyClientInit::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NotifyClientInit_descriptor_;
  metadata.reflection = NotifyClientInit_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// NotifyClientInit

// required .message.NoneCharacter2Client data = 1;
 bool NotifyClientInit::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void NotifyClientInit::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
 void NotifyClientInit::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
 void NotifyClientInit::clear_data() {
  if (data_ != NULL) data_->::message::NoneCharacter2Client::Clear();
  clear_has_data();
}
 const ::message::NoneCharacter2Client& NotifyClientInit::data() const {
  // @@protoc_insertion_point(field_get:message.NotifyClientInit.data)
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
 ::message::NoneCharacter2Client* NotifyClientInit::mutable_data() {
  set_has_data();
  if (data_ == NULL) {
    data_ = new ::message::NoneCharacter2Client;
  }
  // @@protoc_insertion_point(field_mutable:message.NotifyClientInit.data)
  return data_;
}
 ::message::NoneCharacter2Client* NotifyClientInit::release_data() {
  clear_has_data();
  ::message::NoneCharacter2Client* temp = data_;
  data_ = NULL;
  return temp;
}
 void NotifyClientInit::set_allocated_data(::message::NoneCharacter2Client* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
  // @@protoc_insertion_point(field_set_allocated:message.NotifyClientInit.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int UpdateInstanceStatusReq::kInstanceStatusFieldNumber;
#endif  // !_MSC_VER

UpdateInstanceStatusReq::UpdateInstanceStatusReq()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.UpdateInstanceStatusReq)
}

void UpdateInstanceStatusReq::InitAsDefaultInstance() {
}

UpdateInstanceStatusReq::UpdateInstanceStatusReq(const UpdateInstanceStatusReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message.UpdateInstanceStatusReq)
}

void UpdateInstanceStatusReq::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  instance_status_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UpdateInstanceStatusReq::~UpdateInstanceStatusReq() {
  // @@protoc_insertion_point(destructor:message.UpdateInstanceStatusReq)
  SharedDtor();
}

void UpdateInstanceStatusReq::SharedDtor() {
  instance_status_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void UpdateInstanceStatusReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateInstanceStatusReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UpdateInstanceStatusReq_descriptor_;
}

const UpdateInstanceStatusReq& UpdateInstanceStatusReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_gs2client_2eproto();
  return *default_instance_;
}

UpdateInstanceStatusReq* UpdateInstanceStatusReq::default_instance_ = NULL;

UpdateInstanceStatusReq* UpdateInstanceStatusReq::New(::google::protobuf::Arena* arena) const {
  UpdateInstanceStatusReq* n = new UpdateInstanceStatusReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UpdateInstanceStatusReq::Clear() {
  if (has_instance_status()) {
    instance_status_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool UpdateInstanceStatusReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.UpdateInstanceStatusReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes instance_status = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_instance_status()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.UpdateInstanceStatusReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.UpdateInstanceStatusReq)
  return false;
#undef DO_
}

void UpdateInstanceStatusReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.UpdateInstanceStatusReq)
  // required bytes instance_status = 1;
  if (has_instance_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->instance_status(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.UpdateInstanceStatusReq)
}

::google::protobuf::uint8* UpdateInstanceStatusReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.UpdateInstanceStatusReq)
  // required bytes instance_status = 1;
  if (has_instance_status()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->instance_status(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.UpdateInstanceStatusReq)
  return target;
}

int UpdateInstanceStatusReq::ByteSize() const {
  int total_size = 0;

  // required bytes instance_status = 1;
  if (has_instance_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->instance_status());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdateInstanceStatusReq::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const UpdateInstanceStatusReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UpdateInstanceStatusReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UpdateInstanceStatusReq::MergeFrom(const UpdateInstanceStatusReq& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_instance_status()) {
      set_has_instance_status();
      instance_status_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.instance_status_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void UpdateInstanceStatusReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateInstanceStatusReq::CopyFrom(const UpdateInstanceStatusReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateInstanceStatusReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void UpdateInstanceStatusReq::Swap(UpdateInstanceStatusReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateInstanceStatusReq::InternalSwap(UpdateInstanceStatusReq* other) {
  instance_status_.Swap(&other->instance_status_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UpdateInstanceStatusReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UpdateInstanceStatusReq_descriptor_;
  metadata.reflection = UpdateInstanceStatusReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UpdateInstanceStatusReq

// required bytes instance_status = 1;
 bool UpdateInstanceStatusReq::has_instance_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void UpdateInstanceStatusReq::set_has_instance_status() {
  _has_bits_[0] |= 0x00000001u;
}
 void UpdateInstanceStatusReq::clear_has_instance_status() {
  _has_bits_[0] &= ~0x00000001u;
}
 void UpdateInstanceStatusReq::clear_instance_status() {
  instance_status_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_instance_status();
}
 const ::std::string& UpdateInstanceStatusReq::instance_status() const {
  // @@protoc_insertion_point(field_get:message.UpdateInstanceStatusReq.instance_status)
  return instance_status_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void UpdateInstanceStatusReq::set_instance_status(const ::std::string& value) {
  set_has_instance_status();
  instance_status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message.UpdateInstanceStatusReq.instance_status)
}
 void UpdateInstanceStatusReq::set_instance_status(const char* value) {
  set_has_instance_status();
  instance_status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.UpdateInstanceStatusReq.instance_status)
}
 void UpdateInstanceStatusReq::set_instance_status(const void* value, size_t size) {
  set_has_instance_status();
  instance_status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.UpdateInstanceStatusReq.instance_status)
}
 ::std::string* UpdateInstanceStatusReq::mutable_instance_status() {
  set_has_instance_status();
  // @@protoc_insertion_point(field_mutable:message.UpdateInstanceStatusReq.instance_status)
  return instance_status_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* UpdateInstanceStatusReq::release_instance_status() {
  clear_has_instance_status();
  return instance_status_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void UpdateInstanceStatusReq::set_allocated_instance_status(::std::string* instance_status) {
  if (instance_status != NULL) {
    set_has_instance_status();
  } else {
    clear_has_instance_status();
  }
  instance_status_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), instance_status);
  // @@protoc_insertion_point(field_set_allocated:message.UpdateInstanceStatusReq.instance_status)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

UpdateInstanceStatusACK::UpdateInstanceStatusACK()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.UpdateInstanceStatusACK)
}

void UpdateInstanceStatusACK::InitAsDefaultInstance() {
}

UpdateInstanceStatusACK::UpdateInstanceStatusACK(const UpdateInstanceStatusACK& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message.UpdateInstanceStatusACK)
}

void UpdateInstanceStatusACK::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UpdateInstanceStatusACK::~UpdateInstanceStatusACK() {
  // @@protoc_insertion_point(destructor:message.UpdateInstanceStatusACK)
  SharedDtor();
}

void UpdateInstanceStatusACK::SharedDtor() {
  if (this != default_instance_) {
  }
}

void UpdateInstanceStatusACK::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateInstanceStatusACK::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UpdateInstanceStatusACK_descriptor_;
}

const UpdateInstanceStatusACK& UpdateInstanceStatusACK::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_gs2client_2eproto();
  return *default_instance_;
}

UpdateInstanceStatusACK* UpdateInstanceStatusACK::default_instance_ = NULL;

UpdateInstanceStatusACK* UpdateInstanceStatusACK::New(::google::protobuf::Arena* arena) const {
  UpdateInstanceStatusACK* n = new UpdateInstanceStatusACK;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UpdateInstanceStatusACK::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool UpdateInstanceStatusACK::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.UpdateInstanceStatusACK)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:message.UpdateInstanceStatusACK)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.UpdateInstanceStatusACK)
  return false;
#undef DO_
}

void UpdateInstanceStatusACK::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.UpdateInstanceStatusACK)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.UpdateInstanceStatusACK)
}

::google::protobuf::uint8* UpdateInstanceStatusACK::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.UpdateInstanceStatusACK)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.UpdateInstanceStatusACK)
  return target;
}

int UpdateInstanceStatusACK::ByteSize() const {
  int total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdateInstanceStatusACK::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const UpdateInstanceStatusACK* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UpdateInstanceStatusACK*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UpdateInstanceStatusACK::MergeFrom(const UpdateInstanceStatusACK& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void UpdateInstanceStatusACK::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateInstanceStatusACK::CopyFrom(const UpdateInstanceStatusACK& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateInstanceStatusACK::IsInitialized() const {

  return true;
}

void UpdateInstanceStatusACK::Swap(UpdateInstanceStatusACK* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateInstanceStatusACK::InternalSwap(UpdateInstanceStatusACK* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UpdateInstanceStatusACK::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UpdateInstanceStatusACK_descriptor_;
  metadata.reflection = UpdateInstanceStatusACK_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UpdateInstanceStatusACK

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int AddToyReq::kToyIdFieldNumber;
#endif  // !_MSC_VER

AddToyReq::AddToyReq()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.AddToyReq)
}

void AddToyReq::InitAsDefaultInstance() {
}

AddToyReq::AddToyReq(const AddToyReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message.AddToyReq)
}

void AddToyReq::SharedCtor() {
  _cached_size_ = 0;
  toy_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AddToyReq::~AddToyReq() {
  // @@protoc_insertion_point(destructor:message.AddToyReq)
  SharedDtor();
}

void AddToyReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void AddToyReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AddToyReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AddToyReq_descriptor_;
}

const AddToyReq& AddToyReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_gs2client_2eproto();
  return *default_instance_;
}

AddToyReq* AddToyReq::default_instance_ = NULL;

AddToyReq* AddToyReq::New(::google::protobuf::Arena* arena) const {
  AddToyReq* n = new AddToyReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AddToyReq::Clear() {
  toy_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool AddToyReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.AddToyReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 toy_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &toy_id_)));
          set_has_toy_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.AddToyReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.AddToyReq)
  return false;
#undef DO_
}

void AddToyReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.AddToyReq)
  // required int32 toy_id = 1;
  if (has_toy_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->toy_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.AddToyReq)
}

::google::protobuf::uint8* AddToyReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.AddToyReq)
  // required int32 toy_id = 1;
  if (has_toy_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->toy_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.AddToyReq)
  return target;
}

int AddToyReq::ByteSize() const {
  int total_size = 0;

  // required int32 toy_id = 1;
  if (has_toy_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->toy_id());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AddToyReq::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const AddToyReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AddToyReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AddToyReq::MergeFrom(const AddToyReq& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_toy_id()) {
      set_toy_id(from.toy_id());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void AddToyReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddToyReq::CopyFrom(const AddToyReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddToyReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void AddToyReq::Swap(AddToyReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddToyReq::InternalSwap(AddToyReq* other) {
  std::swap(toy_id_, other->toy_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AddToyReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AddToyReq_descriptor_;
  metadata.reflection = AddToyReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AddToyReq

// required int32 toy_id = 1;
 bool AddToyReq::has_toy_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void AddToyReq::set_has_toy_id() {
  _has_bits_[0] |= 0x00000001u;
}
 void AddToyReq::clear_has_toy_id() {
  _has_bits_[0] &= ~0x00000001u;
}
 void AddToyReq::clear_toy_id() {
  toy_id_ = 0;
  clear_has_toy_id();
}
 ::google::protobuf::int32 AddToyReq::toy_id() const {
  // @@protoc_insertion_point(field_get:message.AddToyReq.toy_id)
  return toy_id_;
}
 void AddToyReq::set_toy_id(::google::protobuf::int32 value) {
  set_has_toy_id();
  toy_id_ = value;
  // @@protoc_insertion_point(field_set:message.AddToyReq.toy_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int AddToyACK::kToyIdFieldNumber;
#endif  // !_MSC_VER

AddToyACK::AddToyACK()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.AddToyACK)
}

void AddToyACK::InitAsDefaultInstance() {
}

AddToyACK::AddToyACK(const AddToyACK& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message.AddToyACK)
}

void AddToyACK::SharedCtor() {
  _cached_size_ = 0;
  toy_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AddToyACK::~AddToyACK() {
  // @@protoc_insertion_point(destructor:message.AddToyACK)
  SharedDtor();
}

void AddToyACK::SharedDtor() {
  if (this != default_instance_) {
  }
}

void AddToyACK::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AddToyACK::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AddToyACK_descriptor_;
}

const AddToyACK& AddToyACK::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_gs2client_2eproto();
  return *default_instance_;
}

AddToyACK* AddToyACK::default_instance_ = NULL;

AddToyACK* AddToyACK::New(::google::protobuf::Arena* arena) const {
  AddToyACK* n = new AddToyACK;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AddToyACK::Clear() {
  toy_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool AddToyACK::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.AddToyACK)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 toy_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &toy_id_)));
          set_has_toy_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.AddToyACK)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.AddToyACK)
  return false;
#undef DO_
}

void AddToyACK::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.AddToyACK)
  // required int32 toy_id = 1;
  if (has_toy_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->toy_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.AddToyACK)
}

::google::protobuf::uint8* AddToyACK::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.AddToyACK)
  // required int32 toy_id = 1;
  if (has_toy_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->toy_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.AddToyACK)
  return target;
}

int AddToyACK::ByteSize() const {
  int total_size = 0;

  // required int32 toy_id = 1;
  if (has_toy_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->toy_id());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AddToyACK::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const AddToyACK* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AddToyACK*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AddToyACK::MergeFrom(const AddToyACK& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_toy_id()) {
      set_toy_id(from.toy_id());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void AddToyACK::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddToyACK::CopyFrom(const AddToyACK& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddToyACK::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void AddToyACK::Swap(AddToyACK* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddToyACK::InternalSwap(AddToyACK* other) {
  std::swap(toy_id_, other->toy_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AddToyACK::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AddToyACK_descriptor_;
  metadata.reflection = AddToyACK_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AddToyACK

// required int32 toy_id = 1;
 bool AddToyACK::has_toy_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void AddToyACK::set_has_toy_id() {
  _has_bits_[0] |= 0x00000001u;
}
 void AddToyACK::clear_has_toy_id() {
  _has_bits_[0] &= ~0x00000001u;
}
 void AddToyACK::clear_toy_id() {
  toy_id_ = 0;
  clear_has_toy_id();
}
 ::google::protobuf::int32 AddToyACK::toy_id() const {
  // @@protoc_insertion_point(field_get:message.AddToyACK.toy_id)
  return toy_id_;
}
 void AddToyACK::set_toy_id(::google::protobuf::int32 value) {
  set_has_toy_id();
  toy_id_ = value;
  // @@protoc_insertion_point(field_set:message.AddToyACK.toy_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int InstancePassReq::kInstanceIdFieldNumber;
#endif  // !_MSC_VER

InstancePassReq::InstancePassReq()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.InstancePassReq)
}

void InstancePassReq::InitAsDefaultInstance() {
}

InstancePassReq::InstancePassReq(const InstancePassReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message.InstancePassReq)
}

void InstancePassReq::SharedCtor() {
  _cached_size_ = 0;
  instance_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

InstancePassReq::~InstancePassReq() {
  // @@protoc_insertion_point(destructor:message.InstancePassReq)
  SharedDtor();
}

void InstancePassReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void InstancePassReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InstancePassReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return InstancePassReq_descriptor_;
}

const InstancePassReq& InstancePassReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_gs2client_2eproto();
  return *default_instance_;
}

InstancePassReq* InstancePassReq::default_instance_ = NULL;

InstancePassReq* InstancePassReq::New(::google::protobuf::Arena* arena) const {
  InstancePassReq* n = new InstancePassReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void InstancePassReq::Clear() {
  instance_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool InstancePassReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.InstancePassReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 instance_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &instance_id_)));
          set_has_instance_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.InstancePassReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.InstancePassReq)
  return false;
#undef DO_
}

void InstancePassReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.InstancePassReq)
  // required int32 instance_id = 1;
  if (has_instance_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->instance_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.InstancePassReq)
}

::google::protobuf::uint8* InstancePassReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.InstancePassReq)
  // required int32 instance_id = 1;
  if (has_instance_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->instance_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.InstancePassReq)
  return target;
}

int InstancePassReq::ByteSize() const {
  int total_size = 0;

  // required int32 instance_id = 1;
  if (has_instance_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->instance_id());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InstancePassReq::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const InstancePassReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const InstancePassReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void InstancePassReq::MergeFrom(const InstancePassReq& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_instance_id()) {
      set_instance_id(from.instance_id());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void InstancePassReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InstancePassReq::CopyFrom(const InstancePassReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InstancePassReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void InstancePassReq::Swap(InstancePassReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InstancePassReq::InternalSwap(InstancePassReq* other) {
  std::swap(instance_id_, other->instance_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata InstancePassReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = InstancePassReq_descriptor_;
  metadata.reflection = InstancePassReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// InstancePassReq

// required int32 instance_id = 1;
 bool InstancePassReq::has_instance_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void InstancePassReq::set_has_instance_id() {
  _has_bits_[0] |= 0x00000001u;
}
 void InstancePassReq::clear_has_instance_id() {
  _has_bits_[0] &= ~0x00000001u;
}
 void InstancePassReq::clear_instance_id() {
  instance_id_ = 0;
  clear_has_instance_id();
}
 ::google::protobuf::int32 InstancePassReq::instance_id() const {
  // @@protoc_insertion_point(field_get:message.InstancePassReq.instance_id)
  return instance_id_;
}
 void InstancePassReq::set_instance_id(::google::protobuf::int32 value) {
  set_has_instance_id();
  instance_id_ = value;
  // @@protoc_insertion_point(field_set:message.InstancePassReq.instance_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int InstancePassACK::kInstanceIdFieldNumber;
#endif  // !_MSC_VER

InstancePassACK::InstancePassACK()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.InstancePassACK)
}

void InstancePassACK::InitAsDefaultInstance() {
}

InstancePassACK::InstancePassACK(const InstancePassACK& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:message.InstancePassACK)
}

void InstancePassACK::SharedCtor() {
  _cached_size_ = 0;
  instance_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

InstancePassACK::~InstancePassACK() {
  // @@protoc_insertion_point(destructor:message.InstancePassACK)
  SharedDtor();
}

void InstancePassACK::SharedDtor() {
  if (this != default_instance_) {
  }
}

void InstancePassACK::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InstancePassACK::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return InstancePassACK_descriptor_;
}

const InstancePassACK& InstancePassACK::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_gs2client_2eproto();
  return *default_instance_;
}

InstancePassACK* InstancePassACK::default_instance_ = NULL;

InstancePassACK* InstancePassACK::New(::google::protobuf::Arena* arena) const {
  InstancePassACK* n = new InstancePassACK;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void InstancePassACK::Clear() {
  instance_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool InstancePassACK::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.InstancePassACK)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 instance_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &instance_id_)));
          set_has_instance_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.InstancePassACK)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.InstancePassACK)
  return false;
#undef DO_
}

void InstancePassACK::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.InstancePassACK)
  // required int32 instance_id = 1;
  if (has_instance_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->instance_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.InstancePassACK)
}

::google::protobuf::uint8* InstancePassACK::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.InstancePassACK)
  // required int32 instance_id = 1;
  if (has_instance_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->instance_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.InstancePassACK)
  return target;
}

int InstancePassACK::ByteSize() const {
  int total_size = 0;

  // required int32 instance_id = 1;
  if (has_instance_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->instance_id());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InstancePassACK::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const InstancePassACK* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const InstancePassACK*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void InstancePassACK::MergeFrom(const InstancePassACK& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_instance_id()) {
      set_instance_id(from.instance_id());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void InstancePassACK::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InstancePassACK::CopyFrom(const InstancePassACK& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InstancePassACK::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void InstancePassACK::Swap(InstancePassACK* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InstancePassACK::InternalSwap(InstancePassACK* other) {
  std::swap(instance_id_, other->instance_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata InstancePassACK::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = InstancePassACK_descriptor_;
  metadata.reflection = InstancePassACK_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// InstancePassACK

// required int32 instance_id = 1;
 bool InstancePassACK::has_instance_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void InstancePassACK::set_has_instance_id() {
  _has_bits_[0] |= 0x00000001u;
}
 void InstancePassACK::clear_has_instance_id() {
  _has_bits_[0] &= ~0x00000001u;
}
 void InstancePassACK::clear_instance_id() {
  instance_id_ = 0;
  clear_has_instance_id();
}
 ::google::protobuf::int32 InstancePassACK::instance_id() const {
  // @@protoc_insertion_point(field_get:message.InstancePassACK.instance_id)
  return instance_id_;
}
 void InstancePassACK::set_instance_id(::google::protobuf::int32 value) {
  set_has_instance_id();
  instance_id_ = value;
  // @@protoc_insertion_point(field_set:message.InstancePassACK.instance_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace message

// @@protoc_insertion_point(global_scope)
